!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("crypto")):"function"==typeof define&&define.amd?define(["exports","crypto"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).faceapi=e.faceapi||{},e.crypto)}(this,function(u,o){"use strict";function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var F=l(o);class h{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class p{refCount(e){return f("refCount")}incRef(e){return f("incRef")}timerAvailable(){return!0}time(e){return f("time")}read(e){return f("read")}readSync(e){return f("readSync")}readToGPU(e,t){return f("readToGPU")}numDataIds(){return f("numDataIds")}disposeData(e,t){return f("disposeData")}write(e,t,n){return f("write")}move(e,t,n,r,a){return f("move")}memory(){return f("memory")}floatPrecision(){return f("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return f("dispose")}}function f(e){throw new Error(`'${e}' not yet implemented or not found in the registry. `+"This kernel may not be supported by the tfjs backend you have chosen")}function D(e){let t=e.length;for(var n;0<t;)n=Math.random()*t|0,g(e,--t,n)}function m(e,t,n){return Math.max(e,Math.min(t,n))}function W(e){return e%2==0?e:e+1}function g(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function V(t){let n=0;for(let e=0;e<t.length;e++)n+=t[e];return n}function z(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function G(e,t,n=""){z(ce(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function j(e){z(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function q(t,n=[],r=!1){if(null==n&&(n=[]),Array.isArray(t)||oe(t)&&!r)for(let e=0;e<t.length;++e)q(t[e],n,r);else n.push(t);return n}function U(t){if(0===t.length)return 1;let n=t[0];for(let e=1;e<t.length;e++)n*=t[e];return n}function ce(t,n){if(t===n)return!0;if(null==t||null==n)return!1;if(t.length!==n.length)return!1;for(let e=0;e<t.length;e++)if(t[e]!==n[e])return!1;return!0}function K(e){return e%1==0}function X(e){var t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function Y(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function J(s,i=e=>0,o){return new Promise((t,n)=>{let r=0;const a=()=>{var e;s()?t():(r++,e=i(r),null!=o&&r>=o?n():setTimeout(a,e))};a()})}function Z(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(0<=t[e])n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. "+`Found -1 at dim ${r} and dim `+e);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim `+e);if(-1===r){if(0<e&&e!==n)throw Error(`Size(${e}) must match the product of shape `+t);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when `+"there are 0 elements");if(e%n!=0)throw Error("The implicit shape can't be a fractional number. "+`Got ${e} / `+n);const a=t.slice();return a[r]=e/n,a}function Q(e,t){const n=t.length;return z((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but `+"got axis "+e),z(e.every(e=>K(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function he(t,e){const n=[],r=[];var a=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||a?null:Q(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=s){if(s[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==s[i]||s[i]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),s[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function ee(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function te(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function ne(t,n){for(let e=0;e<t.length;e++){var r=t[e];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${n} being uploaded contains ${r}.`)}}function re(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function ae(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function oe(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function ue(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function le(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function pe(e){return"string"==typeof e||e instanceof String}function de(e){return"boolean"==typeof e}function fe(e){return"number"==typeof e}function me(e){return Array.isArray(e)?me(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":fe(e)?"float32":pe(e)?"string":de(e)?"bool":"float32"}function ge(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ye(t,n){for(let e=n;e<t;++e)if(t%e==0)return e;return t}function se(t){var n=t.length;if(n<2)return[];const r=new Array(n-1);r[n-2]=t[n-1];for(let e=n-3;0<=e;--e)r[e]=r[e+1]*t[e+1];return r}function ve(e,t,n=!1){if(0===e.length)return t[0];var r=e.reduce((e,t)=>e*t)*(n?2:1);if(0==r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return function t(n,e,r,a=!1){const s=new Array;if(1===e.length){var i=e[0]*(a?2:1);for(let e=0;e<i;e++)s[e]=r[n+e]}else{var o=e[0];const l=e.slice(1);var u=l.reduce((e,t)=>e*t)*(a?2:1);for(let e=0;e<o;e++)s[e]=t(n+e*u,l,r,a)}return s}(0,e,t,n)}function be(e,t){const n=xe(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function xe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function we(e,t){var n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return ve(e,new Float32Array(n));if("int32"===t)return ve(e,new Int32Array(n));if("bool"===t)return ve(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function ke(t){t.forEach(e=>{z(Number.isInteger(e)&&0<=e,()=>"Tensor must have a shape comprised of positive integers but got "+`shape [${t}].`)})}function Ne(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function Ie(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function Se(e){return e&&e.then&&"function"==typeof e.then}const Te="tfjsflags";class Ce{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ee,this.populateURLFlags()}setPlatform(e,t){null==this.platform||N.getBool("IS_TEST")||N.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. `+`Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]&&(t=this.urlFlags[e],N.getBool("IS_TEST")||N.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t))}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];var t=this.evaluateFlag(e);if(Se(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. `+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){const e=this.getQueryParams(this.global.location.search);if(Te in e){const t=e[Te].split(",");t.forEach(e=>{var[e,t]=e.split(":");this.urlFlags[e]=function(e,t){{if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t}throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(e,t)})}}}}function Ee(e){const s={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...t)=>{var n,r,a;return n=s,r=t[0],a=t[1],n[decodeURIComponent(r)]=decodeURIComponent(a||""),t.join("=")}),s}function _e(){return N}let N=null;let Ae;function $e(){if(null==Ae){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ae=e}return Ae}function Re(e,t){const n=function(){const e=$e();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();return n.has(e)||(t=t(),n.set(e,t)),n.get(e)}const Fe="Abs",De="Acos",Oe="Acosh",Me="Add",Le="AddN",ze="All",Pe="Any",Be="ArgMax",We="ArgMin",Ve="Asin",Ue="Asinh",Ge="Atan",je="Atanh",He="Atan2",qe="AvgPool",Ke="AvgPoolGrad",Xe="AvgPool3D",Ye="AvgPool3DGrad",Je="BatchMatMul",Ze="BatchToSpaceND",Qe="Bincount";o="BroadcastTo";const et="BroadcastArgs",tt="Cast",nt="Ceil",rt="ClipByValue",at="Complex",st="ComplexAbs",it="Concat",ot="Conv2D",ut="Conv2DBackpropFilter",lt="Conv2DBackpropInput",ct="Conv3D",ht="Conv3DBackpropFilterV2",pt="Conv3DBackpropInputV2",dt="Cos",ft="Cosh",mt="Cumprod",gt="Cumsum",yt="CropAndResize",vt="DenseBincount",bt="DepthToSpace",xt="DepthwiseConv2dNative",wt="DepthwiseConv2dNativeBackpropFilter",kt="DepthwiseConv2dNativeBackpropInput",Nt="Diag",It="Dilation2D",St="Dilation2DBackpropInput",Tt="Dilation2DBackpropFilter",Ct="RealDiv",Et="Einsum",_t="Elu",At="EluGrad",$t="Erf",Rt="Equal",Ft="Exp",Dt="ExpandDims",Ot="Expm1",Mt="FFT",Lt="Fill",zt="FlipLeftRight",Pt="Floor",Bt="FloorDiv",Wt="FusedBatchNorm",Vt="GatherV2",Ut="GatherNd",Gt="Greater",jt="GreaterEqual",Ht="Identity",qt="IFFT",Kt="Imag",Xt="IsFinite",Yt="IsInf",Jt="IsNan",Zt="LeakyRelu",Qt="Less",en="LessEqual",tn="LinSpace",nn="Log",rn="Log1p",an="LogicalAnd",sn="LogicalNot",on="LogicalOr";var un="LogSoftmax";const ln="LRN",cn="LRNGrad",hn="Max",pn="Maximum",dn="MaxPool",fn="MaxPoolGrad",mn="MaxPool3D",gn="MaxPool3DGrad",yn="MaxPoolWithArgmax",vn="Mean",bn="Min",xn="Minimum",wn="MirrorPad",kn="Mod",Nn="Multinomial",In="Multiply",Sn="Neg",Tn="NotEqual",Cn="NonMaxSuppressionV3",En="NonMaxSuppressionV4",_n="NonMaxSuppressionV5",An="OnesLike",$n="OneHot",Rn="Pack",Fn="PadV2";const Dn="Pow",On="Prelu",Mn="Prod",Ln="Range",zn="Real",Pn="Reciprocal",Bn="Relu",Wn="Reshape",Vn="ResizeNearestNeighbor",Un="ResizeNearestNeighborGrad",Gn="ResizeBilinear",jn="ResizeBilinearGrad",Hn="Relu6",qn="Reverse",Kn="Round",Xn="Rsqrt",Yn="ScatterNd",Jn="Select",Zn="Selu",Qn="Slice",er="Sin",tr="Sinh",nr="Sign",rr="Sigmoid",ar="Softplus",sr="Sqrt",ir="Sum",or="SpaceToBatchND",ur="SplitV",lr="Softmax",cr="SparseFillEmptyRows",hr="SparseReshape",pr="SparseSegmentMean",dr="SparseSegmentSum",fr="SparseToDense",mr="SquaredDifference";var gr="Square";const yr="StridedSlice",vr="StringNGrams",br="StringSplit",xr="StringToHashBucketFast",wr="Sub",kr="Tan",Nr="Tanh",Ir="Tile",Sr="TopK",Tr="Transform",Cr="Transpose",Er="Unique",_r="Unpack",Ar="UnsortedSegmentSum",$r="ZerosLike",Rr="Step",Fr="FromPixels",Dr="RotateWithOffset",Or="_FusedMatMul",Mr="FusedConv2D",Lr="FusedDepthwiseConv2D";function zr(...e){N.getBool("IS_TEST")||N.getBool("PROD")||console.warn(...e)}const Pr=Re("kernelRegistry",()=>new Map),Br=Re("gradRegistry",()=>new Map);function Wr(e,t){t=t+"_"+e;return Pr.get(t)}function Vr(e){return Br.get(e)}function Ur(e){const t=Pr.entries(),n=[];for(;;){var{done:r,value:a}=t.next();if(r)break;const[s,i]=a;var[r]=s.split("_");r===e&&n.push(i)}return n}function Gr(e){var{kernelName:t,backendName:n}=e,r=n+"_"+t;Pr.has(r)&&zr(`The kernel '${t}' for backend `+`'${n}' is already registered`),Pr.set(r,e)}function jr(e){var t=e["kernelName"];Br.has(t)&&N.getBool("DEBUG")&&zr(`Overriding the gradient for '${t}'`),Br.set(t,e)}var Hr=Kr,qr=null;try{qr=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Kr(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function Xr(e){return!0===(e&&e.__isLong__)}Object.defineProperty(Kr.prototype,"__isLong__",{value:!0}),Kr.isLong=Xr;var Yr={},Jr={};function Zr(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=Jr[e])?r:(n=ea(e,(0|e)<0?-1:0,!0),a&&(Jr[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=Yr[e])?r:(n=ea(e,e<0?-1:0,!1),a&&(Yr[e]=n),n)}function Qr(e,t){if(isNaN(e))return t?la:ua;if(t){if(e<0)return la;if(sa<=e)return fa}else{if(e<=-ia)return ma;if(ia<=e+1)return da}return e<0?Qr(-e,t).neg():ea(e%aa|0,e/aa|0,t)}function ea(e,t,n){return new Kr(e,t,n)}Kr.fromInt=Zr,Kr.fromNumber=Qr,Kr.fromBits=ea;var ta=Math.pow;function na(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return ua;if(t="number"==typeof t?(n=t,!1):!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if(0<(r=e.indexOf("-")))throw Error("interior hyphen");if(0===r)return na(e.substring(1),t,n).neg();for(var a=Qr(ta(n,8)),s=ua,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);s=o<8?(o=Qr(ta(n,o)),s.mul(o).add(Qr(u))):(s=s.mul(a)).add(Qr(u))}return s.unsigned=t,s}function ra(e,t){return"number"==typeof e?Qr(e,t):"string"==typeof e?na(e,t):ea(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}Kr.fromString=na,Kr.fromValue=ra;var aa=4294967296,sa=aa*aa,ia=sa/2,oa=Zr(1<<24),ua=Zr(0),la=(Kr.ZERO=ua,Zr(0,!0)),ca=(Kr.UZERO=la,Zr(1)),ha=(Kr.ONE=ca,Zr(1,!0)),pa=(Kr.UONE=ha,Zr(-1)),da=(Kr.NEG_ONE=pa,ea(-1,2147483647,!1)),fa=(Kr.MAX_VALUE=da,ea(-1,-1,!0)),ma=(Kr.MAX_UNSIGNED_VALUE=fa,ea(0,-2147483648,!1)),e=(Kr.MIN_VALUE=ma,Kr.prototype);e.toInt=function(){return this.unsigned?this.low>>>0:this.low},e.toNumber=function(){return this.unsigned?(this.high>>>0)*aa+(this.low>>>0):this.high*aa+(this.low>>>0)},e.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";var t,n;if(this.isNegative())return this.eq(ma)?(n=Qr(e),n=(t=this.div(n)).mul(n).sub(this),t.toString(e)+n.toInt().toString(e)):"-"+this.neg().toString(e);for(var r=Qr(ta(e,6),this.unsigned),a=this,s="";;){var i=a.div(r),o=(a.sub(i.mul(r)).toInt()>>>0).toString(e);if((a=i).isZero())return o+s;for(;o.length<6;)o="0"+o;s=""+o+s}},e.getHighBits=function(){return this.high},e.getHighBitsUnsigned=function(){return this.high>>>0},e.getLowBits=function(){return this.low},e.getLowBitsUnsigned=function(){return this.low>>>0},e.getNumBitsAbs=function(){if(this.isNegative())return this.eq(ma)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;0<t&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},e.isZero=function(){return 0===this.high&&0===this.low},e.eqz=e.isZero,e.isNegative=function(){return!this.unsigned&&this.high<0},e.isPositive=function(){return this.unsigned||0<=this.high},e.isOdd=function(){return 1==(1&this.low)},e.isEven=function(){return 0==(1&this.low)},e.equals=function(e){return Xr(e)||(e=ra(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},e.eq=e.equals,e.notEquals=function(e){return!this.eq(e)},e.neq=e.notEquals,e.ne=e.notEquals,e.lessThan=function(e){return this.comp(e)<0},e.lt=e.lessThan,e.lessThanOrEqual=function(e){return this.comp(e)<=0},e.lte=e.lessThanOrEqual,e.le=e.lessThanOrEqual,e.greaterThan=function(e){return 0<this.comp(e)},e.gt=e.greaterThan,e.greaterThanOrEqual=function(e){return 0<=this.comp(e)},e.gte=e.greaterThanOrEqual,e.ge=e.greaterThanOrEqual,e.compare=function(e){if(Xr(e)||(e=ra(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},e.comp=e.compare,e.negate=function(){return!this.unsigned&&this.eq(ma)?ma:this.not().add(ca)},e.neg=e.negate,e.add=function(e){Xr(e)||(e=ra(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,s=e.high>>>16,i=65535&e.high,o=e.low>>>16,u=0,l=0,c=0,h=0;return l+=(c=c+((h+=a+(65535&e.low))>>>16)+(r+o))>>>16,ea((c&=65535)<<16|(h&=65535),((u+=(l+=n+i)>>>16)+(t+s)&65535)<<16|(l&=65535),this.unsigned)},e.subtract=function(e){return Xr(e)||(e=ra(e)),this.add(e.neg())},e.sub=e.subtract,e.multiply=function(e){if(this.isZero())return ua;if(Xr(e)||(e=ra(e)),qr)return ea(qr.mul(this.low,this.high,e.low,e.high),qr.get_high(),this.unsigned);if(e.isZero())return ua;if(this.eq(ma))return e.isOdd()?ma:ua;if(e.eq(ma))return this.isOdd()?ma:ua;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(oa)&&e.lt(oa))return Qr(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,s=e.high>>>16,i=65535&e.high,o=e.low>>>16,e=65535&e.low,u=0,l=0,c=0,h=(h=0)+((l=l+((c+=a*e)>>>16)+r*e)>>>16)+((l=(l&65535)+a*o)>>>16);return ea((l&=65535)<<16|(c&=65535),((u+=(h+=n*e)>>>16)+((h=(h&65535)+r*o)>>>16)+((h=(h&65535)+a*i)>>>16)+(t*e+n*o+r*i+a*s)&65535)<<16|(h&=65535),this.unsigned)},e.mul=e.multiply,e.divide=function(e){if((e=Xr(e)?e:ra(e)).isZero())throw Error("division by zero");var t,n,r;if(qr)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?ea((this.unsigned?qr.div_u:qr.div_s)(this.low,this.high,e.low,e.high),qr.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?la:ua;if(this.unsigned){if((e=e.unsigned?e:e.toUnsigned()).gt(this))return la;if(e.gt(this.shru(1)))return ha;n=la}else{if(this.eq(ma))return e.eq(ca)||e.eq(pa)?ma:e.eq(ma)?ca:(r=this.shr(1).div(e).shl(1)).eq(ua)?e.isNegative()?ca:pa:(t=this.sub(e.mul(r)),r.add(t.div(e)));if(e.eq(ma))return this.unsigned?la:ua;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();n=ua}for(t=this;t.gte(e);){r=Math.max(1,Math.floor(t.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(r)/Math.LN2),s=a<=48?1:ta(2,a-48),i=Qr(r),o=i.mul(e);o.isNegative()||o.gt(t);)o=(i=Qr(r-=s,this.unsigned)).mul(e);i.isZero()&&(i=ca),n=n.add(i),t=t.sub(o)}return n},e.div=e.divide,e.modulo=function(e){return Xr(e)||(e=ra(e)),qr?ea((this.unsigned?qr.rem_u:qr.rem_s)(this.low,this.high,e.low,e.high),qr.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},e.mod=e.modulo,e.rem=e.modulo,e.not=function(){return ea(~this.low,~this.high,this.unsigned)},e.and=function(e){return Xr(e)||(e=ra(e)),ea(this.low&e.low,this.high&e.high,this.unsigned)},e.or=function(e){return Xr(e)||(e=ra(e)),ea(this.low|e.low,this.high|e.high,this.unsigned)},e.xor=function(e){return Xr(e)||(e=ra(e)),ea(this.low^e.low,this.high^e.high,this.unsigned)},e.shiftLeft=function(e){return Xr(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?ea(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):ea(0,this.low<<e-32,this.unsigned)},e.shl=e.shiftLeft,e.shiftRight=function(e){return Xr(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?ea(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):ea(this.high>>e-32,0<=this.high?0:-1,this.unsigned)},e.shr=e.shiftRight,e.shiftRightUnsigned=function(e){var t;return Xr(e)&&(e=e.toInt()),0===(e&=63)?this:(t=this.high,e<32?ea(this.low>>>e|t<<32-e,t>>>e,this.unsigned):ea(32===e?t:t>>>e-32,0,this.unsigned))},e.shru=e.shiftRightUnsigned,e.shr_u=e.shiftRightUnsigned,e.toSigned=function(){return this.unsigned?ea(this.low,this.high,!1):this},e.toUnsigned=function(){return this.unsigned?this:ea(this.low,this.high,!0)},e.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},e.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},e.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},Kr.fromBytes=function(e,t,n){return n?Kr.fromBytesLE(e,t):Kr.fromBytesBE(e,t)},Kr.fromBytesLE=function(e,t){return new Kr(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Kr.fromBytesBE=function(e,t){return new Kr(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const ga=Hr;function ya(e){return ga.fromString(e,!0,16)}const va=ya("c3a5c85c97cb3127"),ba=ya("b492b66fbe98f273"),xa=ya("9ae16a3b2f90404f");function wa(e){return e.xor(e.shru(47))}function ka(e,t,n){e=e.slice(t,t+n);return ga.fromBytes(Array.from(e),!0,!0)}function Na(e,t){return ka(e,t,8)}function Ia(e,t){return ka(e,t,4)}function Sa(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ta(e,t,n=ya("9ddfea08eb382d69")){let r=e.xor(t).mul(n),a=(r=r.xor(r.shru(47)),t.xor(r).mul(n));return a=(a=a.xor(a.shru(47))).mul(n)}function Ca(e,t,n,r){return a=Na(e,t),s=Na(e,t+8),i=Na(e,t+16),e=Na(e,t+24),t=r,r=(r=n).add(a),t=Sa(t.add(r).add(e),21),r=(r=(a=r).add(s)).add(i),t=t.add(Sa(r,44)),[r.add(e),t.add(a)];var a,s,i}function Ea(e,t=e.length){const n=ga.fromNumber(81,!0);if(t<=32)return(t<=16?function(e,t=e.length){var n,r;if(8<=t)return r=xa.add(2*t),a=Na(e,0).add(xa),Ta(Sa(n=Na(e,t-8),37).mul(r).add(a),Sa(a,25).add(n).mul(r),r);if(4<=t){var a=xa.add(2*t);const s=Ia(e,0);return Ta(s.shl(3).add(t),Ia(e,t-4),a)}return 0<t?(n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2),wa(xa.mul(n).xor(va.mul(r))).mul(xa)):xa}:function(e,t=e.length){var n=xa.add(2*t);const r=Na(e,0).mul(ba),a=Na(e,8);var s=Na(e,t-8).mul(n),t=Na(e,t-16).mul(xa);return Ta(Sa(r.add(a),43).add(Sa(s,30)).add(t),r.add(Sa(a.add(xa),18)).add(s),n)})(e,t);if(t<=64)return function(e,t=e.length){var n=xa.add(2*t);const r=Na(e,0).mul(xa),a=Na(e,8);var s=Na(e,t-8).mul(n),i=Na(e,t-16).mul(xa);const o=Sa(r.add(a),43).add(Sa(s,30)).add(i),u=Ta(o,r.add(Sa(a.add(xa),18)).add(s),n),l=Na(e,16).mul(n),c=Na(e,24);return i=o.add(Na(e,t-32)).mul(n),s=u.add(Na(e,t-24)).mul(n),Ta(Sa(l.add(c),43).add(Sa(i,30)).add(s),l.add(Sa(c.add(r),18)).add(i),n)}(e,t);let r=n,a=n.mul(ba).add(113),s=wa(a.mul(xa).add(113)).mul(xa),i=[ga.UZERO,ga.UZERO],o=[ga.UZERO,ga.UZERO],u=(r=r.mul(xa).add(Na(e,0)),0);for(var l=64*(t-1>>6),c=l+(t-1&63)-63;r=Sa(r.add(a).add(i[0]).add(Na(e,u+8)),37).mul(ba),a=Sa(a.add(i[1]).add(Na(e,u+48)),42).mul(ba),r=r.xor(o[1]),a=a.add(i[0]).add(Na(e,u+40)),s=Sa(s.add(o[0]),33).mul(ba),i=Ca(e,u,i[1].mul(ba),r.add(o[0])),o=Ca(e,u+32,s.add(o[1]),a.add(Na(e,u+16))),[s,r]=[r,s],(u+=64)!==l;);var h=ba.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Sa(r.add(a).add(i[0]).add(Na(e,u+8)),37).mul(h),a=Sa(a.add(i[1]).add(Na(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Na(e,u+40))),s=Sa(s.add(o[0]),33).mul(h),i=Ca(e,u,i[1].mul(h),r.add(o[0])),o=Ca(e,u+32,s.add(o[1]),a.add(Na(e,u+16))),[s,r]=[r,s],Ta(Ta(i[0],o[0],h).add(wa(a).mul(va)).add(s),Ta(i[1],o[1],h).add(r),h)}function _a(e,t){return"string"===t?Fa(e):Aa([e],t)}function Aa(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=q(t)),N.getBool("DEBUG")&&ne(t,e),r=e,(n=t)instanceof Float32Array&&"float32"===r||n instanceof Int32Array&&"int32"===r||n instanceof Uint8Array&&"bool"===r)return t;var n,r;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"!==e)throw new Error("Unknown data type "+e);{const a=new Uint8Array(t.length);for(let e=0;e<a.length;++e)0!==Math.round(t[e])&&(a[e]=1);return a}}function $a(){return N.platform.now()}function Ra(e,t){return N.platform.fetch(e,t)}function Fa(e,t="utf-8"){return t=t||"utf-8",N.platform.encode(e,t)}function Da(e,t="utf-8"){return t=t||"utf-8",N.platform.decode(e,t)}var Oa,e=Object.freeze({__proto__:null,createScalarValue:_a,toTypedArray:Aa,now:$a,fetch:Ra,encodeString:Fa,decodeString:Da,shuffle:D,shuffleCombo:function(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n=e.length;for(var r;0<n;)r=Math.random()*n|0,g(e,--n,r),g(t,n,r)},clamp:m,nearestLargerEven:W,swap:g,sum:V,randUniform:function(e,t){var n=Math.random();return t*n+(1-n)*e},distSquared:function(t,n){let r=0;for(let e=0;e<t.length;e++){var a=Number(t[e])-Number(n[e]);r+=a*a}return r},assert:z,assertShapesMatch:G,assertNonNull:j,flatten:q,sizeFromShape:U,isScalarShape:function(e){return 0===e.length},arraysEqual:ce,isInt:K,tanh:function(e){return null!=Math.tanh?Math.tanh(e):e===1/0?1:e===-1/0?-1:((e=Math.exp(2*e))-1)/(e+1)},sizeToSquarishShape:X,createShuffledIndices:function(t){const n=new Uint32Array(t);for(let e=0;e<t;++e)n[e]=e;return D(n),n},rightPad:Y,repeatedTry:J,inferFromImplicitShape:Z,parseAxisParam:Q,squeezeShape:he,getTypedArrayFromDType:ee,getArrayFromDType:te,checkConversionForErrors:ne,isValidDtype:re,hasEncodingLoss:ae,isTypedArray:oe,bytesPerElement:ue,bytesFromStringArray:le,isString:pe,isBoolean:de,isNumber:fe,inferDtype:me,isFunction:ge,nearestDivisor:ye,computeStrides:se,toNestedArray:ve,makeOnesTypedArray:be,makeZerosTypedArray:xe,makeZerosNestedTypedArray:we,assertNonNegativeIntegerDimensions:ke,locToIndex:Ne,indexToLoc:Ie,isPromise:Se,hexToLong:ya,fingerPrint64:Ea});class Ma{constructor(e,t){this.backendTimer=e,null==(this.logger=t)&&(this.logger=new La)}profileKernel(a,e,t){let n;var r=()=>{n=t()};let s;var i=$a();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const o of n)o.dataSync();s=Promise.resolve({kernelMs:$a()-i})}if(N.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let e=0;e<n.length;e++){const u=n[e];u.data().then(e=>{var t=e,e=u.dtype,n=a;if("float32"===e)for(let e=0;e<t.length;e++){var r=t[e];if(isNaN(r)||!isFinite(r))return void console.warn(`Found ${r} in the result of '${n}'`)}})}return{kernelName:a,outputs:n,inputs:e,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:t,timeMs:r,inputs:a,extraInfo:s}=e;t.forEach(t=>{Promise.all([t.data(),r,s]).then(e=>{this.logger.logKernelProfile(n,t,e[0],e[1],a,e[2])})})}}class La{logKernelProfile(e,t,n,r,a,s){var r="number"==typeof r?Y(r+"ms",9):r.error,e=Y(e,25),i=t.rank,o=t.size,u=Y(t.shape.toString(),14);let l="";for(const e in a){var c,h=a[e];null!=h&&(c=(h=h.shape||t.shape).length,l+=e+`: ${c}D ${0<c?h:""} `)}console.log(`%c${e}	%c${r}	%c${i}D ${u}	%c${o}	%c${l}	%c`+s,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const za=20,Pa=3,Ba=7;function Wa(e,t,n,r){var a=se(t),s=function(e,t,n,r){const a=U(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Ga(e):e;if(1<o)for(let e=0;e<a/s;e++){var l=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Va(u[l+e],0,n).length)}return i}(e,t,n,a),i=t.length;const o=function t(n,e,r,a,s,i=!0){const o="complex64"===r?2:1;const u=e[0];const l=e.length;if(0===l){if("complex64"!==r)return"bool"===r?[Ua(n[0])]:[n[0].toString()];{const g=Ga(n);return[Va(g[0],0,r)]}}if(1===l){if(u>za){const v=Pa*o;let e=Array.from(n.slice(0,v)),t=Array.from(n.slice((u-Pa)*o,u*o));return"complex64"===r&&(e=Ga(e),t=Ga(t)),["["+e.map((e,t)=>Va(e,s[t],r)).join(", ")+", ..., "+t.map((e,t)=>Va(e,s[u-Pa+t],r)).join(", ")+"]"]}const y="complex64"===r?Ga(n):Array.from(n);return["["+y.map((e,t)=>Va(e,s[t],r)).join(", ")+"]"]}const c=e.slice(1);const h=a.slice(1);const p=a[0]*o;const d=[];if(u>za){for(let e=0;e<Pa;e++){const b=e*p,x=b+p;d.push(...t(n.slice(b,x),c,r,h,s,!1))}d.push("...");for(let e=u-Pa;e<u;e++){const w=e*p,k=w+p;d.push(...t(n.slice(w,k),c,r,h,s,e===u-1))}}else for(let e=0;e<u;e++){const N=e*p,I=N+p;d.push(...t(n.slice(N,I),c,r,h,s,e===u-1))}const f=2===l?",":"";d[0]="["+d[0]+f;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+f;let m=",\n";for(let e=2;e<l;e++)m+="\n";d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":m);return d}(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function Va(e,t,n){let r;return Y(r=Array.isArray(e)?parseFloat(e[0].toFixed(Ba))+" + "+parseFloat(e[1].toFixed(Ba))+"j":pe(e)?`'${e}'`:"bool"===n?Ua(e):parseFloat(e.toFixed(Ba)).toString(),t)}function Ua(e){return 0===e?"false":"true"}function Ga(t){const n=[];for(let e=0;e<t.length;e+=2)n.push([t[e],t[e+1]]);return n}class ja{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=U(e),null!=n){const r=n.length;z(r===this.size,()=>`Length of values '${r}' does not match the size `+`inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||te(t,this.size),this.strides=se(e)}set(e,...t){z((t=0===t.length?[0]:t).length===this.rank,()=>`The number of provided coordinates (${t.length}) must `+`match the rank (${this.rank})`);var n=this.locToIndex(t);this.values[n]=e}get(...t){let e=0;for(const a of t=0===t.length?[0]:t){var n;if(a<0||a>=this.shape[e])throw n=`Requested out of range element at ${t}. `+"  Buffer shape="+this.shape,new Error(n);e++}let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=this.strides[e]*t[e];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return n}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const n=new Array(this.shape.length);for(let e=0;e<n.length-1;++e)n[e]=Math.floor(t/this.strides[e]),t-=n[e]*this.strides[e];return n[n.length-1]=t,n}get rank(){return this.shape.length}toTensor(){return Ha().makeTensor(this.values,this.shape,this.dtype)}}let Ha=null,qa=null;class v{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=U(e),this.strides=se(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){var e=await this.data();return qa.buffer(this.shape,this.dtype,e)}bufferSync(){return qa.buffer(this.shape,this.dtype,this.dataSync())}async array(){var e=await this.data();return ve(this.shape,e,"complex64"===this.dtype)}arraySync(){return ve(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();var e=Ha().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Da(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ha().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ha().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Da(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();var e=await Ha().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ha().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return qa.print(this,e)}clone(){return this.throwIfDisposed(),qa.clone(this)}toString(e=!1){return Wa(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),qa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ha().makeVariable(this,e,t,n)}}function t(){return Re("Tensor",()=>v)}Object.defineProperty(v,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),t();class Ka extends v{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and `+`previous value (${this.dtype}) must match`);if(!ce(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and `+`previous value (${this.shape}) must match`);Ha().disposeTensor(this),this.dataId=e.dataId,Ha().incRef(this,null)}dispose(){Ha().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ka,Symbol.hasInstance,{value:e=>e instanceof v&&null!=e.assign&&e.assign instanceof Function}),(Hr=Oa=Oa||{}).R0="R0",Hr.R1="R1",Hr.R2="R2",Hr.R3="R3",Hr.R4="R4",Hr.R5="R5",Hr.R6="R6",(Hr=Ps=Ps||{}).float32="float32",Hr.int32="int32",Hr.bool="int32",Hr.complex64="complex64",(Hr=Hs=Hs||{}).float32="float32",Hr.int32="int32",Hr.bool="bool",Hr.complex64="complex64",(Hr=hs=hs||{}).float32="float32",Hr.int32="float32",Hr.bool="float32",Hr.complex64="complex64",(Hr=ri=ri||{}).float32="complex64",Hr.int32="complex64",Hr.bool="complex64",Hr.complex64="complex64";const Xa={float32:hs,int32:Ps,bool:Hs,complex64:ri};function Ya(e,t){if("string"!==e&&"string"!==t)return Xa[e][t];if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with `+t)}function Ja(e){return Ya(e,"int32")}function Za(e,t){if(e.dtype===t.dtype)return[e,t];var n=Ya(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Qa(e,t){z(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and`+` second(${t.dtype}) input must match`)}function es(t,e){return e.some(e=>e.id===t.id)}function ts(e){var t=[];return function e(t,n,r){if(null==t)return;if(t instanceof v)return void n.push(t);if(!ns(t))return;const a=t;for(const s in a){const i=a[s];r.has(i)||(r.add(i),e(i,n,r))}}(e,t,new Set),t}function ns(e){return Array.isArray(e)||"object"==typeof e}Hr=Object.freeze({__proto__:null,makeTypesMatch:Za,assertTypesMatch:Qa,isTensorInList:es,getTensorsInContainer:ts});function rs(e){return null!=e.kernelName}class as{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ss{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new as}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null==this.backendInstance){var t=this.getSortedBackends();for(let e=0;e<t.length;e++){var n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make `+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){var{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been `+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;var t=this.initializeBackend(e)["asyncInit"];if(t)return null}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(zr(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;var{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ma(this.backendInstance),!0}setupRegisteredKernels(){const e=Ur(this.backendName);e.forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){const e=Ur(t);e.forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const r=e.factory();if(!r||r instanceof p||"function"!=typeof r.then)return this.registry[t]=r,{success:!0,asyncInit:!1};{const a=++this.pendingBackendInitId;var n=r.then(e=>!(a<this.pendingBackendInitId)&&(this.registry[t]=e,!(this.pendingBackendInit=null))).catch(e=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,zr(`Initialization of backend ${t} failed`),zr(e.stack||e.message)),!1));return{success:this.pendingBackendInit=n,asyncInit:!0}}}catch(e){return zr(`Initialization of backend ${t} failed`),zr(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){var t=this.getSortedBackends();for(let e=0;e<t.length;e++){var n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend;var a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),(n.backend=e).move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>((r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{var r=n();return t(),r}catch(e){throw t(),e}}nextTensorId(){return ss.nextTensorId++}nextVariableId(){return ss.nextVariableId++}clone(e){var t=I.runKernel(Ht,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],n=>({x:()=>{var e={x:n},t={dtype:"float32"};return I.runKernel(tt,e,t)}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null!=Wr(e,this.backendName))return this.runKernelFunc({kernelName:e,inputs:t,attrs:n});throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){var r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});n=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],r=r-t-a-n;if(0<r)throw new Error(`Backend '${this.backendName}' has an internal memory leak `+`(${r} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const a=this.isTapeOn();var n=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;null==this.backendName&&this.backend;let o;const u=rs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(rs(e)){const{kernelName:p,inputs:l,attrs:c}=e,d=(null==this.backendName&&this.backend,Wr(p,this.backendName));z(null!=d,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),i=()=>{var e=this.backend.numDataIds();o=d.kernelFunc({inputs:l,attrs:c,backend:this.backend});const t=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,e,t);var n,e=t.map(e=>{if(null!=e.rank)return e;var{dataId:e,shape:t,dtype:n}=e;return this.makeTensorFromDataId(e,t,n)});return a&&(n=this.getTensorsForGradient(p,l,e),r=this.saveTensorsForBackwardMode(n)),e}}else{const f=e["forwardFunc"],m=e=>{a&&(r=e.map(e=>this.keep(this.clone(e))))};i=()=>{var e=this.backend.numDataIds(),t=(o=this.tidy(()=>f(this.backend,m)),Array.isArray(o)?o:[o]);return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,t),t}}const{inputs:l,attrs:c}=e;e=rs(e)?null:e.backwardsFunc;let h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{t=this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),h.outputs):i()}),a&&this.addTapeNode(u,l,t,e,r,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-n,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(t,n,r){t=Vr(t);if(null==t)return[];{const a=t.inputsToSave||[],s=t.outputsToSave||[];let e;e=t.saveAllInputs?(z(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),Object.keys(n).map(e=>n[e])):a.map(e=>n[e]);t=r.filter((e,t)=>s[t]);return e.concat(t)}}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let a=e;"string"===(n=n||"float32")&&pe(e[0])&&(a=e.map(e=>Fa(e)));e=r.write(a,t,n),t=new v(t,n,e,this.nextTensorId());if(this.trackTensor(t,r),"string"===n){const s=this.state.tensorInfo.get(e);r=le(a);this.state.numBytes+=r-s.bytes,s.bytes=r}return t}makeTensorFromDataId(e,t,n,r){n=n||"float32";t=new v(t,n,e,this.nextTensorId());return this.trackTensor(t,r),t}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));r=new Ka(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ue(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ka||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(this.state.tensorInfo.has(e.dataId)){const n=this.state.tensorInfo.get(e.dataId);var t;this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),"complex64"!==e.dtype&&"string"!==e.dtype&&(t=e.size*ue(e.dtype),this.state.numBytes-=t),n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}}disposeVariables(){for(const t in this.state.registeredVariables){var e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,0<this.state.numStringTensors&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;var t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return 0<this.state.gradientDepth&&0===this.state.kernelDepth}addTapeNode(e,t,r,n,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:a};t=Vr(e);null!=(n=null!=t?t.gradFunc:n)&&(i.gradient=e=>(e=e.map((e,t)=>{var n;return null==e?(n=xe((t=r[t]).size,t.dtype),this.makeTensor(n,t.shape,t.dtype)):e}),n(1<e.length?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ts(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const a=this.state.activeScope.track[e];a.kept||n.has(a.id)||a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,f,m,t=!1){if(z(0<f.length,()=>"gradients() received an empty list of xs."),null!=m&&"float32"!==m.dtype)throw new Error(`dy must have 'float32' dtype, but has '${m.dtype}'`);const g=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e)),y=(z(g instanceof v,()=>"The result y returned by f() must be a tensor."),function(t,n,e){const r={},a={};for(let e=0;e<n.length;e++)r[n[e].id]=!0;for(let e=0;e<t.length;e++){const f=t[e];var s=f.inputs;for(const m in s){var i=s[m];let t=!1;for(let e=0;e<n.length;e++)if(r[i.id]){f.outputs.forEach(e=>r[e.id]=!0),t=!0,a[f.id]=!0;break}if(t)break}}const o={},u=(o[e.id]=!0,{});for(let e=t.length-1;0<=e;e--){var l=t[e],c=l.inputs;for(let e=0;e<l.outputs.length;e++)if(o[l.outputs[e].id]){for(const g in c)o[c[g].id]=!0,u[l.id]=!0;break}}const h=[];for(let e=0;e<t.length;e++){var p=t[e];if(a[p.id]&&u[p.id]){const y={};for(const b in p.inputs){var d=p.inputs[b];r[d.id]&&(y[b]=d)}const v=Object.assign({},p);v.inputs=y,v.outputs=p.outputs,h.push(v)}}return h}(this.state.activeTape,f,g));if(!t&&0===y.length&&0<f.length)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[g.id]=null==m?(e=g.shape,u=be(U(e),"float32"),I.makeTensor(u,e,"float32")):m;var e,n=t,r=y,a=e=>this.tidy(e),s=os;for(let e=r.length-1;0<=e;e--){const l=r[e],c=[];if(l.outputs.forEach(e=>{e=n[e.id];null!=e?c.push(e):c.push(null)}),null==l.gradient)throw new Error("Cannot compute gradient: gradient function not found "+`for ${l.kernelName}.`);const h=l.gradient(c);for(const p in l.inputs){if(!(p in h))throw new Error(`Cannot backprop through input ${p}. `+`Available gradients found: ${Object.keys(h)}.`);var i=a(()=>h[p]());if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${l.kernelName}. The gradient of input `+`${p} must have 'float32' dtype, but has '${i.dtype}'`);var o=l.inputs[p];if(!ce(i.shape,o.shape))throw new Error(`Error in gradient for op ${l.kernelName}. The gradient of input `+`'${p}' has shape '${i.shape}', which does not match `+`the shape of the input '${o.shape}'`);if(null==n[o.id])n[o.id]=i;else{const d=n[o.id];n[o.id]=s(d,i),d.dispose()}}}var u=f.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:g,grads:u}})}customGrad(r){return z(ge(r),()=>"The f passed in customGrad(f) must be a function."),(...a)=>{z(a.every(e=>e instanceof v),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const n={};a.forEach((e,t)=>{n[t]=e});return this.runKernelFunc({forwardFunc:(e,t)=>(z((s=r(...a,t)).value instanceof v,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),z(ge(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),backwardsFunc:(e,t)=>{e=s.gradFunc(e,t);const n=Array.isArray(e)?e:[e],r=(z(n.length===a.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),z(n.every(e=>e instanceof v),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."),{});return n.forEach((e,t)=>{r[t]=()=>e}),r},inputs:n})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){const n=this.state.tensorInfo.get(e);return n.backend.readToGPU(e,t)}async time(e){var t=$a();const n=await this.backend.time(e);return n.wallMs=$a()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new as;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function is(){const e=$e();var t;return null==e._tfengine&&(t=new Ce(e),e._tfengine=new ss(t)),t=e._tfengine.ENV,N=t,Ha=()=>e._tfengine,e._tfengine}ss.nextTensorId=0,ss.nextVariableId=0;const I=is();function os(e,t){e={a:e,b:t};return I.runKernel(Me,e)}let us;function ls(e){if(void 0!==us)return us;if(e||"undefined"!=typeof navigator&&null!=navigator){if("ReactNative"===(e=e||navigator).product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");return t?/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4)):(e=e).userAgentData&&e.userAgentData.mobile}return!1}function cs(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var hs=Object.freeze({__proto__:null,mockIsMobile:function(e){us=e},isMobile:ls,isBrowser:cs});const ps=N;function ds(e,t){let n=e;if(oe(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||oe(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&N.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(n,e,r){r=r||[];if(!Array.isArray(n)&&!oe(n))return void z(0===e.length,()=>`Element arr[${r.join("][")}] is a primitive, `+`but should be an array/TypedArray of ${e[0]} elements`);z(0<e.length,()=>`Element arr[${r.join("][")}] should be a primitive, `+`but is an array of ${n.length} elements`);z(n.length===e[0],()=>`Element arr[${r.join("][")}] should have ${e[0]} `+`elements, but has ${n.length} elements`);const a=e.slice(1);for(let e=0;e<n.length;++e)t(n[e],a,r.concat(e))}(e,r,[]),r}function fs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must `+`be ${e} tensor, but got ${t} tensor`)}}function S(e,t,n,r="numeric"){if(e instanceof v)return fs(r,e.dtype,t,n),e;let a=me(e);if(fs(r,a="string"!==a&&0<=["bool","int32","float32"].indexOf(r)?r:a,t,n),null==e||!oe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw r=null==e?"null":e.constructor.name,new Error(`Argument '${t}' passed to '${n}' must be a `+`Tensor or TensorLike, but got '${r}'`);t=ds(e,a),oe(e)||Array.isArray(e)||(e=[e]),n="string"!==a?Aa(e,a):q(e,[],!0);return I.makeTensor(n,t,a)}function ms(e,n,r,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${n} passed to ${r} must be a `+"`Tensor[]` or `TensorLike[]`");const t=e;return t.map((e,t)=>S(e,n+`[${t}]`,r,a))}ps.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ps.registerFlag("IS_BROWSER",()=>cs()),ps.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),ps.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ps.registerFlag("PROD",()=>!1),ps.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ps.getBool("DEBUG")),ps.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ps.registerFlag("IS_TEST",()=>!1),ps.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),ps.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ps.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function n(e){var t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";t=(...e)=>{I.startScope(n);try{var t=r(...e);return Se(t)&&console.error("Cannot return a Promise inside of tidy."),I.endScope(t),t}catch(e){throw I.endScope(null),e}};return Object.defineProperty(t,"name",{value:n,configurable:!0}),t}const gs=n({complex_:function(e,t){return e=S(e,"real","complex"),t=S(t,"imag","complex"),G(e.shape,t.shape,`real and imag shapes, ${e.shape} and ${t.shape}, `+"must match in call to tf.complex()."),e={real:e,imag:t},I.runKernel(at,e)}});function ys(e,t,n,r){if("complex64"===(r=null==r?me(e):r))throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!oe(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ke(t);const s=U(t),i=U(n);z(s===i,()=>`Based on the provided shape, [${t}], the tensor should have `+s+" values but has "+i);for(let e=0;e<n.length;++e){var a=n[e],a=e!==n.length-1||a!==U(t.slice(e));z(n[e]===t[e]||!a,()=>"Error creating a new Tensor. Inferred shape "+`(${n}) does not match the provided `+`shape (${t}). `)}}return oe(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Aa(e,r):q(e,[],!0),I.makeTensor(e,t,r)}function vs(e,t,n){return ys(e,t,ds(e,n),n)}const bs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},xs=4;async function ws(t,n){const r=[],a=[];var s=Array.isArray(t)?t.map(e=>e.name):Object.keys(t);for(let e=0;e<s.length;++e){var i=s[e];const o=Array.isArray(t)?t[e].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': `+o.dtype);const u={name:i,shape:o.shape,dtype:o.dtype};"string"===o.dtype?(i=new Promise(async e=>{const t=await o.bytes();var n=t.reduce((e,t)=>e+t.length,0)+xs*t.length;const r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){var s=t[e],i=new Uint8Array(new Uint32Array([s.length]).buffer);r.set(i,a),a+=xs,r.set(s,a),a+=s.length}e(r)}),a.push(i)):a.push(o.data()),null!=n&&(u.group=n),r.push(u)}return{data:function(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[],r=(e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}),new Uint8Array(t));let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}(await Promise.all(a)),specs:r}}function ks(n,e){const r={};let a,s=0;for(const b of e){var i=b.name,o=b.dtype,u=b.shape,l=U(u);let t;if("quantization"in b){var c=b.quantization;if("uint8"===c.dtype||"uint16"===c.dtype){if(!("min"in c&&"scale"in c))throw new Error(`Weight ${b.name} with quantization ${c.dtype} `+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==c.dtype)throw new Error(`Weight ${b.name} has unknown `+`quantization dtype ${c.dtype}. `+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==o)throw new Error(`Weight ${b.name} is quantized with ${c.dtype} `+`which only supports weights of type float32 not ${o}.`)}var h=bs[c.dtype],p=n.slice(s,s+l*h),d=new("uint8"===c.dtype?Uint8Array:Uint16Array)(p);if("float32"===o)if("uint8"===c.dtype||"uint16"===c.dtype){t=new Float32Array(d.length);for(let e=0;e<d.length;e++){var f=d[e];t[e]=f*c.scale+c.min}}else{if("float16"!==c.dtype)throw new Error(`Unsupported quantization type ${c.dtype} `+"for weight type float32.");void 0===a&&(a=function(){const a=function(){const t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=(e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n})(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),s=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),i=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return t=>{var e=new ArrayBuffer(4*t.length);const n=new Uint32Array(e);for(let e=0;e<t.length;e++){var r=t[e],r=a[i[r>>10]+(1023&r)]+s[r>>10];n[e]=r}return new Float32Array(e)}}()),t=a(d)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': `+o);if("uint8"!==c.dtype&&"uint16"!==c.dtype)throw new Error(`Unsupported quantization type ${c.dtype} `+"for weight type int32.");t=new Int32Array(d.length);for(let e=0;e<d.length;e++){var m=d[e];t[e]=Math.round(m*c.scale+c.min)}}s+=l*h}else if("string"===o){var g=U(b.shape);t=[];for(let e=0;e<g;e++){var y=new Uint32Array(n.slice(s,s+xs))[0],v=(s+=xs,new Uint8Array(n.slice(s,s+y)));t.push(v),s+=y}}else{p=bs[o],h=n.slice(s,s+l*p);if("float32"===o)t=new Float32Array(h);else if("int32"===o)t=new Int32Array(h);else if("bool"===o)t=new Uint8Array(h);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': `+o);{t=new Float32Array(h);const x=new Float32Array(t.length/2),w=new Float32Array(t.length/2);for(let e=0;e<x.length;e++)x[e]=t[2*e],w[e]=t[2*e+1];const k=vs(x,u,"float32"),N=vs(w,u,"float32");r[i]=gs(k,N),k.dispose(),N.dispose()}}s+=l*p}"complex64"!==o&&(r[i]=vs(t,u,o))}return r}const Ns="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Is(e){return Ns?Buffer.byteLength(e):new Blob([e]).size}function Ss(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Ts(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);var t=e.split("/");return t[t.length-1]}function Cs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Es(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};var r;return null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest&&([t,r]=await t(e.weightsManifest),n.weightSpecs=t,n.weightData=r),null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function _s(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Is(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Is(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class As{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==As.instance&&(As.instance=new As),As.instance}static registerSaveRouter(e){As.getInstance().saveRouters.push(e)}static registerLoadRouter(e){As.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return As.getHandlers(e,"save")}static getLoadHandlers(e,t){return As.getHandlers(e,"load",t)}static getHandlers(t,e,n){const r=[],a="load"===e?As.getInstance().loadRouters:As.getInstance().saveRouters;return a.forEach(e=>{e=e(t,n);null!==e&&r.push(e)}),r}}const $s=e=>As.getSaveHandlers(e),Rs=(e,t)=>As.getLoadHandlers(e,t),Fs="tensorflowjs",Ds="models_store",Os="model_info_store";function Ms(){if(!N.getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var e="undefined"==typeof window?self:window,e=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Ls(e){const t=e.result;t.createObjectStore(Ds,{keyPath:"modelPath"}),t.createObjectStore(Os,{keyPath:"modelPath"})}class zs{constructor(e){if(this.indexedDB=Ms(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,c){return new Promise((u,l)=>{const r=this.indexedDB.open(Fs,1);r.onupgradeneeded=()=>Ls(r),r.onsuccess=()=>{const a=r.result;if(null==c){const e=a.transaction(Ds,"readonly"),t=e.objectStore(Ds),n=t.get(this.modelPath);n.onsuccess=()=>{if(null==n.result)return a.close(),l(new Error(`Cannot find model with path '${this.modelPath}' `+"in IndexedDB."));u(n.result.modelArtifacts)},n.onerror=e=>(a.close(),l(n.error)),e.oncomplete=()=>a.close()}else{const s=_s(c),i=a.transaction(Os,"readwrite");let r=i.objectStore(Os);const o=r.put({modelPath:this.modelPath,modelArtifactsInfo:s});let t;o.onsuccess=()=>{const e=(t=a.transaction(Ds,"readwrite")).objectStore(Ds),n=e.put({modelPath:this.modelPath,modelArtifacts:c,modelArtifactsInfo:s});n.onsuccess=()=>u({modelArtifactsInfo:s}),n.onerror=e=>{const t=(r=i.objectStore(Os)).delete(this.modelPath);t.onsuccess=()=>(a.close(),l(n.error)),t.onerror=e=>(a.close(),l(n.error))}},o.onerror=e=>(a.close(),l(o.error)),i.oncomplete=()=>{null==t?a.close():t.oncomplete=()=>a.close()}}},r.onerror=e=>l(r.error)})}}zs.URL_SCHEME="indexeddb://";var Ps=e=>{return N.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(zs.URL_SCHEME)?(e=e.slice(zs.URL_SCHEME.length),new zs(e)):null};As.registerSaveRouter(Ps),As.registerLoadRouter(Ps);class Bs{constructor(){this.indexedDB=Ms()}async listModels(){return new Promise((a,s)=>{const i=this.indexedDB.open(Fs,1);i.onupgradeneeded=()=>Ls(i),i.onsuccess=()=>{const t=i.result,e=t.transaction(Os,"readonly"),n=e.objectStore(Os),r=n.getAll();r.onsuccess=()=>{const e={};for(const t of r.result)e[t.modelPath]=t.modelArtifactsInfo;a(e)},r.onerror=e=>(t.close(),s(r.error)),e.oncomplete=()=>t.close()},i.onerror=e=>s(i.error)})}async removeModel(u){var e;return u=(e=u).startsWith(zs.URL_SCHEME)?e.slice(zs.URL_SCHEME.length):e,new Promise((i,o)=>{const t=this.indexedDB.open(Fs,1);t.onupgradeneeded=()=>Ls(t),t.onsuccess=()=>{const n=t.result,e=n.transaction(Os,"readwrite"),r=e.objectStore(Os),a=r.get(u);let s;a.onsuccess=()=>{if(null==a.result)return n.close(),o(new Error(`Cannot find model with path '${u}' `+"in IndexedDB."));{const e=r.delete(u),t=()=>{const e=(s=n.transaction(Ds,"readwrite")).objectStore(Ds),t=e.delete(u);t.onsuccess=()=>i(a.result.modelArtifactsInfo),t.onerror=e=>o(a.error)};e.onsuccess=t,e.onerror=e=>(t(),n.close(),o(a.error))}},a.onerror=e=>(n.close(),o(a.error)),e.oncomplete=()=>{null==s?n.close():s.oncomplete=()=>n.close()}},t.onerror=e=>o(t.error)})}}const Ws="/",Vs="tensorflowjs_models";function Us(e){return{info:[Vs,e,"info"].join(Ws),topology:[Vs,e,"model_topology"].join(Ws),weightSpecs:[Vs,e,"weight_specs"].join(Ws),weightData:[Vs,e,"weight_data"].join(Ws),modelMetadata:[Vs,e,"model_metadata"].join(Ws)}}function Gs(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}class js{constructor(e){if(!N.getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Us(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");var t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=_s(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ns)return Buffer.from(e).toString("base64");var n=new Uint8Array(e);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}(e.weightData));var a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Gs(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: `+"size quota being exceeded is a possible cause of this failure: "+`modelTopologyBytes=${r.modelTopologyBytes}, `+`weightSpecsBytes=${r.weightSpecsBytes}, `+`weightDataBytes=${r.weightDataBytes}.`)}}async load(){var e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={};e=JSON.parse(this.LS.getItem(this.keys.topology));if(null==e)throw new Error(`In local storage, the topology of model '${this.modelPath}' `+"is missing.");t.modelTopology=e;e=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==e)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' `+"are missing.");t.weightSpecs=e;var e=this.LS.getItem(this.keys.modelMetadata),e=(null!=e&&(e=JSON.parse(e),t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)),this.LS.getItem(this.keys.weightData));if(null==e)throw new Error("In local storage, the binary weight values of model "+`'${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ns){const r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(e),t}}js.URL_SCHEME="localstorage://";var Hs=e=>{return N.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(js.URL_SCHEME)?(e=e.slice(js.URL_SCHEME.length),new js(e)):null};As.registerSaveRouter(Hs),As.registerLoadRouter(Hs);class qs{constructor(){z(N.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),z("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={};var n;Vs,Ws;for(let e=0;e<this.LS.length;++e){const r=this.LS.key(e);r.startsWith("tensorflowjs_models/")&&r.endsWith("/info")&&(n=function(e){const t=e.split(Ws);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Ws)}(r),t[n]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(e){var t=Us(e=(t=e).startsWith(js.URL_SCHEME)?t.slice(js.URL_SCHEME.length):t);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);e=JSON.parse(this.LS.getItem(t.info));return Gs(t),e}}const Ks="://";class Xs{constructor(){this.managers={}}static getInstance(){return null==Xs.instance&&(Xs.instance=new Xs),Xs.instance}static registerManager(e,t){z(null!=e,()=>"scheme must not be undefined or null."),z(0<(e=e.endsWith(Ks)?e.slice(0,e.indexOf(Ks)):e).length,()=>"scheme must not be an empty string.");const n=Xs.getInstance();z(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){var t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Ys(e){if(-1===e.indexOf(Ks))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Xs.getSchemes().join(","));return{scheme:e.split(Ks)[0],path:e.split(Ks)[1]}}async function Js(e,t,n=!1){z(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=As.getLoadHandlers(e),a=(z(0<r.length,()=>`Copying failed because no load handler is found for source URL ${e}.`),z(r.length<2,()=>`Copying failed because more than one (${r.length}) `+`load handlers for source URL ${e}.`),r[0]);var s=As.getSaveHandlers(t);z(0<s.length,()=>"Copying failed because no save handler is found for destination "+`URL ${t}.`),z(s.length<2,()=>`Copying failed because more than one (${r.length}) `+`save handlers for destination URL ${t}.`);const i=s[0];var s=Ys(e).scheme,o=Ys(e).path,u=s===Ys(e).scheme,l=await a.load(),l=(n&&u&&await Xs.getManager(s).removeModel(o),await i.save(l));return n&&!u&&await Xs.getManager(s).removeModel(o),l.modelArtifactsInfo}if(N.get("IS_BROWSER")){N.setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{Xs.registerManager(js.URL_SCHEME,new qs)}catch(e){}try{Xs.registerManager(zs.URL_SCHEME,new Bs)}catch(e){}}const Zs={importFetch:()=>require("node-fetch")};let Qs;function ei(e,t="float32",n){return t=t||"float32",ke(e),new ja(e,t,n)}N.get("IS_NODE")&&!N.get("IS_BROWSER")&&N.setPlatform("node",new class{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=N.global.fetch?N.global.fetch(e,t):(Qs=null==Qs?Zs.importFetch():Qs)(e,t)}now(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const x=n({cast_:function(e,t){if(e=S(e,"x","cast"),!re(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return e={x:e},t={dtype:t},I.runKernel(tt,e,t)}});const ti=n({clone_:function(e){return e={x:S(e,"x","clone","string_or_numeric")},I.runKernel(Ht,e)}});function ni(e,t=!1){console.log(e.toString(t))}is();var ri={buffer:ei,cast:x,clone:ti,print:ni};qa=ri;function ai(e){return new Promise(e=>setTimeout(e)).then(e)}class si{constructor(e){if(!N.getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");null!=(e=e.startsWith(si.URL_SCHEME)?e.slice(si.URL_SCHEME.length):e)&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");var t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{var n=Cs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),n=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"}));const r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=n,await ai(()=>r.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const a=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;a.download=this.weightDataFileName,a.href=t,await ai(()=>a.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:_s(e)}}}}si.URL_SCHEME="downloads://";class ii{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((n,r)=>{const e=new FileReader;e.onload=e=>{var e=JSON.parse(e.target.result),t=e.modelTopology;null==t?r(new Error("modelTopology field is missing from file "+this.jsonFile.name)):null==e.weightsManifest?r(new Error("weightManifest field is missing from file "+this.jsonFile.name)):0===this.weightsFiles.length?n({modelTopology:t}):(t=Es(e,e=>this.loadWeights(e)),n(t))},e.onerror=e=>r("Failed to read model topology and weights manifest JSON "+`from file '${this.jsonFile.name}'. BrowserFiles supports loading `+"Keras-style tf.Model artifacts only."),e.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e);e=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(e).then(e=>[t,Ss(e)])}loadWeightsFile(r,a){return new Promise((t,n)=>{const e=new FileReader;e.onload=e=>{e=e.target.result;t(e)},e.onerror=e=>n(`Failed to weights data from file of path '${r}'.`),e.readAsArrayBuffer(a)})}checkManifestAndWeightFiles(e){const n=[],r=this.weightsFiles.map(e=>Ts(e.name)),a={};for(const t of e)t.paths.forEach(e=>{var t=Ts(e);if(-1!==n.indexOf(t))throw new Error("Duplicate file basename found in weights manifest: "+`'${t}'`);if(n.push(t),-1===r.indexOf(t))throw new Error(`Weight file with basename '${t}' is not provided.`);a[e]=this.weightsFiles[r.indexOf(t)]});if(n.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+`(${n.length}) and the number of weight files provided `+`(${this.weightsFiles.length}).`);return a}}function oi(n,r,a,s){var e,t,i;z(null!=(e=n)&&Array.isArray(e)&&0<e.length,()=>"promises must be a none empty array"),i=s=null==s?1:s,z(0<=(t=a=null==a?0:a)&&t<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+t),z(0<=i&&i<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+i),z(t<=i,()=>"startFraction must be no more than endFraction, but "+`got startFraction ${t} and endFraction `+i);let o=0;return Promise.all(n.map(e=>(e.then(e=>{var t=a+ ++o/n.length*(s-a);return r(t),e}),e)))}async function ui(e,t){const n=null==(t=null==t?{}:t).fetchFunc?N.platform.fetch:t.fetchFunc;e=e.map(e=>n(e,t.requestInit,{isBinary:!0}));const r=null==t.onProgress?await Promise.all(e):await oi(e,t.onProgress,0,.5);e=r.map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(e):await oi(e,t.onProgress,.5,1)}async function li(e,t="",n,r){const a=ci(e=>ui(e,{requestInit:r}));return a(e,t,n)}function ci(a){return async(u,t="",i)=>{const o=u.map(()=>!1),l={},c=null!=i?i.map(()=>!1):[],h=[];if(u.forEach((e,a)=>{let s=0;e.weights.forEach(n=>{var e=("quantization"in n?n.quantization:n).dtype;const t=bs[e]*U(n.shape),r=()=>{o[a]=!0,null==l[a]&&(l[a]=[]),l[a].push({manifestEntry:n,groupOffset:s,sizeBytes:t})};null!=i?i.forEach((e,t)=>{e===n.name&&(r(),c[t]=!0)}):r(),h.push(n.name),s+=t})}),!c.every(e=>e)){const r=i.filter((e,t)=>!c[t]);throw new Error("Could not find weights in manifest with names: "+r.join(", ")+`. 
`+"Manifest JSON has weights with names: "+h.join(", ")+".")}const e=o.reduce((e,t,n)=>(t&&e.push(n),e),[]),n=[],p=(e.forEach(e=>{u[e].paths.forEach(e=>{e=t+(t.endsWith("/")?"":"/")+e;n.push(e)})}),await a(n)),d={};let f=0;return e.forEach(e=>{var t=u[e].paths.length;let n=0;for(let e=0;e<t;e++)n+=p[f+e].byteLength;const r=new ArrayBuffer(n),a=new Uint8Array(r);let s=0;for(let e=0;e<t;e++){var i=new Uint8Array(p[f+e]);a.set(i,s),s+=i.byteLength}const o=l[e];o.forEach(e=>{var t=ks(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]}),f+=t}),d}}As.registerSaveRouter(e=>{return N.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(si.URL_SCHEME)?([e="model"]=[e.slice(si.URL_SCHEME.length)],new si(e)):null});class hi{constructor(e,t){if(this.DEFAULT_METHOD="POST",this.weightPathPrefix=(t=null==t?{}:t).weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(z("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=N.platform.fetch,z(null!=e&&0<e.length,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&z(2===e.length,()=>"URL paths for http must have a length of 2, "+`(actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;var n=Cs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]),n=(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),await this.fetch(this.path,t));if(n.ok)return{modelArtifactsInfo:_s(e),responses:[n]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+n.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}var n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model `+"topology or manifest for weights.");return Es(t,e=>this.loadWeights(e))}async loadWeights(e){var t,n,r=Array.isArray(this.path)?this.path[1]:this.path,[r,a]=(t=(r=r).lastIndexOf("/"),l=r.lastIndexOf("?"),n=r.substring(0,t),t=t<l?r.substring(l):"",[n+"/",t]),s=this.weightPathPrefix||r;const i=[];for(const c of e)i.push(...c.weights);const o=[],u=[];for(const h of e)for(const p of h.paths)null!=this.weightUrlConverter?u.push(this.weightUrlConverter(p)):o.push(s+p+a);this.weightUrlConverter&&o.push(...await Promise.all(u));var l=await ui(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,Ss(l)]}}function pi(e){return null!=e.match(hi.URL_SCHEME_REGEX)}hi.URL_SCHEME_REGEX=/^https?:\/\//;Ps=(t,n)=>{if("undefined"==typeof fetch&&(null==n||null==n.fetchFunc))return null;{let e=!0;if(e=Array.isArray(t)?t.every(e=>pi(e)):pi(t))return di(t,n)}return null};function di(e,t){return new hi(e,t)}function fi(e,t){return di(e,t)}As.registerSaveRouter(Ps),As.registerLoadRouter(Ps);class mi{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class gi{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}Hs=Object.freeze({__proto__:null,browserFiles:function(e){return new ii(e)},browserHTTPRequest:fi,concatenateArrayBuffers:Ss,decodeWeights:ks,encodeWeights:ws,fromMemory:function(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new mi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))},getLoadHandlers:Rs,getModelArtifactsForJSON:Es,getModelArtifactsInfoForJSON:_s,getSaveHandlers:$s,http:di,isHTTPScheme:pi,loadWeights:li,registerLoadRouter:e=>As.registerLoadRouter(e),registerSaveRouter:e=>As.registerSaveRouter(e),weightsLoaderFactory:ci,withSaveHandler:function(e){return new gi(e)},copyModel:async function(e,t){return Js(e,t,!1)},listModels:async function(){const e={};for(const r of Xs.getSchemes()){var t=await Xs.getManager(r).listModels();for(const a in t){var n=r+Ks+a;e[n]=t[a]}}return e},moveModel:async function(e,t){return Js(e,t,!0)},removeModel:async function(e){e=Ys(e);const t=Xs.getManager(e.scheme);return t.removeModel(e.path)}});const T=n({matMul_:function(e,t,n=!1,r=!1){return e=S(e,"a","matMul"),t=S(t,"b","matMul"),[e,t]=Za(e,t),e={a:e,b:t},t={transposeA:n,transposeB:r},I.runKernel(Je,e,t)}});const yi=n({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);return e={indices:S(e,"indices","oneHot","int32")},t={depth:t,onValue:n,offValue:r},I.runKernel($n,e,t)}});const vi=n({transpose_:function(e,t){const n=S(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),z(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} `+`must match length of perm ${t}.`),t.forEach(e=>{z(0<=e&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();var e={x:n},r={perm:t};return I.runKernel(Cr,e,r)}});ri=n({confusionMatrix_:function(e,t,n){const r=S(e,"labels","confusionMatrix"),a=S(t,"predictions","confusionMatrix");return z(null==n||0<n&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),z(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),z(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),z(r.shape[0]===a.shape[0],()=>"Mismatch in the number of examples: "+`${r.shape[0]} vs. ${a.shape[0]}. `+"Labels and predictions should have the same number of elements."),z(0<n&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n),e=yi(x(r,"int32"),n),t=yi(x(a,"int32"),n),e=vi(e),e=T(e,t),x(e,"int32")}}),Ps=Object.freeze({__proto__:null,confusionMatrix:ri});function bi(t,n){var r=t.length;const a=[];for(let e=0;e<r;e++){var s=r-1-e,i=t[s]||1;1<(n[n.length-1-e]||1)&&1===i&&a.unshift(s)}return a}function xi(t,n){const r=[];for(let e=0;e<n.length;e++){var a=t[t.length-e-1],s=n.length-e-1,i=n[s];(null==a||1===a&&1<i)&&r.unshift(s)}return r}function L(r,a){const s=[];var e=Math.max(r.length,a.length);for(let n=0;n<e;n++){let e=r[r.length-n-1],t=(null==e&&(e=1),a[a.length-n-1]);if(null==t&&(t=1),1===e)s.unshift(t);else if(1===t)s.unshift(e);else{if(e!==t)throw Error("Operands could not be broadcast together with shapes "+r+` and ${a}.`);s.unshift(e)}}return s}ri=Object.freeze({__proto__:null,getBroadcastDims:bi,getReductionAxes:xi,assertAndGetBroadcastShape:L});function wi(e,t,n){if(j(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");var r=ds(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ys(e,t,r,n)}let ki;function Ni(e,n=3){if(4<n)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)t=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(a)if(a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=Wr(Fr,I.backendName))return u={pixels:e},l={numChannels:n},I.runKernel(Fr,u,l);var[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||t)c=e.data;else if(s||a||o){if(null==ki)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ki=new OffscreenCanvas(1,1).getContext("2d")}else ki=document.createElement("canvas").getContext("2d");ki.canvas.width=u,ki.canvas.height=l,ki.drawImage(e,0,0,u,l),c=ki.getImageData(0,0,u,l).data}let h;if(4===n)h=new Int32Array(c);else{var p=u*l;h=new Int32Array(p*n);for(let t=0;t<p;t++)for(let e=0;e<n;++e)h[t*n+e]=c[4*t+e]}return wi(h,[l,u,n],"int32")}function Ii(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&(null!=(t=e)&&0!==t.width&&0!==t.height)&&!(null!=(t=e)&&t.data instanceof Uint8Array);var t}const Si=n({fromPixels_:Ni});var Ti=Object.freeze({__proto__:null,fromPixelsAsync:async function(e,t=3){let n=null;if(N.getBool("WRAP_TO_IMAGEBITMAP")&&Ii(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ni(n,t)},toPixels:async function(e,t){let n=S(e,"img","toPixels");if(!(e instanceof v)){const h=n;n=x(h,"int32"),h.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);var[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(4<s||2===s)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+s);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}.`+" Please use float32 or int32 tensors.");var i=await n.data(),o="float32"===n.dtype?255:1;const u=new Uint8ClampedArray(a*r*4);for(let t=0;t<r*a;++t){const p=[0,0,0,255];for(let e=0;e<s;e++){var l=i[t*s+e];if("float32"===n.dtype){if(l<0||1<l)throw new Error("Tensor values for a float32 Tensor must be in the "+`range [0 - 1] but encountered ${l}.`)}else if("int32"===n.dtype&&(l<0||255<l))throw new Error("Tensor values for a int32 Tensor must be in the "+`range [0 - 255] but encountered ${l}.`);1===s?(p[0]=l*o,p[1]=l*o,p[2]=l*o):p[e]=l*o}var c=4*t;u[0+c]=Math.round(p[0]),u[1+c]=Math.round(p[1]),u[2+c]=Math.round(p[2]),u[3+c]=Math.round(p[3])}if(null!=t){t.width=a,t.height=r;const d=t.getContext("2d");t=new ImageData(u,a,r);d.putImageData(t,0,0)}return n!==e&&n.dispose(),u},fromPixels:Si});function Ci(e,t){var n=e.shape.length,r=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+` but the rank was ${n}.`);if(r<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+` but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+` but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+t.shape[r-1]+" vs. "+n);if(0===U(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+` Input shape: ${e.shape}.`);const a=t.shape;r=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];var i=e.shape;const o=a.slice();o.pop();let u=1;for(let e=r;e<n;++e)u*=i[e],o.push(i[e]);t=[...se(e.shape).map(e=>e/u),1].slice(0,r);return[o,s,u,t]}var Ei=Object.freeze({__proto__:null,prepareAndValidate:Ci});function _i(t,n,r){var a=1<n.rank?n.shape[n.rank-1]:1,s=1<n.rank?n.rank-1:1,i="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+r.shape+`, indices.shape: ${n.shape}, shape: `+t+`, sliceDim: ${a}, and batchDim: ${s}.`;if(r.rank<s)throw new Error(i+` update.rank < ${s}. `);if(t.length<a+(r.rank-s))throw new Error(i+" Output shape length < "+(a+(r.rank-s)));if(r.rank!==s+t.length-a)throw new Error(i+" update.rank != "+(s+t.length-a));for(let e=0;e<s;++e)if(r.shape[e]!==n.shape[e])throw new Error(i+` updates.shape[${e}] (${r.shape[e]}) != indices.shape[${e}] (${n.shape[e]}).`);for(let e=0;e<r.rank-s;++e)if(r.shape[e+s]!==t[e+a])throw new Error(i+` updates.shape[${e+s}] (${r.shape[e+s]}) != shape[${e+s}] (${t[e+s]})`)}function Ai(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+` but the rank was ${t.rank}.`);if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+` but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}_i(n,t,e)}function $i(e,t,n){var r=t.shape.length,r=1<r?t.shape[r-1]:1,a=n.length;let s=1;for(let e=r;e<a;++e)s*=n[e];var i=r<1?1:r,t=U(t.shape)/i,i=[...se(n.slice(0,r)),1],o=U(n);return{sliceRank:r,numUpdates:t,sliceSize:s,strides:i,outputSize:o}}var Ri=Object.freeze({__proto__:null,validateUpdateShape:_i,validateInput:Ai,calculateShapes:$i});const Fi=-2,Di=-1;function Oi(t,n,r){const a=t.shape.length;z(a===n.length,()=>`Error in slice${a}D: Length of begin ${n} must `+`match the rank of the array (${a}).`),z(a===r.length,()=>`Error in slice${a}D: Length of size ${r} must `+`match the rank of the array (${a}).`);for(let e=0;e<a;++e)z(n[e]+r[e]<=t.shape[e],()=>`Error in slice${a}D: begin[${e}] + size[${e}] `+`(${n[e]+r[e]}) would overflow input.shape[${e}] (${t.shape[e]})`)}function Mi(t,n,r){const a=[];for(let e=0;e<t.length;e++)a[e]=Math.ceil((n[e]-t[e])/r[e]);return a}function Li(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function zi(e,t,n){return n<=e?n:n-(t-1)}function Pi(t,n){const r=[];for(let e=0;e<t;e++)r.push(n+e);return r}function Bi(n,r,a,s,e){const i=[...e],o=Pi(a,r);for(let t=0;t<i.length;t++)if(-1<o.indexOf(t))i[t]=0;else{var u=zi(r,a,t);let e=s[u];n&1<<u&&(e=0),i[t]=e}return i}function Wi(n,r,a,s,t){const i=[...t],e=Pi(a,r);for(let t=0;t<i.length;t++)if(-1<e.indexOf(t))i[t]=Number.MAX_SAFE_INTEGER;else{var o=zi(r,a,t);let e=s[o];n&1<<o&&(e=Number.MAX_SAFE_INTEGER),i[t]=e}for(let e=0;e<i.length;e++){var u=t[e];i[e]<0&&(i[e]+=u),i[e]=m(0,i[e],t[e])}return i}function Vi(e,t,n){let r=e[t];return r=n&1<<t||null==r?1:r}function Ui(e,t,n,r,a,s){let i=t[a];t=n[a]||1,(e&1<<a||s&1<<a||null==i)&&(i=0<t?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER),n=r[a];return i<0&&(i+=n),i=m(0,i,n-1)}function Gi(e,t,n,r,a,s){let i=t[a];t=n[a]||1,(e&1<<a||s&1<<a||null==i)&&(i=0<t?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER),n=r[a];return i<0&&(i+=n),i=0<t?m(0,i,n):m(-1,i,n-1)}function ji(t,n,r){let a=r.length;for(let e=0;e<r.length;e++)if(1<r[e]){a=e;break}for(let e=a+1;e<r.length;e++)if(0<n[e]||r[e]!==t[e])return!1;return!0}function Hi(t,n){let r=0<t.length?t[t.length-1]:1;for(let e=0;e<t.length-1;e++)r+=t[e]*n[e];return r}function qi(n,e,t){let r;var a=n.shape.length;(r="number"==typeof e?[e,...new Array(a-1).fill(0)]:e.length<a?e.concat(new Array(a-e.length).fill(0)):e.slice()).forEach(e=>{z(-1!==e,()=>"slice() does not support negative begin indexing.")});let s;return s=(s=null==t?new Array(a).fill(-1):"number"==typeof t?[t,...new Array(a-1).fill(-1)]:t.length<a?t.concat(new Array(a-t.length).fill(-1)):t).map((e,t)=>0<=e?e:(z(-1===e,()=>"Negative size values should be exactly -1 but got "+e+` for the slice() size at index ${t}.`),n.shape[t]-r[t])),[r,s]}function Ki(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length)).fill(1):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};{var d=h,f=p;f.beginMask=0,f.endMask=0;let t=f.shrinkAxisMask=0;f.beginValid=null!=d.begin,f.endValid=null!=d.end,f.begin=new Array(f.dims),f.end=new Array(f.dims),f.strides=new Array(f.dims),f.finalShapeGatherIndices=[],f.finalShapeGatherIndicesSparse=[],f.inputShapeGatherIndicesSparse=new Array(f.dims);for(let e=0;e<d.dims;e++)if(1<<e&d.ellipsisMask)for(var m=Math.min(f.dims-(d.dims-e)+1+d.numAddAxisAfterEllipsis,f.dims);t<m;t++)f.begin[t]=0,f.end[t]=0,f.strides[t]=1,f.beginMask|=1<<t,f.endMask|=1<<t,f.finalShapeGatherIndices.push(t),f.finalShapeGatherIndicesSparse.push(-1),f.inputShapeGatherIndicesSparse[t]=e;else if(1<<e&d.newAxisMask)f.finalShapeGatherIndices.push(Fi),f.finalShapeGatherIndicesSparse.push(-1);else{if(t===f.begin.length)throw Error(`Index out of range using input dim ${t}; input `+`has only ${f.dims} dims, ${f.begin.length}.`);null!=d.begin&&(f.begin[t]=d.begin[e]),null!=d.end&&(f.end[t]=d.end[e]),f.strides[t]=d.strides[e],d.beginMask&1<<e&&(f.beginMask|=1<<t),d.endMask&1<<e&&(f.endMask|=1<<t),d.shrinkAxisMask&1<<e?(f.finalShapeGatherIndices.push(Di),f.finalShapeGatherIndicesSparse.push(-1),f.shrinkAxisMask|=1<<t):(f.finalShapeGatherIndices.push(t),f.finalShapeGatherIndicesSparse.push(e)),f.inputShapeGatherIndicesSparse[t]=e,t++}}let g=!0,y=!0,v=!0;const b=[],x=[];for(let n=0;n<e.length;++n){if(0===p.strides[n])throw Error(`strides[${n}] must be non-zero`);var w=!!(p.shrinkAxisMask&1<<n),k=e[n];if(-1===k)b.push(w?1:-1);else{var N=[p.beginMask&1<<n,p.endMask&1<<n],I=[0<p.strides[n]?0:-1,0<p.strides[n]?k:k-1];if(w&&p.strides[n]<=0)throw Error("only stride 1 allowed on non-range indexing.");v=v&&1===p.strides[n];var S=!!(p.beginMask&1<<n&&p.endMask&1<<n);if(p.beginValid&&p.endValid){if(w){var T=p.begin[n]<0?k+p.begin[n]:p.begin[n];if(p.begin[n]=T,p.end[n]=p.begin[n]+1,T<0||k<=T)throw Error(`slice index ${p.begin[n]} of dimension ${n} out of bounds.`)}else p.begin[n]=Xi(p.begin[n],0,p.strides[n],k,N,I),p.end[n]=Xi(p.end[n],1,p.strides[n],k,N,I);T=1===p.strides[n]&&0===p.begin[n]&&p.end[n]===k;g=g&&T,y=y&&(0===n&&1===p.strides[n]||T)}else g=g&&1===p.strides[n]&&S,y=y&&(0===n&&1===p.strides[n]||S);let t,e=!1;if(p.beginValid&&p.endValid?(t=p.end[n]-p.begin[n],e=!0):w?(t=1,e=!0):S&&0<=k&&(t=p.strides[n]<0?-k:k,e=!0),e){let e;e=0===t||t<0!=p.strides[n]<0?0:Math.trunc(t/p.strides[n])+(t%p.strides[n]!=0?1:0),b.push(e)}else b.push(-1)}}for(let e=0;e<p.finalShapeGatherIndices.length;++e){var C=p.finalShapeGatherIndices[e];0<=C?x.push(b[C]):C===Fi&&x.push(1)}return{finalShapeSparse:x.filter((e,t)=>p.finalShapeGatherIndices[t]!==Fi),finalShape:x,isIdentity:g,sliceDim0:y,isSimpleSlice:v,begin:p.begin,end:p.end,strides:p.strides}}function Xi(e,t,n,r,a,s){return a[t]?0<n?s[t]:s[t+1&1]:(a=e<0?r+e:e)<s[0]?s[0]:a>s[1]?s[1]:a}var Yi=Object.freeze({__proto__:null,assertParamsValid:Oi,maskToAxes:function(e){const t=[];let n=0;for(;0<e;)1&e&&t.push(n),e/=2,n++;return t},computeOutShape:Mi,stridesWithElidedDims:Li,getNormalizedAxes:function(t,e,n,r,a,s,i,o,u){var l=t.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(e.length&&0<n){e=e[0],n=n+1;c=Bi(i,e,n,r,t),h=Wi(o,e,n,a,t),p=Li(s,e,n,t)}else for(let e=0;e<l;e++)c[e]=Ui(i,r,s,t,e,u),h[e]=Gi(o,a,s,t,e,u),p[e]=Vi(s,e,u);return{begin:c,end:h,strides:p}},startIndicesWithElidedDims:Bi,stopIndicesWithElidedDims:Wi,stridesForAxis:Vi,startForAxis:Ui,stopForAxis:Gi,isSliceContinous:ji,computeFlatOffset:Hi,parseSliceParams:qi,sliceInfo:Ki});class Ji{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Zi{constructor(){this.classNameMap={}}static getMap(){return null==Zi.instance&&(Zi.instance=new Zi),Zi.instance}static register(e){Zi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function r(e){z(null!=e.className,()=>"Class being registered does not have the static className property defined."),z("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),z(0<e.className.length,()=>"Class being registered has an empty-string as its className, which is disallowed."),Zi.register(e)}var Qi=Object.freeze({__proto__:null,Serializable:Ji,SerializationMap:Zi,registerClass:r});const eo=.001,to=.1;function no(){return 32===I.backend.floatPrecision()?eo:to}function ro(e,t,n){let r=!0;if((oe(e)||oe(t))&&(r=!1),r=oe(e)&&oe(t)?!0:r){var a=e.constructor.name,s=t.constructor.name;if(a!==s)throw new Error(`Arrays are of different type. Actual: ${a}. `+"Expected: "+s)}if(Array.isArray(e)&&Array.isArray(t)){a=ds(e),s=ds(t);if(!ce(a,s))throw new Error("Arrays have different shapes. "+`Actual: [${a}]. Expected: [${s}]`)}var i=oe(e)?e:q(e),o=oe(t)?t:q(t);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs `+`expected: ${o.length}.
`+`Actual:   ${i}.
`+`Expected: ${o}.`);for(let e=0;e<o.length;++e){var u=i[e],l=o[e];if(!n(u,l))throw new Error(`Arrays differ: actual[${e}] = ${u}, expected[${e}] = ${l}.
`+`Actual:   ${i}.
`+`Expected: ${o}.`)}}function ao(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var so=Object.freeze({__proto__:null,TEST_EPSILON_FLOAT16:to,expectArraysClose:function(e,t,n){return null==n&&(n=no()),ro(e,t,(e,t)=>ao(e,t,n))},testEpsilon:no,expectPromiseToFail:function(e,t){e().then(()=>t.fail(),()=>t())},expectArraysEqual:function(e,t){return pe(e)||pe(e[0])||pe(t)||pe(t[0])?ro(e,"string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t,(e,t)=>e==t):ro(e,t,(e,t)=>ao(e,t,0))},expectNumbersClose:function(e,t,n){if(!ao(e,t,n=null==n?no():n))throw new Error(`Numbers differ: actual === ${e}, expected === `+t)},expectValuesInRange:function(t,n,r){for(let e=0;e<t.length;e++)if(t[e]<n||t[e]>r)throw new Error(`Value out of range:${t[e]} low: ${n}, high: `+r)},expectArrayBuffersEqual:function(e,t){var n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error("Expected ArrayBuffer to be of length "+r.length+", but it was "+n.length);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be `+`${r[e]} but got ${n[e]} instead`)},encodeStrings:function t(n){for(let e=0;e<n.length;e++){var r=n[e];Array.isArray(r)?t(r):n[e]=Fa(r)}return n}});function io(){return I}function oo(){return I.memory()}function O(e,t){return I.tidy(e,t)}function C(e){const t=ts(e);t.forEach(e=>e.dispose())}function uo(e){return I.keep(e)}function lo(e,t,n=1){return I.registerBackend(e,t,n)}function co(){return I.backend}const E=n({add_:function(e,t){return e=S(e,"a","add"),t=S(t,"b","add"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(Me,e)}});const ho=n({floorDiv_:function(e,t){return e=S(e,"a","floorDiv"),t=S(t,"b","floorDiv"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(Bt,e)}});const y=n({div_:function(e,t){return e=S(e,"a","div"),t=S(t,"b","div"),[e,t]=Za(e,t),"int32"===e.dtype&&"int32"===t.dtype?ho(e,t):(e={a:e,b:t},I.runKernel(Ct,e,{}))}});const w=n({mul_:function(e,t){return e=S(e,"a","mul"),t=S(t,"b","mul"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(In,e)}});const po=n({abs_:function(e){var t;return"complex64"===(e=S(e,"x","abs")).dtype?(t={x:e},I.runKernel(st,t)):(t={x:e},I.runKernel(Fe,t))}});const fo=n({acos_:function(e){return e={x:S(e,"x","acos")},I.runKernel(De,e)}});const mo=n({acosh_:function(e){return e={x:S(e,"x","acosh")},I.runKernel(Oe,e)}});const go=n({addN_:function(e){z(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),z(1<=e.length,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>S(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!ce(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});var r=t;return I.runKernel(Le,r)}});const yo=n({all_:function(e,t=null,n=!1){return e={x:S(e,"x","all","bool")},t={axis:t,keepDims:n},I.runKernel(ze,e,t)}});const vo=n({any_:function(e,t=null,n=!1){return e={x:S(e,"x","any","bool")},t={axis:t,keepDims:n},I.runKernel(Pe,e,t)}});const bo=n({argMax_:function(e,t=0){return e={x:S(e,"x","argMax")},t={axis:t},I.runKernel(Be,e,t)}});const xo=n({argMin_:function(e,t=0){return e={x:S(e,"x","argMin")},t={axis:t},I.runKernel(We,e,t)}});const wo=n({asin_:function(e){return e={x:S(e,"x","asin")},I.runKernel(Ve,e)}});const ko=n({asinh_:function(e){return e={x:S(e,"x","asinh")},I.runKernel(Ue,e)}});const No=n({atan_:function(e){return e={x:S(e,"x","atan")},I.runKernel(Ge,e)}});const Io=n({atan2_:function(e,t){return e=S(e,"a","atan2"),t=S(t,"b","atan2"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(He,e)}});const So=n({atanh_:function(e){return e={x:S(e,"x","atanh")},I.runKernel(je,e)}});function To(e,t,n,r,a="NHWC",s){var i=e[3];return _o(e,[...t,i],n,s,r,null,null,zo(a))}function Co(e,t,n,r,a,s,i="channelsLast"){var[t,o]=Ro(t);let u;if("channelsLast"===i)u=[t,o,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);u=[t,o,e[1],e[1]]}return _o(e,u,n,r,a,s,!1,i)}function Eo(e,t,n,r,a,s,i="NDHWC"){var[t,o,u]=Fo(t);let l,c;if("NDHWC"===i)c="channelsLast",l=[t,o,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);c="channelsFirst",l=[t,o,u,e[1],e[1]]}return Ao(e,l,n,r,a,!1,c,s)}function _o(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,h,l,c]=e}var[p,d,,f]=t,[n,m]=Ro(n),[r,g]=Ro(r),y=Do(p,r),v=Do(d,g),{padInfo:a,outHeight:s,outWidth:b}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){var p=0===e?"VALID":"NUMBER",p=(l={top:e,bottom:e,left:e,right:e,type:p},function(e,t,n,r,a){null==r&&(r=$o(e,t,n));var s=e[0],e=e[1],s=Oo((s-t+2*r)/n+1,a),e=Oo((e-t+2*r)/n+1,a);return[s,e]}([t,n],s,r,e,o));c=p[0],h=p[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);var p=Math.max(0,(c-1)*r+s-t),d=Math.max(0,(h-1)*a+i-n),f=Math.floor(p/2),p=p-f,m=Math.floor(d/2),d=d-m;l={top:f,bottom:p,left:m,right:d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);f=("channelsLast"===u?e[1]:e[2])[0],p=("channelsLast"===u?e[1]:e[2])[1],m=("channelsLast"===u?e[2]:e[3])[0],d=("channelsLast"===u?e[2]:e[3])[1],u=0===f&&0===p&&0===m&&0===d?"VALID":"EXPLICIT";l={top:f,bottom:p,left:m,right:d,type:u},c=Oo((t-s+f+p)/r+1,o),h=Oo((n-i+m+d)/a+1,o)}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,n,m,y,v,s,o),i=i?f*h:f;let x;return"channelsFirst"===o?x=[u,i,s,b]:"channelsLast"===o&&(x=[u,s,b,i]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:s,outWidth:b,outChannels:i,padInfo:a,strideHeight:n,strideWidth:m,filterHeight:p,filterWidth:d,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:r,dilationWidth:g,inShape:e,outShape:x,filterShape:t}}function Ao(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,p,l,c,h]=e}var[d,f,m,,g]=t,[n,y,v]=Fo(n),[r,b,x]=Fo(r),w=Do(d,r),k=Do(f,b),N=Do(m,x),{padInfo:a,outDepth:o,outHeight:I,outWidth:S}=function(e,t,n,r,a,s,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){var m=0===e?"VALID":"NUMBER",m=(h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:m},function(e,t,n,r,a,s){null==a&&(a=$o(e,t,r));var i=e[0],o=e[1],e=e[2],i=Oo((i-t+2*a)/r+1,s),o=Oo((o-t+2*a)/r+1,s),e=Oo((e-t+2*a)/r+1,s);return[i,o,e,n]}([t,n,r,1],o,1,a,e,c));p=m[0],d=m[1],f=m[2]}else if("same"===e){p=Math.ceil(t/a),d=Math.ceil(n/s),f=Math.ceil(r/i);var c=(p-1)*a+o-t,m=(d-1)*s+u-n,g=(f-1)*i+l-r,y=Math.floor(c/2),c=c-y,v=Math.floor(m/2),m=m-v,b=Math.floor(g/2),g=g-b;h={top:v,bottom:m,left:b,right:g,front:y,back:c,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,l,c,h,n,y,v,w,k,N,o),s=s?g*p:g;let T;return"channelsFirst"===i?T=[u,s,o,I,S]:"channelsLast"===i&&(T=[u,o,I,S,s]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:o,outHeight:I,outWidth:S,outChannels:s,padInfo:a,strideDepth:n,strideHeight:y,strideWidth:v,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:w,effectiveFilterHeight:k,effectiveFilterWidth:N,dilationDepth:r,dilationHeight:b,dilationWidth:x,inShape:e,outShape:T,filterShape:t}}function $o(e,t,n,r=1){t=Do(t,r);return Math.floor((e[0]*(n-1)-n+t)/2)}function Ro(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Fo(e){return"number"==typeof e?[e,e,e]:e}function Do(e,t){return t<=1?e:e+(e-1)*(t-1)}function Oo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Mo(e){var[e,t,n]=Ro(e);return 1===e&&1===t&&1===n}function Lo(e,t){return Mo(e)||Mo(t)}function zo(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function Po(t,e,n){if(null!=n){if("string"==typeof e)throw Error(`Error in ${t}: pad must be an integer when using `+`dimRoundingMode ${n} but got pad ${e}.`);if("number"==typeof e)z(K(e),()=>`Error in ${t}: pad must be an integer when using `+`dimRoundingMode ${n} but got pad ${e}.`);else{if("object"!=typeof e)throw Error(`Error in ${t}: Unknown padding parameter: `+e);e.forEach(e=>{e.forEach(e=>{z(K(e),()=>`Error in ${t}: pad must be an integer when using `+`dimRoundingMode ${n} but got pad ${e}.`)})})}}}const M=n({reshape_:function(e,t){return e={x:S(e,"x","reshape","string_or_numeric")},t={shape:t},I.runKernel(Wn,e,t)}});const Bo=n({avgPool_:function(e,t,n,r,a){e=S(e,"x","avgPool","float32"),z(Lo(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '1'`);let s=e,i=!1;3===e.rank&&(i=!0,s=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),Po("avgPool",r,a);var o={x:s},t={filterSize:t,strides:n,pad:r,dimRoundingMode:a},r=I.runKernel(qe,o,t),r=x(r,e.dtype);return i?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});const Wo=n({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){let i=e=S(e,"x","avgPool3d","float32"),o=!1;return 4===e.rank&&(o=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),z(5===i.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),z("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),Po("avgPool3d",r,a),e={x:i},t={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},n=I.runKernel(Xe,e,t),n=x(n,i.dtype),o?M(n,[n.shape[1],n.shape[2],n.shape[3],n.shape[4]]):n}});const Vo=n({concat_:function(e,t=0){z(1<=e.length,()=>"Pass at least one tensor to concat");const n=ms(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===n.length?ti(n[0]):(e=n,t={axis:t},I.runKernel(it,e,t))}});const Uo=n({sigmoid_:function(e){return e={x:S(e,"x","sigmoid","float32")},I.runKernel(rr,e)}});const Go=n({slice_:function(e,t,n){if(0===(e=S(e,"x","slice","string_or_numeric")).rank)throw new Error("Slicing scalar is not possible");return e={x:e},t={begin:t,size:n},I.runKernel(Qn,e,t)}});const jo=n({tanh_:function(e){return e={x:S(e,"x","tanh","float32")},I.runKernel(Nr,e)}});var Ho=n({basicLSTMCell_:function(e,t,n,r,a,s){var e=S(e,"forgetBias","basicLSTMCell"),t=S(t,"lstmKernel","basicLSTMCell"),n=S(n,"lstmBias","basicLSTMCell"),r=S(r,"data","basicLSTMCell"),a=S(a,"c","basicLSTMCell"),s=S(s,"h","basicLSTMCell"),r=Vo([r,s],1),s=T(r,t),t=(r=E(s,n)).shape[0],s=r.shape[1]/4,n=[t,s],t=Go(r,[0,0],n),i=Go(r,[0,s],n),o=Go(r,[0,2*s],n),r=Go(r,[0,3*s],n);return[s=E(w(Uo(t),jo(i)),w(a,Uo(E(e,o)))),w(jo(s),Uo(r))]}});const qo=n({batchToSpaceND_:function(e,t,n){const r=S(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);z(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length `+t.length),z(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  `+t.length),z(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of `+`the elements of blockShape ${t.join(" * ")} === `+a);var e={x:r},s={blockShape:t,crops:n};return I.runKernel(Ze,e,s)}});const Ko=n({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001),e=S(e,"x","batchNorm"),t=S(t,"mean","batchNorm"),n=S(n,"variance","batchNorm");let i;null!=a&&(i=S(a,"scale","batchNorm"));let o;return null!=r&&(o=S(r,"offset","batchNorm")),z(t.rank===n.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(null==o||t.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(null==i||t.rank===i.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),a={x:function(e){let t;return t=0===e.rank||1===e.rank?M(e,[1,1,1,e.size]):2===e.rank?M(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?M(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}(e),scale:i,offset:o,mean:t,variance:n},r={varianceEpsilon:s},t=I.runKernel(Wt,a,r),M(t,e.shape)}});const Xo=n({batchNorm2d_:function(e,t,n,r,a,s){const i=S(e,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(n,"variance","batchNorm");let l;null!=a&&(l=S(a,"scale","batchNorm"));let c;return null!=r&&(c=S(r,"offset","batchNorm")),z(2===i.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+"."),z(2===o.rank||1===o.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+`got rank ${o.rank}.`),z(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+`but got rank ${u.rank}.`),null!=l&&z(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+`but got rank ${l.rank}.`),null!=c&&z(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+`but got rank ${c.rank}.`),Ko(i,o,u,c,l,s)}});const Yo=n({batchNorm3d_:function(e,t,n,r,a,s){const i=S(e,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(n,"variance","batchNorm");let l;null!=a&&(l=S(a,"scale","batchNorm"));let c;return null!=r&&(c=S(r,"offset","batchNorm")),z(3===i.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+"."),z(3===o.rank||1===o.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+`got rank ${o.rank}.`),z(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+`but got rank ${u.rank}.`),null!=l&&z(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+`but got rank ${l.rank}.`),null!=c&&z(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+`but got rank ${c.rank}.`),Ko(i,o,u,c,l,s)}});const Jo=n({batchNorm4d_:function(e,t,n,r,a,s){const i=S(e,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(n,"variance","batchNorm");let l;null!=a&&(l=S(a,"scale","batchNorm"));let c;return null!=r&&(c=S(r,"offset","batchNorm")),z(4===i.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+"."),z(4===o.rank||1===o.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+`got rank ${o.rank}.`),z(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+`but got rank ${u.rank}.`),null!=l&&z(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+`but got rank ${l.rank}.`),null!=c&&z(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+`but got rank ${c.rank}.`),Ko(i,o,u,c,l,s)}});const Zo=n({bincount_:function(e,t,n){const r=S(e,"x","bincount"),a=S(t,"weights","bincount");return z("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),z(0<=n,()=>`size must be non-negative, but got ${n}.`),z(a.size===r.size||0===a.size,()=>"Error in bincount: weights must have the same size as input or"+`0-length, but got input shape: ${r.shape}, weights shape: `+a.shape+"."),e={x:r,weights:a},t={size:n},I.runKernel(Qe,e,t)}});const Qo=n({broadcastArgs_:function(e,t){if(e=S(e,"s0","broadcastArgs","int32"),t=S(t,"s1","broadcastArgs","int32"),1!==e.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). Has rank "+e.rank);if(1!==t.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). Has rank "+t.rank);return e={s0:e,s1:t},I.runKernel(et,e)}});const eu=n({broadcastTo_:function(e,t){let n=S(e,"broadcastTo","x");var r=n.shape;if(t.some(e=>!(0<e)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const o=n.shape.slice();for(;o.length<t.length;)o.unshift(1);n=M(n,o)}var a=n.shape;const s=Array.from(t);for(let e=t.length-1;0<=e;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>1<e?t:-1).filter(e=>0<=e).length)return ti(n);var e={x:n},i={reps:s};return I.runKernel(Ir,e,i)}});const tu=n({ceil_:function(e){return e={x:S(e,"x","ceil","float32")},I.runKernel(nt,e)}});const nu=n({clipByValue_:function(e,t,n){var e=S(e,"x","clipByValue"),e=(z(t<=n,()=>`Error in clip: min (${t}) must be `+`less than or equal to max (${n}).`),{x:e}),r={clipValueMin:t,clipValueMax:n};return I.runKernel(rt,e,r)}});const ru=n({concat1d_:function(e){return Vo(e,0)}});const au=n({concat2d_:function(e,t){return Vo(e,t)}});const su=n({concat3d_:function(e,t){return Vo(e,t)}});const iu=n({concat4d_:function(e,t){return Vo(e,t)}});const ou=n({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){e=S(e,"x","conv2d","float32");const o=S(t,"filter","conv2d","float32");let u=e,l=!1;3===e.rank&&(l=!0,u=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),z(4===o.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+o.rank+"."),Po("conv2d",r,i);const c="NHWC"===a?u.shape[3]:u.shape[1];return z(c===o.shape[2],()=>`Error in conv2d: depth of input (${c}) must match `+`input depth for filter ${o.shape[2]}.`),z(Lo(n,s),()=>"Error in conv2D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${s}'`),t={x:u,filter:o},e={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},r=I.runKernel(ot,t,e),l?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});const uu=n({conv1d_:function(e,t,n,r,a="NWC",s=1,i){e=S(e,"x","conv1d");const o=S(t,"filter","conv1d");let u=e,l=!1;2===e.rank&&(l=!0,u=M(e,[1,e.shape[0],e.shape[1]])),z(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),z(3===o.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+o.rank+"."),Po("conv1d",r,i),z(u.shape[2]===o.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match `+`input depth for filter ${o.shape[1]}.`),z(Lo(n,s),()=>"Error in conv1D: Either stride or dilation must be 1. "+`Got stride ${n} and dilation '${s}'`),z("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);var t=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]),e=M(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=[1,n],h=[1,s],e=ou(e,t,c,r,"NHWC",h,i);return l?M(e,[e.shape[2],e.shape[3]]):M(e,[e.shape[0],e.shape[2],e.shape[3]])}});const lu=n({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){z(e.length===t.rank,()=>"Length of inShape "+`(${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=M(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),z(4===o.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."),z(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),z(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];z(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must `+`match input depth for filter ${n.shape[2]}.`),z(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must `+`match output depth for filter ${n.shape[3]}.`),Po("conv2dDerInput",a,i);var p={dy:u,filter:n},r={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},a=I.runKernel(lt,p,r);return l?M(a,[a.shape[1],a.shape[2],a.shape[3]]):a}});const cu=n({conv2dTranspose_:function(e,t,n,r,a,s){return e=S(e,"x","conv2dTranspose"),t=S(t,"filter","conv2dTranspose"),lu(n,e,t,r,a,"NHWC",s)}});const hu=n({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){e=S(e,"x","conv3d");const i=S(t,"filter","conv3d");let o=e,u=!1;return 4===e.rank&&(u=!0,o=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),z(5===o.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${o.rank}.`),z(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."),z(o.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${o.shape[4]}) must match `+`input depth for filter ${i.shape[3]}.`),z(Lo(n,s),()=>"Error in conv3D: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '${s}'`),z("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),t={x:o,filter:i},e={strides:n,pad:r,dataFormat:a,dilations:s},r=I.runKernel(ct,t,e),u?M(r,[r.shape[1],r.shape[2],r.shape[3],r.shape[4]]):r}});const pu=n({conv3DBackpropInput_:function(e,t,n,r,a){z(e.length===t.rank,()=>"Length of inShape "+`(${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=M(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];z(5===s.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."),z(5===i.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank),z(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),z(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must `+`match input depth for filter ${n.shape[3]}.`),z(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must `+`match output depth for filter ${n.shape[4]}.`);var c={dy:i,filter:n},a={pad:a,strides:r,inputShape:s},r=I.runKernel(pt,c,a);return o?M(r,[r.shape[1],r.shape[2],r.shape[3],r.shape[4]]):r}});const du=n({conv3dTranspose_:function(e,t,n,r,a){return e=S(e,"x","conv3dTranspose"),t=S(t,"filter","conv3dTranspose"),pu(n,e,t,r,a)}});const fu=n({cos_:function(e){return e={x:S(e,"x","cos","float32")},I.runKernel(dt,e)}});const mu=n({cosh_:function(e){return e={x:S(e,"x","cosh","float32")},I.runKernel(ft,e)}});const gu=n({cumprod_:function(e,t=0,n=!1,r=!1){return e={x:S(e,"x","cumprod")},t={axis:t,exclusive:n,reverse:r},I.runKernel(mt,e,t)}});const yu=n({cumsum_:function(e,t=0,n=!1,r=!1){return e={x:S(e,"x","cumsum")},t={axis:t,exclusive:n,reverse:r},I.runKernel(gt,e,t)}});const vu=n({denseBincount_:function(e,t,n,r=!1){const a=S(e,"x","denseBincount"),s=S(t,"weights","denseBincount");return z("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),z(a.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+`rank ${a.rank}.`),z(0<=n,()=>`size must be non-negative, but got ${n}.`),z(s.size===a.size||0===s.size,()=>"Error in denseBincount: weights must have the same shape as x or "+`0-length, but got x shape: ${a.shape}, weights shape: `+s.shape+"."),e={x:a,weights:s},t={size:n,binaryOutput:r},I.runKernel(vt,e,t)}});const bu=n({depthToSpace_:function(e,t,n="NHWC"){const r=S(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return z(1<t,()=>"blockSize should be > 1 for depthToSpace, but was: "+t),z(0<=a*t,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    `+r.shape),z(0<=s*t,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        `+r.shape),z(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape `+r.shape),e={x:r},n={blockSize:t,dataFormat:n},I.runKernel(bt,e,n)}});const xu=n({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){e=S(e,"x","depthwiseConv2d","float32");const o=S(t,"filter","depthwiseConv2d","float32");let u=e,l=!1;return 3===e.rank&&(l=!0,u=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(4===u.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+`rank ${u.rank}.`),z(4===o.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+o.rank+"."),z(u.shape[3]===o.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+`(${u.shape[3]}) must match the inChannels dimension in `+`filter ${o.shape[2]}.`),Po("depthwiseConv2d",r,i),t={x:u,filter:o},e={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},n=I.runKernel(xt,t,e),l?M(n,[n.shape[1],n.shape[2],n.shape[3]]):n}});var wu=n({diag_:function(e){return e={x:S(e,"x","diag")},I.runKernel(Nt,e)}});const ku=n({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=S(e,"x","dilation2d"),o=S(t,"filter","dilation2d");z(3===i.rank||4===i.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+i.rank+"."),z(3===o.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+o.rank+"."),z("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let u=i,l=!1;return 3===i.rank&&(u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0),e={x:u,filter:o},t={strides:n,pad:r,dilations:a},n=I.runKernel(It,e,t),l?M(n,[n.shape[1],n.shape[2],n.shape[3]]):n}});const Nu=n({equal_:function(e,t){return e=S(e,"a","equal","string_or_numeric"),t=S(t,"b","equal","string_or_numeric"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(Rt,e)}});const Iu=n({where_:function(e,t,n){var t=S(t,"a","where"),n=S(n,"b","where"),r=L(L((e=S(e,"condition","where","bool")).shape,t.shape),n.shape),e={condition:eu(e,r),t:eu(t,r),e:eu(n,r)};return I.runKernel(Jn,e)}});const Su=n({zerosLike_:function(e){return e={x:S(e,"x","zerosLike")},I.runKernel($r,e)}});const Tu=n({divNoNan_:function(e,t){var e=S(e,"a","div"),t=S(t,"b","div"),e=([e,t]=Za(e,t),y(e,t)),n=Su(e),t=Nu(t,n);return Iu(t,n,e)}});const Cu=n({dot_:function(e,t){const n=S(e,"t1","dot"),r=S(t,"t2","dot"),a=(z(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+`${n.rank} and ${r.rank}.`),1===n.rank?n.size:n.shape[1]),s=1===r.rank?r.size:r.shape[0];return z(a===s,()=>"Error in dot: inner dimensions of inputs must match, but got "+`${a} and ${s}.`),1===n.rank&&1===r.rank?(e=M(n,[1,-1]),t=M(r,[-1,1]),e=T(e,t),M(e,[])):1===n.rank&&2===r.rank?(t=M(n,[1,-1]),e=M(r,[r.shape[0],r.shape[1]]),t=T(t,e),M(t,[t.size])):2===n.rank&&1===r.rank?(e=M(r,[-1,1]),t=T(n,e),M(t,[t.size])):(e=M(r,[r.shape[0],r.shape[1]]),T(n,e))}});const Eu=n({einsum_:function(e,...t){return t=t.map((e,t)=>S(e,"tensors"+t,"einsum")),e={equation:e},I.runKernel(Et,t,e)}});const _u=n({elu_:function(e){return e={x:S(e,"x","elu","float32")},I.runKernel(_t,e)}});const Au=n({erf_:function(e){let t=S(e,"x","erf");return z("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),e={x:t="int32"===t.dtype?x(t,"float32"):t},I.runKernel($t,e)}});const $u=n({exp_:function(e){return e={x:S(e,"x","exp")},I.runKernel(Ft,e)}});const Ru=n({expandDims_:function(e,t=0){return e=S(e,"x","expandDims","string_or_numeric"),z(t<=e.rank,()=>"Axis must be <= rank of the tensor"),e={input:e},t={dim:t},I.runKernel(Dt,e,t)}});const Fu=n({expm1_:function(e){return e={x:S(e,"x","expm1")},I.runKernel(Ot,e)}});const Du=n({tile_:function(e,t){const n=S(e,"x","tile","string_or_numeric");z(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} `+`must match length of reps ${t}.`);var e={x:n},r={reps:t};return I.runKernel(Ir,e,r)}});const Ou=n({eye_:function(e,t,n,r="float32"){const a=ei([e,t=null==t?e:t],r);var s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);if(r=M(a.toTensor(),[e,t]),null==n)return r;if(1===n.length)return Du(Ru(r,0),[n[0],1,1]);if(2===n.length)return Du(Ru(Ru(r,0),0),[n[0],n[1],1,1]);if(3===n.length)return Du(Ru(Ru(Ru(r,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+`batchShapes, but received ${n.length}D.`)}});function Mu(e,t,n){e={shape:e,value:t,dtype:n};return I.runKernel(Lt,{},e)}const Lu=n({floor_:function(e){return e={x:S(e,"x","floor","float32")},I.runKernel(Pt,e)}});const zu=n({gather_:function(e,t,n=0,r=0){return e={x:S(e,"x","gather"),indices:S(t,"indices","gather","int32")},t={axis:n,batchDims:r},I.runKernel(Vt,e,t)}});const Pu=n({greater_:function(e,t){return e=S(e,"a","greater","string_or_numeric"),t=S(t,"b","greater","string_or_numeric"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(Gt,e)}});const Bu=n({greaterEqual_:function(e,t){return e=S(e,"a","greaterEqual","string_or_numeric"),t=S(t,"b","greaterEqual","string_or_numeric"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(jt,e)}});const Wu=n({imag_:function(e){return e={input:S(e,"input","imag")},I.runKernel(Kt,e)}});const Vu=n({isFinite_:function(e){return e={x:S(e,"x","isFinite")},I.runKernel(Xt,e)}});const Uu=n({isInf_:function(e){return e={x:S(e,"x","isInf")},I.runKernel(Yt,e)}});const Gu=n({isNaN_:function(e){return e={x:S(e,"x","isNaN")},I.runKernel(Jt,e)}});const ju=n({leakyRelu_:function(e,t=.2){return e={x:S(e,"x","leakyRelu")},t={alpha:t},I.runKernel(Zt,e,t)}});const Hu=n({less_:function(e,t){return e=S(e,"a","less","string_or_numeric"),t=S(t,"b","less","string_or_numeric"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(Qt,e)}});const qu=n({lessEqual_:function(e,t){return e=S(e,"a","lessEqual","string_or_numeric"),t=S(t,"b","lessEqual","string_or_numeric"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(en,e)}});function Ku(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");e={start:e,stop:t,num:n};return I.runKernel(tn,{},e)}const Xu=n({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=S(e,"x","localResponseNormalization");z(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),z(K(t),()=>"Error in localResponseNormalization: depthRadius must be an "+`integer but got depthRadius ${t}.`);let i=s,o=!1;return 3===s.rank&&(o=!0,i=M(s,[1,s.shape[0],s.shape[1],s.shape[2]])),e={x:i},n={depthRadius:t,bias:n,alpha:r,beta:a},r=I.runKernel(ln,e,n),o?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});const Yu=n({log_:function(e){return e={x:S(e,"x","log","float32")},I.runKernel(nn,e)}});const Ju=n({log1p_:function(e){return e={x:S(e,"x","log1p")},I.runKernel(rn,e)}});function Zu(e,t){z(ge(e),()=>"The f passed in variableGrads(f) must be a function"),z(null==t||Array.isArray(t)&&t.every(e=>e instanceof Ka),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");var n=null!=t;if(!n){t=[];for(const u in I.registeredVariables)t.push(I.registeredVariables[u])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;z(0<(t=t.filter(e=>e.trainable)).length,()=>"variableGrads() expects at least one of the input variables to "+`be trainable, but none of the ${a} variables is `+"trainable.");const{value:s,grads:i}=I.gradients(e,t,null,!0),o=(z(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),z(0===s.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+`returned a rank-${s.rank} tensor`),{});return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:s,grads:o}}function Qu(e){return I.customGrad(e)}function el(e){if(0<e.filter(e=>null==e).length)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}const tl=n({neg_:function(e){return e={x:S(e,"x","neg")},I.runKernel(Sn,e)}});const nl=n({softplus_:function(e){return e={x:S(e,"x","softplus")},I.runKernel(ar,e)}});const rl=n({logSigmoid_:function(e){e=S(e,"x","logSigmoid");const t=Qu(t=>{return{value:tl(nl(tl(t))),gradFunc:e=>{return w(e,Uo(tl(t)))}}});return t(e)}});const al=n({max_:function(e,t=null,n=!1){return e={x:S(e,"x","max")},t={reductionIndices:t,keepDims:n},I.runKernel(hn,e,t)}});const k=n({sub_:function(e,t){return e=S(e,"a","sub"),t=S(t,"b","sub"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(wr,e)}});const b=n({sum_:function(e,t=null,n=!1){let r=S(e,"x","sum");return e={x:r="bool"===r.dtype?x(r,"int32"):r},t={axis:t,keepDims:n},I.runKernel(ir,e,t)}});const sl=n({logSoftmax_:function(e,r=-1){if(e=S(e,"logits","logSoftmax"),(r=-1===r?e.rank-1:r)!==e.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${e.rank} and axis was `+r);const t=Qu((e,t)=>{var n=al(e,r,!0),e=k(e,n),n=k(x(e,"float32"),Yu(b($u(e),r,!0)));t([n]);return{value:n,gradFunc:(e,t)=>{var[t]=t,t=$u(t);return k(e,w(b(e,r,!0),t))}}});return t(e)}});function il(t,n){for(let e=0;e<t.length;++e)if(t[t.length-e-1]!==n-1-e)return!1;return!0}function ol(t,n,r){var a=t.length+n.length;const s=[];let i=0,o=0;for(let e=0;e<a;e++)-1===r.indexOf(e)?s.push(t[i++]):s.push(n[o++]);return s}function ul(t,n){const r=[];var a=t.length;for(let e=0;e<a;e++)-1===n.indexOf(e)&&r.push(t[e]);var e=n.map(e=>t[e]);return[r,e]}function ll(e,t){return ol(e,t.map(e=>1),t)}function cl(e,t,n){z(il(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function hl(t,n){if(il(t,n))return null;const r=[];for(let e=0;e<n;++e)-1===t.indexOf(e)&&r.push(e);return t.forEach(e=>r.push(e)),r}function pl(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function dl(t,n){const r=[];for(let e=n-t;e<n;++e)r.push(e);return r}const fl=n({logSumExp_:function(e,t=null,n=!1){var e=S(e,"x","logSumExp"),t=Q(t,e.shape),r=al(e,t,!0),e=k(e,r),e=$u(e),e=b(e,t),e=Yu(e),r=E(M(r,e.shape),e);return n?(e=ll(r.shape,t),M(r,e)):r}});const ml=n({logicalAnd_:function(e,t){return e=S(e,"a","logicalAnd","bool"),t=S(t,"b","logicalAnd","bool"),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(an,e)}});const gl=n({logicalNot_:function(e){return e={x:S(e,"x","logicalNot","bool")},I.runKernel(sn,e)}});const yl=n({logicalOr_:function(e,t){return e=S(e,"a","logicalOr","bool"),t=S(t,"b","logicalOr","bool"),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(on,e)}});const vl=n({logicalXor_:function(e,t){var n=S(e,"a","logicalXor","bool"),r=S(t,"b","logicalXor","bool");return L(n.shape,r.shape),ml(yl(e,t),gl(ml(e,t)))}});const bl=n({maxPool_:function(e,t,n,r,a){let s=e=S(e,"x","maxPool"),i=!1;return 3===e.rank&&(i=!0,s=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),z(Lo(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${n} and dilations '1'`),Po("maxPool",r,a),e={x:s},t={filterSize:t,strides:n,pad:r,dimRoundingMode:a},r=I.runKernel(dn,e,t),i?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});const xl=n({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=e=S(e,"x","maxPool3d"),o=!1;return 4===e.rank&&(o=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),z(5===i.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),z("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),Po("maxPool3d",r,a),e={x:i},t={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},n=I.runKernel(mn,e,t),o?M(n,[n.shape[1],n.shape[2],n.shape[3],n.shape[4]]):n}});const wl=n({maxPoolWithArgmax_:function(e,t,n,r,a=!1){return e={x:S(e,"x","maxPoolWithArgmax")},t={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},{result:(n=I.runKernel(yn,e,t))[0],indexes:n[1]}}});const kl=n({maximum_:function(e,t){let n=S(e,"a","maximum"),r=S(t,"b","maximum");return[n,r]=Za(n,r),"bool"===n.dtype&&(n=x(n,"int32"),r=x(r,"int32")),L(n.shape,r.shape),e={a:n,b:r},I.runKernel(pn,e)}});const Nl=n({mean_:function(e,t=null,n=!1){return e={x:S(e,"x","mean")},t={axis:t,keepDims:n},I.runKernel(vn,e,t)}});function Il(e,t="float32"){var n;if("complex64"===t)return r=Il(e,"float32"),n=Il(e,"float32"),gs(r,n);var r=xe(U(e),t);return I.makeTensor(r,e,t)}function Sl(e,t="float32"){var n;if("complex64"===t)return r=Sl(e,"float32"),n=Il(e,"float32"),gs(r,n);var r=be(U(e),t);return I.makeTensor(r,e,t)}const Tl=n({min_:function(e,t=null,n=!1){return e={x:S(e,"x","min")},t={axis:t,keepDims:n},I.runKernel(bn,e,t)}});const Cl=n({minimum_:function(e,t){let n=S(e,"a","minimum"),r=S(t,"b","minimum");return[n,r]=Za(n,r),"bool"===n.dtype&&(n=x(n,"int32"),r=x(r,"int32")),L(n.shape,r.shape),e={a:n,b:r},I.runKernel(xn,e)}});const El=n({mirrorPad_:function(e,t,n){z("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+`Got ${n}.`);const r=S(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");z(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. `+`Got ${t.length}.`);const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)z(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),z(0<=t[e][0]&&t[e][0]<=r.shape[e]-a&&0<=t[e][1]&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal `+`to ${r.shape[e]-a} or less than 0 for input of `+"shape "+r.shape);var e={paddings:t,mode:n},s={x:r};return I.runKernel(wn,s,e)}});const _l=n({mod_:function(e,t){return e=S(e,"a","mod"),t=S(t,"b","mod"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(kn,e)}});const Al=n({square_:function(e){return e=S(e,"x","square"),I.runKernel("Square",{x:e},{})}});const $l=n({moments_:function(e,t=null,n=!1){var t=Q(t,(e=S(e,"x","moments")).shape),r=Nl(e,t,n);let a=r.shape;return n||(a=ll(r.shape,t)),e=Al(k(x(e,"float32"),M(r,a))),{mean:r,variance:Nl(e,t,n)}}});var Rl=n({multiRNNCell_:function(t,e,n,r){var e=S(e,"data","multiRNNCell"),a=ms(n,"c","multiRNNCell"),s=ms(r,"h","multiRNNCell");let i=e;const o=[];for(let e=0;e<t.length;e++){var u=t[e](i,a[e],s[e]);o.push(u[0]),o.push(u[1]),i=u[1]}const l=[],c=[];for(let e=0;e<o.length;e+=2)l.push(o[e]),c.push(o[e+1]);return[l,c]}});const Fl=n({multinomial_:function(e,t,n,r=!1){var a=(e=S(e,"logits","multinomial")).size,s=e.rank;if(a<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+a+".");if(2<s)throw new Error("Rank of probabilities must be 1 or 2, but is "+s);return n=n||Math.random(),a={logits:1===s?M(e,[1,-1]):e},e={numSamples:t,seed:n,normalized:r},t=I.runKernel(Nn,a,e),1===s?M(t,[t.size]):t}});const Dl=n({notEqual_:function(e,t){return e=S(e,"a","notEqual","string_or_numeric"),t=S(t,"b","notEqual","string_or_numeric"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(Tn,e)}});const Ol=n({onesLike_:function(e){return e={x:S(e,"x","onesLike")},I.runKernel(An,e)}});var Ml=n({outerProduct_:function(e,t){const n=S(e,"v1","outerProduct"),r=S(t,"v2","outerProduct");return z(1===n.rank&&1===r.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+`${n.rank} and ${r.rank}.`),e=M(n,[-1,1]),t=M(r,[1,-1]),T(e,t)}});const Ll=n({pad_:function(e,t,n=0){if(0===(e=S(e,"x","pad")).rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return t={paddings:t,constantValue:n},n={x:e},I.runKernel(Fn,n,t)}});var zl=n({pad1d_:function(e,t,n=0){return z(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Ll(e,[t],n)}});var Pl=n({pad2d_:function(e,t,n=0){return z(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ll(e,t,n)}});var Bl=n({pad3d_:function(e,t,n=0){return z(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ll(e,t,n)}});var Wl=n({pad4d_:function(e,t,n=0){return z(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ll(e,t,n)}});const Vl=n({spaceToBatchND_:function(e,r,a){const t=S(e,"x","spaceToBatchND");z(t.rank>=1+r.length,()=>`input rank ${t.rank} should be > than [blockShape] `+r.length),z(a.length===r.length,()=>`paddings.shape[0] ${a.length} must be equal to [blockShape] `+r.length),z(t.shape.reduce((e,t,n)=>0<n&&n<=r.length?e&&(t+a[n-1][0]+a[n-1][1])%r[n-1]==0:e,!0),()=>`input spatial dimensions ${t.shape.slice(1)} with paddings ${a.toString()} must be divisible by blockShapes `+r.toString());var e={x:t},n={blockShape:r,paddings:a};return I.runKernel(or,e,n)}});const Ul=n({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");let o=e=S(e,"x","maxPool"),u=!1;3===e.rank&&(u=!0,o=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(Lo(s,a),()=>"Error in pool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '${a}'`);var l=[(e=Co(o.shape,t,s,a,r)).dilationHeight,e.dilationWidth];let c;c="same"===r?function(e,n){const t=e.map((e,t)=>e+(e-1)*(n[t]-1)),r=t.map(e=>e-1),a=r.map(e=>Math.floor(e/2)),s=r.map((e,t)=>e-a[t]);return r.map((e,t)=>[a[t],s[t]])}([e.filterHeight,e.filterWidth],l):[[0,0],[0,0]];var h=1===l[0]&&1===l[1],[e,p]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),u=t.map((e,t)=>[r[t],o[t]]),l=t.map((e,t)=>[0,i[t]]);return[u,l]}([e.inHeight,e.inWidth],l,c);const d=h?r:"valid",f=h?o:Vl(o,l,e),m="avg"===n?()=>Bo(f,t,s,d,i):()=>bl(f,t,s,d,i);return r=m(),e=h?r:qo(r,l,p),u?M(e,[e.shape[1],e.shape[2],e.shape[3]]):e}});const Gl=n({pow_:function(e,t){return e=S(e,"base","pow"),t=S(t,"exp","pow"),[e,t]=Za(e,t),e={a:e,b:t},I.runKernel(Dn,e)}});const jl=n({prelu_:function(e,t){return e={x:S(e,"x","prelu"),alpha:S(t,"alpha","prelu")},I.runKernel(On,e)}});const Hl=n({prod_:function(e,t=null,n=!1){let r=S(e,"x","prod");return e={x:r="bool"===r.dtype?x(r,"int32"):r},t={axis:t,keepDims:n},I.runKernel(Mn,e,t)}});var ql=n({rand_:function(e,t,n){var r=U(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return I.makeTensor(a,e,n)}});function Kl(e,t){return e(t={exports:{}},t.exports),t.exports}var Xl=Kl(function(e){!function(e,t){function a(e){var r,t=this,n=(r=4022871197,function(e){e=e.toString();for(var t=0;t<e.length;t++){var n=.02519603282416938*(r+=e.charCodeAt(t));r=(n=(n-(r=n>>>0))*r)>>>0,r+=4294967296*(n-=r)}return 2.3283064365386963e-10*(r>>>0)});t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1)}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function n(e,t){var n=new a(e),e=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,e&&("object"==typeof e&&s(e,n),r.state=function(){return s(n,{})}),r}e&&e.exports?e.exports=n:t&&t.amd?t(function(){return n}):this.alea=n}(e,!1)}),Yl=Kl(function(e){!function(e,t){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function n(e,t){function n(){return(r.next()>>>0)/4294967296}var r=new a(e),e=t&&t.state;return n.double=function(){do{var e=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},n.int32=r.next,n.quick=n,e&&("object"==typeof e&&s(e,r),n.state=function(){return s(r,{})}),n}e&&e.exports?e.exports=n:t&&t.amd?t(function(){return n}):this.xor128=n}(e,!1)}),Jl=Kl(function(e){!function(e,t){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,e===((t.v=0)|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function n(e,t){function n(){return(r.next()>>>0)/4294967296}var r=new a(e),e=t&&t.state;return n.double=function(){do{var e=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},n.int32=r.next,n.quick=n,e&&("object"==typeof e&&s(e,r),n.state=function(){return s(r,{})}),n}e&&e.exports?e.exports=n:t&&t.amd?t(function(){return n}):this.xorwow=n}(e,!1)}),Zl=Kl(function(e){!function(e,t){function a(e){var a=this;a.next=function(){var e=a.x,t=a.i,n=e[t],r=(n^=n>>>7)^n<<24;return r=(r^=(n=e[t+1&7])^n>>>10)^((n=e[t+3&7])^n>>>3)^((n=e[t+4&7])^n<<7),n=e[t+7&7],e[t]=r^=(n^=n<<13)^n<<9,a.i=t+1&7,r};var t,n=a,r=e,s=[];if(r===(0|r))s[0]=r;else for(r=""+r,t=0;t<r.length;++t)s[7&t]=s[7&t]<<15^r.charCodeAt(t)+s[t+1&7]<<13;for(;s.length<8;)s.push(0);for(t=0;t<8&&0===s[t];++t);for(8==t&&(s[7]=-1),n.x=s,n.i=0,t=256;0<t;--t)n.next()}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function n(e,t){function n(){return(r.next()>>>0)/4294967296}var r=new a(e=null==e?+new Date:e),e=t&&t.state;return n.double=function(){do{var e=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},n.int32=r.next,n.quick=n,e&&(e.x&&s(e,r),n.state=function(){return s(r,{})}),n}e&&e.exports?e.exports=n:t&&t.amd?t(function(){return n}):this.xorshift7=n}(e,!1)}),Ql=Kl(function(e){!function(e,t){function a(e){var s=this;s.next=function(){var e,t,n=s.w,r=s.X,a=s.i;return s.w=n=n+1640531527|0,t=r[a+34&127],e=r[a=a+1&127],t=r[a]=(t^=t<<13)^t>>>15^((e^=e<<17)^e>>>12),s.i=a,t+(n^n>>>16)|0};var t,n,r,a,i,o=s,u=e,l=[],c=128;for(u===(0|u)?(n=u,u=null):(u+="\0",n=0,c=Math.max(c,u.length)),r=0,a=-32;a<c;++a)u&&(n^=u.charCodeAt((a+32)%u.length)),0===a&&(i=n),n=(n=(n=(n^=n<<10)^n>>>15)^n<<4)^n>>>13,0<=a&&(r=0==(t=l[127&a]^=n+(i=i+1640531527|0))?r+1:0);for(128<=r&&(l[127&(u&&u.length||0)]=-1),r=127,a=512;0<a;--a)n=l[r+34&127],t=l[r=r+1&127],n=(n^=n<<13)^n>>>15,t=(t^=t<<17)^t>>>12,l[r]=n^t;o.w=i,o.X=l,o.i=r}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function n(e,t){function n(){return(r.next()>>>0)/4294967296}var r=new a(e=null==e?+new Date:e),e=t&&t.state;return n.double=function(){do{var e=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},n.int32=r.next,n.quick=n,e&&(e.X&&s(e,r),n.state=function(){return s(r,{})}),n}e&&e.exports?e.exports=n:t&&t.amd?t(function(){return n}):this.xor4096=n}(e,!1)}),ec=Kl(function(e){!function(e,t){function a(e){var a=this,t="";a.next=function(){var e=(e=a.b)<<25^e>>>7^(t=a.c),t=t-(n=a.d)|0,n=n<<24^n>>>8^(r=a.a),r=r-e|0;return a.b=e=e<<20^e>>>12^t,a.c=t=t-n|0,a.d=n<<16^t>>>16^r,a.a=r-e|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,e===Math.floor(e)?(a.a=e/4294967296|0,a.b=0|e):t+=e;for(var n=0;n<t.length+20;n++)a.b^=0|t.charCodeAt(n),a.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function n(e,t){function n(){return(r.next()>>>0)/4294967296}var r=new a(e),e=t&&t.state;return n.double=function(){do{var e=((r.next()>>>11)+(r.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},n.int32=r.next,n.quick=n,e&&("object"==typeof e&&s(e,r),n.state=function(){return s(r,{})}),n}e&&e.exports?e.exports=n:t&&t.amd?t(function(){return n}):this.tychei=n}(e,!1)}),tc=Kl(function(t){!function(i,o){var u,l=this,c=256,h=6,p="random",d=o.pow(c,h),f=o.pow(2,52),m=2*f,g=c-1;function e(e,t,n){function r(){for(var e=s.g(h),t=d,n=0;e<f;)e=(e+n)*c,t*=c,n=s.g(1);for(;m<=e;)e/=2,t/=2,n>>>=1;return(e+n)/t}var a=[],e=b(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==s?t:t+"\0"}((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(i)]:null==e?function(){try{return u&&(t=u.randomBytes)?t=t(c):(t=new Uint8Array(c),(l.crypto||l.msCrypto).getRandomValues(t)),x(t)}catch(e){var t=l.navigator,t=t&&t.plugins;return[+new Date,l,t,l.screen,x(i)]}}():e,3),a),s=new y(a);return r.int32=function(){return 0|s.g(4)},r.quick=function(){return s.g(4)/4294967296},r.double=r,b(x(s.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&v(r,s),e.state=function(){return v(s,{})}),n?(o[p]=e,t):e})(r,e,"global"in t?t.global:this==o,t.state)}function y(e){var t,n=e.length,i=this,r=0,a=i.i=i.j=0,s=i.S=[];for(n||(e=[n++]);r<c;)s[r]=r++;for(r=0;r<c;r++)s[r]=s[a=g&a+e[r%n]+(t=s[r])],s[a]=t;(i.g=function(e){for(var t,n=0,r=i.i,a=i.j,s=i.S;e--;)t=s[r=g&r+1],n=n*c+s[g&(s[r]=s[a=g&a+t])+(s[a]=t)];return i.i=r,i.j=a,n})(c)}function v(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[g&a]=g&(n^=19*t[g&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(o["seed"+p]=e,b(o.random(),i),t.exports){t.exports=e;try{u=F.default}catch(e){}}}([],Math)});tc.alea=Xl,tc.xor128=Yl,tc.xorwow=Jl,tc.xorshift7=Zl,tc.xor4096=Ql,tc.tychei=ec;class nc{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=(void 0)(s.toString())}nextValue(){var e;if(!isNaN(this.nextVal))return e=this.nextVal,this.nextVal=NaN,e;let r,a,s=!1;for(;!s;){let e,t,n;for(;e=2*this.random()-1,t=2*this.random()-1,1<=(n=e*e+t*t)||0===n;);var i=Math.sqrt(-2*Math.log(n)/n);r=this.mean+this.stdDev*e*i,a=this.mean+this.stdDev*t*i,this.truncated&&!this.isValidTruncated(r)||(s=!0)}return this.truncated&&!this.isValidTruncated(a)||(this.nextVal=this.convertValue(a)),this.convertValue(r)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class rc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=(void 0)(a.toString()),this.randn=new nc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){for(;r=this.randn.nextValue(),(s=1+this.c*r)<=0;);if(s*=s*s,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-s+Math.log(s)),(a=this.randu())<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class ac{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,"number"==typeof(r=null==r?Math.random():r)&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=(void 0)(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}Xl=n({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),"float32"!==(r=null==r?"float32":r)&&"int32"!==r)throw new Error("Unsupported data type "+r);const s=new rc(t,n,r,a),i=ei(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});const sc=n({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const s=new nc(t,n,r,!1,a),i=ei(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});const ic=n({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=ei(e,r),i=new ac(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function oc(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");e={start:e,stop:t,step:n,dtype:r};return I.runKernel(Ln,{},e)}const uc=n({real_:function(e){return e={input:S(e,"input","real")},I.runKernel(zn,e)}});const lc=n({reciprocal_:function(e){return e={x:S(e,"x","reciprocal")},I.runKernel(Pn,e)}});const cc=n({relu_:function(e){return e={x:S(e,"x","relu")},I.runKernel(Bn,e)}});const hc=n({relu6_:function(e){return e={x:S(e,"x","relu6")},I.runKernel(Hn,e)}});const pc=n({reverse_:function(e,t){return e={x:S(e,"x","reverse")},t={dims:t},I.runKernel(qn,e,t)}});Yl=n({reverse1d_:function(e){const t=S(e,"x","reverse");return z(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),pc(t,0)}});Jl=n({reverse2d_:function(e,t){const n=S(e,"x","reverse");return z(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),pc(n,t)}});Zl=n({reverse3d_:function(e,t){const n=S(e,"x","reverse");return z(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),pc(n,t)}});Ql=n({reverse4d_:function(e,t){const n=S(e,"x","reverse");return z(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),pc(n,t)}});const dc=n({round_:function(e){return e={x:S(e,"x","round")},I.runKernel(Kn,e)}});const fc=n({rsqrt_:function(e){return e={x:S(e,"x","rsqrt","float32")},I.runKernel(Xn,e)}});function P(e,t){if((oe(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&oe(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ys(e,[],[],t)}const mc=n({selu_:function(e){return e={x:S(e,"x","selu")},I.runKernel(Zn,e)}});const gc=n({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){e=S(e,"x","separableConv2d");const o=S(t,"depthwiseFilter","separableConv2d"),u=S(n,"pointwiseFilter","separableConv2d");let l=e,c=!1;if(3===e.rank&&(c=!0,l=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");z(4===l.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+`rank ${l.rank}.`),z(4===o.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+`got rank ${o.rank}.`),z(4===u.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+`got rank ${o.rank}.`),z(1===u.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+` must be 1, but got ${u.shape[0]}.`),z(1===u.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+`filter must be 1, but got ${u.shape[1]}.`);const h=o.shape[2],p=o.shape[3];return z(u.shape[2]===h*p,()=>"Error in separableConv2d: the third dimension of pointwise filter "+`must be ${h*p}, `+`but got ${u.shape[2]}.`),t=xu(l,o,r,a,i,s),n=ou(t,u,1,"valid",i),c?M(n,[n.shape[1],n.shape[2],n.shape[3]]):n}});const yc=async function(e,t){const n=S(e,"x","setdiff1d"),r=S(t,"y","setdiff1d");z(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),z(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),z(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);var a=await n.data(),e=await r.data();const s=new Set(e);let i=0;for(let e=0;e<a.length;e++)s.has(a[e])||i++;const o=new ja([i],n.dtype),u=new ja([i],"int32");for(let e=0,t=0;e<a.length;e++)s.has(a[e])||(o.values[t]=a[e],u.values[t]=e,t++);return[o.toTensor(),u.toTensor()]};const vc=n({sign_:function(e){return e={x:S(e,"x","sign")},I.runKernel(nr,e)}});const bc=n({sin_:function(e){return e={x:S(e,"x","sin","float32")},I.runKernel(er,e)}});const xc=n({sinh_:function(e){return e={x:S(e,"x","sinh")},I.runKernel(tr,e)}});const wc=n({slice1d_:function(e,t,n){const r=S(e,"x","slice1d");return z(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Go(r,[t],[n])}});const kc=n({slice2d_:function(e,t,n){const r=S(e,"x","slice2d");return z(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Go(r,t,n)}});const Nc=n({slice3d_:function(e,t,n){const r=S(e,"x","slice3d");return z(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Go(r,t,n)}});const Ic=n({slice4d_:function(e,t,n){const r=S(e,"x","slice4d");return z(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Go(r,t,n)}});const Sc=n({softmax_:function(e,t=-1){if(e=S(e,"logits","softmax","float32"),(t=-1===t?e.rank-1:t)!==e.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${e.rank} and dim was `+t);return e={logits:e},t={dim:t},I.runKernel(lr,e,t)}});const Tc=n({fft_:function(e){z("complex64"===e.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+`but got ${e.dtype}.`);var t={input:e};return I.runKernel(Mt,t)}});const Cc=n({ifft_:function(e){z("complex64"===e.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+`but got ${e.dtype}.`);var t={input:e};return I.runKernel(qt,t)}});const Ec=n({irfft_:function(e){var t,n,r,a,s=e.shape[e.shape.length-1];const i=e.size/s;let o;if(o=s<=2?(t=M(e,[i,s]),Cc(t)):(t=[i,2*(s-1)],n=M(uc(e),[i,s]),a=M(Wu(e),[i,s]),r=pc(Go(n,[0,1],[i,s-2]),1),s=w(pc(Go(a,[0,1],[i,s-2]),1),P(-1)),n=Vo([n,r],1),r=Vo([a,s],1),a=M(gs(n,r),[t[0],t[1]]),Cc(a)),o=uc(o),3===e.rank&&0!==e.shape[0]){const u=o,i=e.shape[0];o=M(o,[i,o.shape[0]/i,o.shape[1]]),u.dispose()}return o}});const _c=n({split_:function(e,t,n=0){return e={x:S(e,"x","split")},t={numOrSizeSplits:t,axis:n},I.runKernel(ur,e,t)}});const Ac=n({rfft_:function(e,t){z("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];var r=e.size/n;let a;if(null!=t&&t<n){var s=e.shape.map(e=>0);const o=e.shape.map(e=>e);o[e.shape.length-1]=t,a=Go(e,s,o),n=t}else if(null!=t&&t>n){const u=e.shape.map(e=>e);u[e.shape.length-1]=t-n,a=Vo([e,Il(u)],e.shape.length-1),n=t}else a=e;s=Su(a),t=M(gs(a,s),[r,n]),s=Tc(t),r=Math.floor(n/2)+1,t=uc(s),s=Wu(s),t=_c(t,[r,n-r],t.shape.length-1),s=_c(s,[r,n-r],s.shape.length-1);const i=a.shape.slice();return i[a.shape.length-1]=r,M(gs(t[0],s[0]),i)}});const $c=n({sqrt_:function(e){return e={x:S(e,"x","sqrt","float32")},I.runKernel(sr,e)}});const Rc=n({squaredDifference_:function(e,t){return e=S(e,"a","squaredDifference"),t=S(t,"b","squaredDifference"),[e,t]=Za(e,t),L(e.shape,t.shape),e={a:e,b:t},I.runKernel(mr,e,{})}});const Fc=n({squeeze_:function(e,t){return e=S(e,"x","squeeze"),M(e,he(e.shape,t).newShape)}});const Dc=n({stack_:function(e,t=0){return z(1<=(e=ms(e,"tensors","stack","string_or_numeric")).length,()=>"Pass at least one tensor to tf.stack"),0<e.length&&z(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),t={axis:t},I.runKernel(Rn,e,t)}});const Oc=n({step_:function(e,t=0){return e={x:S(e,"x","step")},t={alpha:t},I.runKernel(Rr,e,t)}});const Mc=n({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){return e={x:S(e,"x","stridedSlice","string_or_numeric")},t={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u},I.runKernel(yr,e,t)}});const Lc=n({tan_:function(e){return e={x:S(e,"x","tan","float32")},I.runKernel(kr,e)}});function zc(e,t){j(e);var n=ds(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ys(e,null,n,t)}function Pc(e,t,n){if(j(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");var r=ds(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ys(e,t,r,n)}function Bc(e,t,n){if(j(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");var r=ds(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ys(e,t,r,n)}const Wc=n({topk_:function(e,t=1,n=!0){if(0===(e=S(e,"x","topk")).rank)throw new Error("topk() expects the input to be of rank 1 or higher");var r=e.shape[e.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(r<t)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) `+"but got "+t);var r={x:e},e={k:t,sorted:n},[t,n]=I.runKernel(Sr,r,e);return{values:t,indices:n}}});const Vc=n({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new nc(t,n,r,!0,a),i=ei(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});const Uc=n({unique_:function(e,t=0){z(0<(e=S(e,"x","unique","string_or_numeric")).rank,()=>"The input tensor must be at least 1D");var e={x:e},t={axis:t},[e,t]=I.runKernel(Er,e,t);return{values:e,indices:t}}});const Gc=n({unsortedSegmentSum_:function(e,t,n){return e=S(e,"x","unsortedSegmentSum"),t=S(t,"segmentIds","unsortedSegmentSum","int32"),z(K(n),()=>"numSegments must be of dtype int"),e={x:e,segmentIds:t},t={numSegments:n},I.runKernel(Ar,e,t)}});const jc=n({unstack_:function(e,t=0){const n=S(e,"x","unstack","string_or_numeric");z(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);var e={value:n},r={axis:t};return I.runKernel(_r,e,r)}});function Hc(e,t=!0,n,r){return I.makeVariable(e,t,n,r)}function qc(t,n){const r=[];for(let e=0;e<n.length;e++)n[e]&&r.push(e);const a=ei(t,"int32"),s=ei([r.length,t.length],"int32");for(let e=0;e<r.length;e++){var i=a.indexToLoc(r[e]),o=e*t.length;s.values.set(i,o)}return s.toTensor()}const Kc=async function(e){const t=S(e,"condition","whereAsync","bool");var n=await t.data(),n=qc(t.shape,n);return e!==t&&t.dispose(),n};async function Xc(e,t,n){const r=S(e,"tensor","boolMask"),a=S(t,"mask","boolMask","bool");var s=null==n?0:n,i=a.rank;const o=r.shape;z(0<i,()=>"mask cannot be scalar"),G(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];n=o.slice(0,s).concat([u],o.slice(s+i));const l=M(r,n),c=M(a,[-1]),h=await Kc(c),p=Fc(h,[1]);return n=zu(l,p,s),e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),c.dispose(),h.dispose(),n}const Yc=n({norm_:function(e,t="euclidean",n=null,r=!1){let a=(t=function e(t,n,r=null){if(0===t.rank)return po(t);if(1!==t.rank&&null===r)return e(M(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return b(po(t),r);if(n===1/0)return al(po(t),r);if(n===-1/0)return Tl(po(t),r);if("euclidean"===n||2===n)return $c(b(Gl(po(t),P(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return al(b(po(t),r[0]),r[1]-1);if(n===1/0)return al(b(po(t),r[1]),r[0]);if(n===-1/0)return Tl(b(po(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return $c(b(Al(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=S(e,"x","norm"),t,n)).shape;return r&&(r=Q(n,e.shape),a=ll(t.shape,r)),M(t,a)}});tc=n({movingAverage_:function(e,t,n,r,a=!0){var e=S(e,"v","movingAverage"),t=S(t,"x","movingAverage"),n=S(n,"decay","movingAverage"),s=(Qa(e,t),z(ce(e.shape,t.shape),()=>"Shape mismatch in v and x"),P(1)),i=k(s,n);let o=w(k(t,e),i);return a&&(z(null!=r,()=>"When using zeroDebias: true, step is required."),t=S(r,"step","movingAverage"),o=y(o,k(s,Gl(n,t)))),E(e,o)}});const Jc=n({scatterND_:function(e,t,n){return e=S(e,"indices","scatterND","int32"),Ai(t=S(t,"updates","scatterND"),e,n),e={indices:e,updates:t},t={shape:n},I.runKernel(Yn,e,t)}});const Zc=n({sparseToDense_:function(e,t,n,r=0){var e=S(e,"sparseIndices","sparseToDense","int32"),t=S(t,"sparseValues","sparseToDense"),r=S(r,"defaultValue","sparseToDense",t.dtype),a=t,s=n,i=r;if("int32"!==(u=e).dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+` but the dtype was ${u.dtype}.`);if(2<u.rank)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+` but got shape ${u.shape}.`);var o=0<u.rank?u.shape[0]:1,u=1<u.rank?u.shape[1]:1;if(s.length!==u)throw new Error("outputShape has incorrect number of elements:,"+` ${s.length}, should be: ${u}.`);if(s=a.size,0!==a.rank&&(1!==a.rank||s!==o))throw new Error("sparseValues has incorrect shape "+a.shape+`, should be [] or [${o}]`);if(a.dtype!==i.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype");return u={sparseIndices:e,sparseValues:t,defaultValue:r},s={outputShape:n},I.runKernel(fr,u,s)}});const Qc=n({gatherND_:function(e,t){return t=S(t,"indices","gatherND","int32"),e={params:S(e,"x","gatherND","string_or_numeric"),indices:t},I.runKernel(Ut,e)}});const eh=n({dropout_:function(e,t,n,r){const a=S(e,"x","dropout");return z("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+`scaled, but got a ${a.dtype} tensor instead.`),z(0<=t&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t?e instanceof v?a.clone():a:(e=function(t,n){if(null==n)return t.shape.slice();if(ce(t.shape,n))return n;if(t.shape.length!==n.length)return n;{const r=[];for(let e=0;e<t.shape.length;e++)null==n[e]&&null!=t.shape[e]?r.push(t.shape[e]):r.push(n[e]);return r}}(a,n),n=1-t,e=y(Lu(E(ic(e,0,1,"float32",r),n)),n),w(a,e))}});function th(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function nh(t,n,r){var a=1-t%2;const s=new Float32Array(t);for(let e=0;e<t;++e){var i=2*Math.PI*e/(t+a-1);s[e]=n-r*Math.cos(i)}return zc(s,"float32")}async function rh(e,t,n=1){const r=S(e,"predictions","inTopK"),a=S(t,"targets","inTopK"),s=(z(1<r.rank,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),z(r.rank-1===a.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+a.rank),G(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),r.shape[r.shape.length-1]),i=(z(0<n&&n<=s,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+`dimension (${s}), but got `+n),await r.data());var o=await a.data(),[u,l]=[i.length/s,s];const c=ee("bool",u);for(let t=0;t<u;t++){var h=t*l,p=i.subarray(h,h+l);const d=[];for(let e=0;e<p.length;e++)d.push({value:p[e],index:e});d.sort((e,t)=>t.value-e.value);for(let e=c[t]=0;e<n;e++)if(d[e].index===o[t]){c[t]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),vs(c,a.shape,"bool")}const ah=n({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e,u=(3===e.rank&&(o=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),t);3===u.rank&&(u=M(t,[1,t.shape[0],t.shape[1],t.shape[2]])),z(4===o.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."),z(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),z(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];return z(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must `+`match input depth in filter (${n[2]}.`),z(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must `+`match output depth for filter (${n[3]}).`),Po("conv2dDerFilter",a,i),e={x:o,dy:u},t={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n},I.runKernel(ut,e,t)}});function sh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return w(e,Oc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ih(e,t){let n=t;t=xi(e.shape,t.shape);return 0<t.length&&(n=b(n,t)),M(n,e.shape)}function oh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return cc(e);if("elu"===t)return _u(e);if("relu6"===t)return hc(e);if("prelu"===t)return jl(e,n);if("leakyrelu"===t)return ju(e,r);if("sigmoid"===t)return Uo(e);throw new Error(`Unknown fused activation ${t}.`)}const uh=(e,t)=>{return!(0<e)||"linear"===t};const lh=n({fusedConv2d_:function({x:t,filter:n,strides:i,pad:o,dataFormat:r="NHWC",dilations:u=[1,1],dimRoundingMode:a,bias:s,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(l=l||"linear",!1===uh(I.state.gradientDepth,l)){let e=ou(t,n,i,o,r,u,a);return oh(e=null!=s?E(e,s):e,l,c,h)}t=S(t,"x","conv2d","float32");const e=S(n,"filter","conv2d","float32");let p=t,d=!1;3===t.rank&&(d=!0,p=M(t,[1,t.shape[0],t.shape[1],t.shape[2]])),z(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+"."),z(4===e.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+e.rank+"."),Po("fused conv2d",o,a),z(p.shape[3]===e.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match `+`input depth for filter ${e.shape[2]}.`),z(Lo(i,u),()=>"Error in conv2D: Either strides or dilations must be 1. "+`Got strides ${i} and dilations '${u}'`),z("NHWC"===r,()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`),n=_o(p.shape,e.shape,i,u,o,a);let f;null!=s&&(f=S(s,"bias","fused conv2d"),[f]=Za(f,t),L(n.outShape,f.shape));let m;null!=c&&(m=S(c,"prelu weights","fused conv2d"));const g=(e,t)=>{var[t,n,r,a]=t,e=sh(e,r,l),r=(z(Mo(u),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+`are not yet supported in gradients. Got dilations '${u}'`),lu(n.shape,e,t,i,o));const s=[r,ah(n,e,t.shape,i,o)];return null!=a&&(r=ih(a,e),s.push(r)),s},y={x:p,filter:e,bias:f,preluActivationWeights:m},v={strides:i,pad:o,dataFormat:r,dilations:u,dimRoundingMode:a,activation:l,leakyreluAlpha:h};if(null==s){const b=Qu((e,t,n)=>{let r=I.runKernel(Mr,y,v);return n([t,e,r]),{value:r=d?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r,gradFunc:g}});return b(p,e)}{const x=Qu((e,t,n,r)=>{let a=I.runKernel(Mr,y,v);return r([t,e,a,n]),{value:a=d?M(a,[a.shape[1],a.shape[2],a.shape[3]]):a,gradFunc:g}});return x(p,e,f)}}});const ch=n({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e,u=(3===e.rank&&(o=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),t);return 3===u.rank&&(u=M(t,[1,t.shape[0],t.shape[1],t.shape[2]])),e={x:o,dy:u},t={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n},I.runKernel(wt,e,t)}});const hh=n({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;return 3===t.rank&&(u=!0,o=M(t,[1,t.shape[0],t.shape[1],t.shape[2]])),t={dy:o,filter:n},n={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},r=I.runKernel(kt,t,n),u?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});const ph=n({fusedDepthwiseConv2d_:function({x:t,filter:n,strides:s,pad:i,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:u,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(!1===uh(I.state.gradientDepth,l)){let e=xu(t,n,s,i,r,o,u);return oh(e=null!=a?E(e,a):e,l,c,h)}t=S(t,"x","depthwiseConv2d","float32");const e=S(n,"filter","depthwiseConv2d","float32");let p=t,d=!1;3===t.rank&&(d=!0,p=M(t,[1,t.shape[0],t.shape[1],t.shape[2]])),z(4===p.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+`rank ${p.rank}.`),z(4===e.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+`but got rank ${e.rank}.`),z(p.shape[3]===e.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+`(${p.shape[3]}) must match the inChannels dimension in `+`filter ${e.shape[2]}.`),z(Lo(s,o=null==o?[1,1]:o),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+`be 1. Got strides ${s} and dilations '${o}'`),Po("fused depthwiseConv2d",i,u),n=_o(p.shape,e.shape,s,o,i,u,!0);let f;null!=a&&(f=S(a,"bias","fused conv2d"),[f]=Za(f,t),L(n.outShape,f.shape));let m;null!=c&&(m=S(c,"prelu weights","fused depthwiseConv2d"));const g=(e,t)=>{z(Mo(o),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+`'${o}'`);var[t,n,r,a]=t,e=sh(e,r,l),r=hh(n.shape,e,t,s,i,o,u),n=ch(n,e,t.shape,s,i,o,u);return null!=a?[r,n,ih(f,e)]:[r,n]},y={x:p,filter:e,bias:f,preluActivationWeights:m},v={strides:s,pad:i,dataFormat:r,dilations:o,dimRoundingMode:u,activation:l,leakyreluAlpha:h};if(null==a){const b=Qu((e,t,n)=>{let r=I.runKernel(Lr,y,v);return n([t,e,r]),{value:r=d?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r,gradFunc:g}});return b(p,e)}{const x=Qu((e,t,n,r)=>{let a=I.runKernel(Lr,y,v);return r([t,e,a,n]),{value:a=d?M(a,[a.shape[1],a.shape[2],a.shape[3]]):a,gradFunc:g}});return x(p,e,f)}}});const dh=n({fusedMatMul_:function({a:t,b:n,transposeA:o=!1,transposeB:u=!1,bias:l,activation:c="linear",preluActivationWeights:r,leakyreluAlpha:a}){if(!1===uh(I.state.gradientDepth,c)){let e=T(t,n,o,u);return oh(e=null!=l?E(e,l):e,c,r,a)}let e=S(t,"a","fused matMul"),s=S(n,"b","fused matMul");[e,s]=Za(e,s);const i=o?e.shape[e.rank-2]:e.shape[e.rank-1],h=u?s.shape[s.rank-1]:s.shape[s.rank-2];var t=o?e.shape[e.rank-1]:e.shape[e.rank-2],n=u?s.shape[s.rank-2]:s.shape[s.rank-1],p=e.shape.slice(0,-2),d=s.shape.slice(0,-2),p=U(p),d=U(d);z(i===h,()=>`Error in fused matMul: inner shapes (${i}) and (`+`${h}) of Tensors with shapes ${e.shape} and `+s.shape+" and transposeA="+o+` and transposeB=${u} must match.`);const f=L(e.shape.slice(0,-2),s.shape.slice(0,-2)),m=f.concat([t,n]);p=o?M(e,[p,i,t]):M(e,[p,t,i]),t=u?M(s,[d,n,h]):M(s,[d,h,n]);let g;null!=l&&(g=S(l,"bias","fused matMul"),[g]=Za(g,e),L(m,g.shape));let y;null!=r&&(y=S(r,"prelu weights","fused matMul"));const v=(e,t)=>{var[t,n,r,a]=t,e=sh(M(e,r.shape),r,c);let s,i;return i=o||u?!o&&u?(s=T(e,n,!1,!1),T(e,t,!0,!1)):o&&!u?(s=T(n,e,!1,!0),T(t,e,!1,!1)):(s=T(n,e,!0,!0),T(e,t,!0,!0)):(s=T(e,n,!1,!0),T(t,e,!0,!1)),null!=l?(r=ih(a,e),[s,i,r]):[s,i]},b={a:p,b:t,bias:g,preluActivationWeights:y},x={transposeA:o,transposeB:u,activation:c,leakyreluAlpha:a};if(null==l){const w=Qu((e,t,n)=>{var r=I.runKernel(Or,b,x);return n([e,t,r]),{value:M(r,m),gradFunc:v}});return w(p,t)}{const k=Qu((e,t,n,r)=>{var a=I.runKernel(Or,b,x);return r([e,t,a,n]),{value:M(a,m),gradFunc:v}});return k(p,t,g)}}});ec=Object.freeze({__proto__:null,conv2d:lh,depthwiseConv2d:ph,matMul:dh});var fh=n({hammingWindow_:function(e){return nh(e,.54,.46)}});const mh=n({hannWindow_:function(e){return nh(e,.5,.5)}});const gh=n({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Go(e,s,t)),s+=n;if(r)for(;s<e.size;){var o=s+t-e.size,o=Vo([Go(e,s,t-o),Mu([o],a)]);i.push(o),s+=n}return 0===i.length?Pc([],[0,t]):M(Vo(i),[i.length,t])}});var yh=n({stft_:function(e,t,n,r,a=mh){return null==r&&(r=th(t)),e=gh(e,t,n),n=w(e,a(t)),Ac(n,r)}});var vh=n({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=S(e,"image","cropAndResize"),o=S(t,"boxes","cropAndResize","float32"),u=(e=S(n,"boxInd","cropAndResize","int32"),o.shape[0]);return z(4===i.rank,()=>"Error in cropAndResize: image must be rank 4,"+`but got rank ${i.rank}.`),z(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] `+`but had shape ${o.shape}.`),z(1===e.rank&&e.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] `+`but had shape ${o.shape}.`),z(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+`length ${r.length}.`),z(1<=r[0]&&1<=r[1],()=>"cropSize must be atleast [1,1], but was "+r),z("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a),t={image:i,boxes:o,boxInd:e},n={method:a,extrapolationValue:s,cropSize:r},I.runKernel(yt,t,n)}});var bh=n({flipLeftRight_:function(e){const t=S(e,"image","flipLeftRight","float32");return z(4===t.rank,()=>"Error in flipLeftRight: image must be rank 4,"+`but got rank ${t.rank}.`),e={image:t},I.runKernel(zt,e,{})}});var xh=n({grayscaleToRGB_:function(e){const t=S(e,"image","grayscaleToRGB"),n=(e=t.rank-1,t.shape[e]),r=(z(2<=t.rank,()=>"Error in grayscaleToRGB: images must be at least rank 2, "+`but got rank ${t.rank}.`),z(1===n,()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+`should be size 1, but got size ${n}.`),new Array(t.rank));return r.fill(1,0,e),r[e]=3,Du(t,r)}});var wh=n({rotateWithOffset_:function(e,t,n=0,r=.5){const a=S(e,"image","rotateWithOffset","float32");return z(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+`but got rank ${a.rank}.`),e={image:a},t={radians:t,fillValue:n,center:r},I.runKernel(Dr,e,t)}});function kh(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),z(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),z(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),z(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),z(1===t.rank,()=>"scores must be a 1D tensor"),z(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, `+"but was "+t.shape[0]),z(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Nh=n({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){var e=S(e,"boxes","nonMaxSuppression","float32"),t=S(t,"scores","nonMaxSuppression","float32"),s=kh(e,t,n,r,a),n={maxOutputSize:n=s.maxOutputSize,iouThreshold:r=s.iouThreshold,scoreThreshold:a=s.scoreThreshold};return I.runKernel(Cn,{boxes:e,scores:t},n)}});function Ih(e,t,n){n=function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);var o=n(t,e[s]);0<o?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Sh);e.splice(n<0?-(n+1):n,0,t)}function Sh(e,t){return t<e?1:e<t?-1:0}function Th(e,t,n,r,a){return _h(e,t,n,r,a,0)}function Ch(e,t,n,r,a,s){return _h(e,t,n,r,a,0,!1,s,!0)}function Eh(e,t,n,r,a,s){return _h(e,t,n,r,a,s,!0)}function _h(n,t,e,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Ah);var c=0<s?-.5/s:0;const h=[],p=[];for(;h.length<e&&0<l.length;){const b=l.pop();var{score:d,boxIndex:f,suppressBeginIndex:m}=b;if(d<a)break;let t=!1;for(let e=h.length-1;e>=m;--e){var g=function(e,t,n){var t=e.subarray(4*t,4*t+4),e=e.subarray(4*n,4*n+4),n=Math.min(t[0],t[2]),r=Math.min(t[1],t[3]),a=Math.max(t[0],t[2]),t=Math.max(t[1],t[3]),s=Math.min(e[0],e[2]),i=Math.min(e[1],e[3]),o=Math.max(e[0],e[2]),e=Math.max(e[1],e[3]),u=(a-n)*(t-r),l=(o-s)*(e-i);if(u<=0||l<=0)return 0;n=Math.max(n,s),s=Math.max(r,i),r=Math.min(a,o),i=Math.min(t,e),a=Math.max(r-n,0)*Math.max(i-s,0);return a/(u+l-a)}(n,f,h[e]);if(r<=g){t=!0;break}if(b.score=b.score*function(e,t,n){t=Math.exp(t*n*n);return n<=e?t:0}(r,c,g),b.score<=a)break}b.suppressBeginIndex=h.length,t||(b.score===d?(h.push(f),p.push(b.score)):b.score>a&&Ih(l,b,Ah))}var s=h.length,y=e-s;o&&0<y&&(h.push(...new Array(y).fill(0)),p.push(...new Array(y).fill(0)));const v={selectedIndices:h};return i&&(v.selectedScores=p),u&&(v.validOutputs=s),v}function Ah(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function $h(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=S(e,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync");var o=kh(s,i,n,r,a);return n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold,o=Th((o=await Promise.all([s.data(),i.data()]))[0],o[1],n,r,a).selectedIndices,s!==e&&s.dispose(),i!==t&&i.dispose(),zc(o,"int32")}var Rh=n({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){var e=S(e,"boxes","nonMaxSuppression"),t=S(t,"scores","nonMaxSuppression"),i=kh(e,t,n,r,a,s),e={boxes:e,scores:t},t={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold,softNmsSigma:s=i.softNmsSigma};return{selectedIndices:(n=I.runKernel(_n,e,t))[0],selectedScores:n[1]}}});async function Fh(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=S(e,"boxes","nonMaxSuppressionAsync"),o=S(t,"scores","nonMaxSuppressionAsync");var u=kh(i,o,n,r,a,s),{selectedIndices:u,selectedScores:n}=(n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma,Eh((u=await Promise.all([i.data(),o.data()]))[0],u[1],n,r,a,s));return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:zc(u,"int32"),selectedScores:zc(n)}}var Dh=n({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){return e=S(e,"boxes","nonMaxSuppression"),t=S(t,"scores","nonMaxSuppression"),n=kh(e,t,n,r,a,null),r={boxes:e,scores:t},a={maxOutputSize:n.maxOutputSize,iouThreshold:n.iouThreshold,scoreThreshold:n.scoreThreshold,padToMaxOutputSize:s},{selectedIndices:(e=I.runKernel(En,r,a))[0],validOutputs:e[1]}}});async function Oh(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=S(e,"boxes","nonMaxSuppressionAsync"),o=S(t,"scores","nonMaxSuppressionAsync");var r=(n=kh(i,o,n,r,a,null)).maxOutputSize,a=n.iouThreshold,n=n.scoreThreshold,[u,l]=await Promise.all([i.data(),o.data()]),{selectedIndices:u,validOutputs:l}=Ch(u,l,r,a,n,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:zc(u,"int32"),validOutputs:P(l,"int32")}}const Mh=n({resizeBilinear_:function(e,t,n=!1,r=!1){const a=S(e,"images","resizeBilinear");z(3===a.rank||4===a.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+`rank ${a.rank}.`),z(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),z(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;return 3===a.rank&&(i=!0,s=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),e={images:s},n={alignCorners:n,halfPixelCenters:r,size:t},r=I.runKernel(Gn,e,n),i?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});const Lh=n({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=S(e,"images","resizeNearestNeighbor");z(3===a.rank||4===a.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+`rank ${a.rank}.`),z(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),z("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),z(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;return 3===a.rank&&(i=!0,s=M(a,[1,a.shape[0],a.shape[1],a.shape[2]])),e={images:s},n={alignCorners:n,halfPixelCenters:r,size:t},r=I.runKernel(Vn,e,n),i?M(r,[r.shape[1],r.shape[2],r.shape[3]]):r}});var zh=n({threshold_:function(e,t="binary",n=!1,r=.5){const a=S(e,"image","threshold");var s,i=a.shape[0]*a.shape[1];let o=w(zc([r]),255),u,l,c,h;z(3===a.rank,()=>"Error in threshold: image must be rank 3,"+`but got rank ${a.rank}.`),z(3===a.shape[2]||1===a.shape[2],()=>"Error in threshold: image color channel must be equal to 3 or 1"+`but got ${a.shape[2]}.`),z("int32"===a.dtype||"float32"===a.dtype,()=>"Error in dtype: image dtype must be int32 or float32,"+`but got dtype ${a.dtype}.`),z("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),h=3===a.shape[2]?([u,l,c]=_c(a,[1,1,1],-1),r=w(u,.2989),p=w(l,.587),s=w(c,.114),E(E(r,p),s)):e,"otsu"===t&&(r=Zo(x(dc(h),"int32"),vs([]),256),o=function(t,n){let r=zc([-1]),a=zc([0]),s=zc([0]),i,o,u,l,c,h;for(let e=0;e<t.size-1;e++){i=Go(t,0,e+1),o=Go(t,e+1),c=y(b(i),n),h=y(b(o),n);var p=b(w(i,oc(0,i.size))),p=(u=y(p,b(i)),Mu(o.shape,i.size)),p=E(oc(0,o.size),p),p=w(o,p),p=(l=y(b(p),b(o)),k(u,l)),d=k(u,l),f=w(c,h),f=(s=w(w(f,p),d),Pu(s,a));a=Iu(f,s,a),r=Iu(f,zc([e]),r)}return r}(r,i));var p=(n?qu:Pu)(h,o);return x(w(p,255),"int32")}});var Ph=n({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=S(e,"image","transform","float32");return e=S(t,"transforms","transform","float32"),z(4===i.rank,()=>"Error in transform: image must be rank 4,"+`but got rank ${i.rank}.`),z(2===e.rank&&(e.shape[0]===i.shape[0]||1===e.shape[0])&&8===e.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),z(null==s||2===s.length,()=>"Error in transform: outputShape must be [height, width] or null, "+`but got ${s}.`),t={image:i,transforms:e},e={interpolation:n,fillMode:r,fillValue:a,outputShape:s},I.runKernel(Tr,t,e)}});var Bh=n({bandPart_:function(e,t,n){z(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),z(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=S(e,"a","bandPart");z(2<=r.rank,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);var e=r.shape,[a,s]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t})`+` must not be greater than the number of rows (${a}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n})`+` must not be greater than the number of columns (${s}).`);t<0&&(t=a),n<0&&(n=s);var i=M(oc(0,a,1,"int32"),[-1,1]),o=oc(0,s,1,"int32"),i=k(i,o);const u=ml(qu(i,P(+t,"int32")),Bu(i,P(-n,"int32"))),l=Il([a,s],r.dtype);return M(Dc(jc(M(r,[-1,a,s])).map(e=>Iu(u,e,l))),e)}});var Wh=n({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,z(null!=t&&0<t.length,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)z(t[e].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+`(${t[e].shape[0]} vs. ${n})`)}else e=!0,t=_c(t,t.shape[0],0).map(e=>Fc(e,[0]));z(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds `+`number of dimensions (${t[0].shape[0]}).`);const a=[],s=t;for(let r=0;r<t.length;++r)a.push(I.tidy(()=>{let t=s[r];if(0<r)for(let e=0;e<r;++e){var n=w(b(w(a[e],t)),a[e]);t=k(t,n)}return y(t,Yc(t,"euclidean"))}));return e?Dc(a,0):a}});function Vh(a,h=!1){return I.tidy(()=>{z(2===a.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${a.shape.length}D Tensor.`);const s=a.shape[0],i=a.shape[1];let o=Ou(s),u=ti(a);const l=Pc([[1]],[1,1]);let c=ti(l);var e=s>=i?i:s;for(let a=0;a<e;++a){var t=u,n=c,r=o;[c,u,o]=I.tidy(()=>{var e=Go(u,[a,a],[s-a,1]),t=Yc(e),n=Go(u,[a,a],[1,1]),r=Iu(Pu(n,0),Pc([[-1]]),Pc([[1]])),n=k(n,w(r,t)),e=y(e,n),e=(c=1===e.shape[0]?ti(l):Vo([l,Go(e,[1,0],[e.shape[0]-1,e.shape[1]])],0),tl(y(T(r,n),t))),r=Go(u,[a,0],[s-a,i]),n=w(e,c),t=vi(c),t=(u=0===a?k(r,T(n,T(t,r))):(e=k(r,T(n,T(t,r))),Vo([Go(u,[0,0],[a,i]),e],0)),vi(n)),r=Go(o,[0,a],[s,o.shape[1]-a]);return o=0===a?k(r,T(T(r,c),t)):(e=k(r,T(T(r,c),t)),Vo([Go(o,[0,0],[s,a]),e],1)),[c,u,o]}),C([t,n,r])}return!h&&s>i&&(o=Go(o,[0,0],[s,i]),u=Go(u,[0,0],[i,i])),[o,u]})}var Uh,Gh=n({qr_:function(e,n=!1){if(z(2<=e.rank,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Vh(e,n);{var t=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t);const r=jc(M(e,[t,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{var[e,t]=Vh(e,n);a.push(e),s.push(t)}),[M(Dc(a,0),e.shape),M(Dc(s,0),e.shape)]}}});(Hh=Uh=Uh||{})[Hh.NONE=0]="NONE",Hh[Hh.MEAN=1]="MEAN",Hh[Hh.SUM=2]="SUM",Hh[Hh.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const jh=n({computeWeightedLoss_:function(e,t,n=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"losses","computeWeightedLoss");let r=null;var a,s,t=null==(r=null!=t?S(t,"weights","computeWeightedLoss"):r)?e:w(e,r);if(n===Uh.NONE)return t;if(n===Uh.SUM)return b(t);if(n===Uh.MEAN)return null==r?Nl(t):(a=e.size/r.size,s=y(b(t),b(r)),1<a?y(s,P(a)):s);if(n===Uh.SUM_BY_NONZERO_WEIGHTS)return null==r?y(b(t),P(e.size)):(a=w(r,Sl(e.shape)),s=x(b(Dl(a,P(0))),"float32"),y(b(t),s));throw Error("Unknown reduction: "+n)}});var Hh=n({absoluteDifference_:function(e,t,n,r=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"labels","absoluteDifference"),t=S(t,"predictions","absoluteDifference");let a=null;return null!=n&&(a=S(n,"weights","absoluteDifference")),G(e.shape,t.shape,"Error in absoluteDifference: "),n=po(k(e,t)),jh(n,a,r)}});var qh=n({cosineDistance_:function(e,t,n,r,a=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"labels","cosineDistance"),t=S(t,"predictions","cosineDistance");let s=null;return null!=r&&(s=S(r,"weights","cosineDistance")),G(e.shape,t.shape,"Error in cosineDistance: "),r=P(1),r=k(r,b(w(e,t),n,!0)),jh(r,s,a)}});var Kh=n({hingeLoss_:function(e,t,n,r=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"labels","hingeLoss"),t=S(t,"predictions","hingeLoss");let a=null;return null!=n&&(a=S(n,"weights","hingeLoss")),G(e.shape,t.shape,"Error in hingeLoss: "),n=P(1),e=k(w(P(2),e),n),n=cc(k(n,w(e,t))),jh(n,a,r)}});var a=n({huberLoss_:function(e,t,n,r=1,a=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"labels","huberLoss"),t=S(t,"predictions","huberLoss");let s=null;return null!=n&&(s=S(n,"weights","huberLoss")),G(e.shape,t.shape,"Error in huberLoss: "),n=P(r),r=po(k(t,e)),t=Cl(r,n),e=k(r,t),r=E(w(P(.5),Al(t)),w(n,e)),jh(r,s,a)}});var Xh=n({logLoss_:function(e,t,n,r=1e-7,a=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"labels","logLoss"),t=S(t,"predictions","logLoss");let s=null;null!=n&&(s=S(n,"weights","logLoss")),G(e.shape,t.shape,"Error in logLoss: ");var n=P(1),r=P(r),i=tl(w(e,Yu(E(t,r)))),e=w(k(n,e),Yu(E(k(n,t),r))),n=k(i,e);return jh(n,s,a)}});var Yh=n({meanSquaredError_:function(e,t,n,r=Uh.SUM_BY_NONZERO_WEIGHTS){e=S(e,"labels","meanSquaredError"),t=S(t,"predictions","meanSquaredError");let a=null;return null!=n&&(a=S(n,"weights","meanSquaredError")),G(e.shape,t.shape,"Error in meanSquaredError: "),n=Rc(e,t),jh(n,a,r)}});var Jh=n({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Uh.SUM_BY_NONZERO_WEIGHTS){let s=S(e,"multiClassLabels","sigmoidCrossEntropy"),i=(e=S(t,"logits","sigmoidCrossEntropy"),null);return null!=n&&(i=S(n,"weights","sigmoidCrossEntropy")),G(s.shape,e.shape,"Error in sigmoidCrossEntropy: "),0<r&&(t=P(r),n=P(1),r=P(.5),s=E(w(s,k(n,t)),w(r,t))),n=s,r=e,n=S(n,"labels","sigmoidCrossEntropyWithLogits"),r=S(r,"logits","sigmoidCrossEntropyWithLogits"),G(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: "),t=cc(r),n=w(r,n),r=Ju($u(tl(po(r)))),e=E(k(t,n),r),jh(e,i,a)}});var Zh=n({softmaxCrossEntropy_:function(e,t,n,r=0,a=Uh.SUM_BY_NONZERO_WEIGHTS){let s=S(e,"onehotLabels","softmaxCrossEntropy"),i=(e=S(t,"logits","softmaxCrossEntropy"),null);return null!=n&&(i=S(n,"weights","softmaxCrossEntropy")),G(s.shape,e.shape,"Error in softmaxCrossEntropy: "),0<r&&(t=P(r),n=P(1),r=P(s.shape[1]),s=E(w(s,k(n,t)),y(t,r))),n=function(e,t,a=-1){if((a=-1===a?t.rank-1:a)!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+`supported. Labels / logits was rank ${t.rank} `+"and dim was "+a);const n=Qu((e,t,n)=>{var r=fl(t,[a],!0),t=k(x(t,"float32"),r),r=(n([e,t]),tl(w(t,e)));return{value:b(r,[a]),gradFunc:(e,t)=>{var[t,n]=t,r=ll(e.shape,[a]);return[w(M(e,r),k(x(t,"float32"),$u(n))),w(M(e,r),k($u(n),x(t,"float32")))]}}});return n(e,t)}(s,e),jh(n,i,a)}});var Qh=n({sparseFillEmptyRows_:function(e,t,n,r){if(e=S(e,"indices","sparseFillEmptyRows","int32"),t=S(t,"values","sparseFillEmptyRows"),n=S(n,"denseShape","sparseFillEmptyRows","int32"),r=S(r,"defaultValue","sparseFillEmptyRows",t.dtype),2!==e.rank)throw new Error(`Indices should be Tensor2D but received shape
        `+e.shape);if(1!==t.rank)throw new Error("Values should be Tensor1D but received shape "+t.shape);if(1!==n.rank)throw new Error("Dense shape should be Tensor1D but received shape "+n.shape);if(0!==r.rank)throw new Error("Default value should be a scalar but received shape "+r.shape);return e={indices:e,values:t,denseShape:n,defaultValue:r},{outputIndices:(t=I.runKernel(cr,e))[0],outputValues:t[1],emptyRowIndicator:t[2],reverseIndexMap:t[3]}}});var ep=n({sparseReshape_:function(e,t,n){if(e=S(e,"inputIndices","sparseReshape","int32"),t=S(t,"inputShape","sparseReshape","int32"),n=S(n,"newShape","sparseReshape","int32"),2!==e.rank)throw new Error(`Input indices should be Tensor2D but received shape
        `+e.shape);if(1!==t.rank)throw new Error("Input shape should be Tensor1D but received shape "+t.shape);if(1!==n.rank)throw new Error("New shape should be Tensor1D but received shape "+n.shape);return e={inputIndices:e,inputShape:t,newShape:n},{outputIndices:(t=I.runKernel(hr,e))[0],outputShape:t[1]}}});var tp=n({sparseSegmentMean_:function(e,t,n){if(e=S(e,"data","sparseSegmentMean"),t=S(t,"indices","sparseSegmentMean","int32"),n=S(n,"segmentIds","sparseSegmentMean","int32"),e.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==t.rank)throw new Error(`Indices should be Tensor1D but received shape
          `+t.shape);if(1!==n.rank)throw new Error(`Segment ids should be Tensor1D but received shape
          `+n.shape);return e={data:e,indices:t,segmentIds:n},I.runKernel(pr,e)}});var np=n({sparseSegmentSum_:function(e,t,n){if(e=S(e,"data","sparseSegmentSum"),t=S(t,"indices","sparseSegmentSum","int32"),n=S(n,"segmentIds","sparseSegmentSum","int32"),e.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==t.rank)throw new Error(`Indices should be Tensor1D but received shape
         `+t.shape);if(1!==n.rank)throw new Error(`Segment ids should be Tensor1D but received shape
         `+n.shape);return e={data:e,indices:t,segmentIds:n},I.runKernel(dr,e)}});var rp=n({stringNGrams_:function(e,t,n,r,a,s,i,o){if("string"!==(e=S(e,"data","stringNGrams","string")).dtype)throw new Error("Data must be of datatype string");if(1!==e.shape.length)throw new Error("Data must be a vector, saw: "+e.shape);if("int32"!==(t=S(t,"dataSplits","stringNGrams")).dtype)throw new Error("Data splits must be of datatype int32");return n={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},r={data:e,dataSplits:t},{nGrams:(a=I.runKernel(vr,r,n))[0],nGramsSplits:a[1]}}});var ap=n({stringSplit_:function(e,t,n=!0){if(e=S(e,"input","stringSplit","string"),t=S(t,"delimiter","stringSplit","string"),1!==e.rank)throw new Error("Input should be Tensor1D but received shape "+e.shape);if(0!==t.rank)throw new Error("Delimiter should be a scalar but received shape "+t.shape);return n={skipEmpty:n},e={input:e,delimiter:t},{indices:(t=I.runKernel(br,e,n))[0],values:t[1],shape:t[2]}}});var sp=n({stringToHashBucketFast_:function(e,t){var e=S(e,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return t={input:e},I.runKernel(xr,t,n)}}),ip={fft:Tc,ifft:Cc,rfft:Ac,irfft:Ec},fh={hammingWindow:fh,hannWindow:mh,frame:gh,stft:yh};const op={flipLeftRight:bh,grayscaleToRGB:xh,resizeNearestNeighbor:Lh,resizeBilinear:Mh,rotateWithOffset:wh,cropAndResize:vh,nonMaxSuppression:Nh,nonMaxSuppressionAsync:$h,nonMaxSuppressionWithScore:Rh,nonMaxSuppressionWithScoreAsync:Fh,nonMaxSuppressionPadded:Dh,nonMaxSuppressionPaddedAsync:Oh,threshold:zh,transform:Ph},up={bandPart:Bh,gramSchmidt:Wh,qr:Gh};yh={absoluteDifference:Hh,computeWeightedLoss:jh,cosineDistance:qh,hingeLoss:Kh,huberLoss:a,logLoss:Xh,meanSquaredError:Yh,sigmoidCrossEntropy:Jh,softmaxCrossEntropy:Zh};const lp={sparseFillEmptyRows:Qh,sparseReshape:ep,sparseSegmentMean:tp,sparseSegmentSum:np},cp={stringNGrams:rp,stringSplit:ap,stringToHashBucketFast:sp};class hp extends Ji{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);return null!=n?(e=n.map(e=>({name:e.name,tensor:a[e.name]})),this.applyGradients(e)):this.applyGradients(a),C(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Zu(e,t)}dispose(){null!=this.iterations_&&C(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:P(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(hp,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class pp extends hp{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=I.backend.epsilon())}applyGradients(n){const e=Array.isArray(n)?n.map(e=>e.name):Object.keys(n);e.forEach((e,t)=>{const r=I.registeredVariables[e],a=(null==this.accumulatedGrads[t]&&(this.accumulatedGrads[t]={originalName:e+"/accum_grad",variable:O(()=>Su(r).variable(!1))}),null==this.accumulatedUpdates[t]&&(this.accumulatedUpdates[t]={originalName:e+"/accum_var",variable:O(()=>Su(r).variable(!1))}),Array.isArray(n)?n[t].tensor:n[e]);if(null!=a){const s=this.accumulatedGrads[t].variable,i=this.accumulatedUpdates[t].variable;O(()=>{var e=E(w(s,this.rho),w(Al(a),1-this.rho)),t=w(y($c(E(i,this.epsilon)),$c(E(s,this.epsilon))),a),n=E(w(i,this.rho),w(Al(t),1-this.rho)),e=(s.assign(e),i.assign(n),E(w(t,-this.learningRate),r));r.assign(e)})}}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(C(this.accumulatedGrads.map(e=>e.variable)),C(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){var t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}pp.className="Adadelta",r(pp);class dp extends hp{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(s){const e=Array.isArray(s)?s.map(e=>e.name):Object.keys(s);e.forEach((e,t)=>{const n=I.registeredVariables[e];if(null==this.accumulatedGrads[t])this.accumulatedGrads[t]={originalName:e+"/accumulator",variable:O(()=>Mu(n.shape,this.initialAccumulatorValue).variable(!1))};const r=Array.isArray(s)?s[t].tensor:s[e];if(null!=r){const a=this.accumulatedGrads[t].variable;O(()=>{var e=E(a,Al(r)),e=(a.assign(e),E(w(y(r,$c(E(e,I.backend.epsilon()))),-this.learningRate),n));n.assign(e)})}}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&C(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}dp.className="Adagrad",r(dp);class fp extends hp{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],O(()=>{this.accBeta1=P(t).variable(),this.accBeta2=P(n).variable()}),null==r&&(this.epsilon=I.backend.epsilon())}applyGradients(l){const e=Array.isArray(l)?l.map(e=>e.name):Object.keys(l);O(()=>{const o=k(1,this.accBeta1),u=k(1,this.accBeta2);e.forEach((e,t)=>{const n=I.registeredVariables[e];null==this.accumulatedFirstMoment[t]&&(this.accumulatedFirstMoment[t]={originalName:e+"/m",variable:O(()=>Su(n).variable(!1))}),null==this.accumulatedSecondMoment[t]&&(this.accumulatedSecondMoment[t]={originalName:e+"/v",variable:O(()=>Su(n).variable(!1))});e=Array.isArray(l)?l[t].tensor:l[e];if(null!=e){const s=this.accumulatedFirstMoment[t].variable,i=this.accumulatedSecondMoment[t].variable;var t=E(w(s,this.beta1),w(e,1-this.beta1)),e=E(w(i,this.beta2),w(Al(e),1-this.beta2)),r=y(t,o),a=y(e,u),t=(s.assign(t),i.assign(e),E(w(y(r,E($c(a),this.epsilon)),-this.learningRate),n));n.assign(t)}}),this.accBeta1.assign(w(this.accBeta1,this.beta1)),this.accBeta2.assign(w(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&C(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&C(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),O(()=>{this.accBeta1.assign(Gl(this.beta1,this.iterations_+1)),this.accBeta2.assign(Gl(this.beta2,this.iterations_+1))});var t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}fp.className="Adam",r(fp);class mp extends hp{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],O(()=>{this.iteration=P(0).variable(),this.accBeta1=P(t).variable()}),null==r&&(this.epsilon=I.backend.epsilon())}applyGradients(u){const e=Array.isArray(u)?u.map(e=>e.name):Object.keys(u);O(()=>{const i=k(1,this.accBeta1),o=y(-this.learningRate,E(w(this.iteration,this.decay),1));e.forEach((e,t)=>{const n=I.registeredVariables[e];null==this.accumulatedFirstMoment[t]&&(this.accumulatedFirstMoment[t]={originalName:e+"/m",variable:Su(n).variable(!1)}),null==this.accumulatedWeightedInfNorm[t]&&(this.accumulatedWeightedInfNorm[t]={originalName:e+"/v",variable:Su(n).variable(!1)});e=Array.isArray(u)?u[t].tensor:u[e];if(null!=e){const a=this.accumulatedFirstMoment[t].variable,s=this.accumulatedWeightedInfNorm[t].variable;var t=E(w(a,this.beta1),w(e,1-this.beta1)),r=w(s,this.beta2),e=po(e),r=kl(r,e),e=(a.assign(t),s.assign(r),E(w(y(o,i),y(t,E(r,this.epsilon))),n));n.assign(e)}}),this.iteration.assign(E(this.iteration,1)),this.accBeta1.assign(w(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&C(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&C(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}mp.className="Adamax",r(mp);class gp extends hp{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(a){const e=Array.isArray(a)?a.map(e=>e.name):Object.keys(a);e.forEach((e,t)=>{const n=Array.isArray(a)?a[t].tensor:a[e];if(null!=n){const r=I.registeredVariables[e];O(()=>{var e=E(w(this.c,n),r);r.assign(e)})}}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=uo(P(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}gp.className="SGD",r(gp);class yp extends gp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=P(this.momentum)}applyGradients(s){const e=Array.isArray(s)?s.map(e=>e.name):Object.keys(s);e.forEach((e,t)=>{const n=I.registeredVariables[e];if(null==this.accumulations[t])this.accumulations[t]={originalName:e+"/momentum",variable:O(()=>Su(n).variable(!1))};const r=this.accumulations[t].variable,a=Array.isArray(s)?s[t].tensor:s[e];null!=a&&O(()=>{let e;var t=E(w(this.m,r),a);e=this.useNesterov?E(w(this.c,E(a,w(t,this.m))),n):E(w(this.c,t),n),r.assign(t),n.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&C(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}yp.className="Momentum",r(yp);class vp extends hp{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=I.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){const e=Array.isArray(t)?t.map(e=>e.name):Object.keys(t);e.forEach((e,a)=>{const s=I.registeredVariables[e],i=(null==this.accumulatedMeanSquares[a]&&(this.accumulatedMeanSquares[a]={originalName:e+"/rms",variable:O(()=>Su(s).variable(!1))}),null==this.accumulatedMoments[a]&&(this.accumulatedMoments[a]={originalName:e+"/momentum",variable:O(()=>Su(s).variable(!1))}),null==this.accumulatedMeanGrads[a]&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:e+"/mg",variable:O(()=>Su(s).variable(!1))}),Array.isArray(t)?t[a].tensor:t[e]);if(null!=i){const o=this.accumulatedMeanSquares[a].variable,u=this.accumulatedMoments[a].variable;O(()=>{const e=E(w(o,this.decay),w(Al(i),1-this.decay));if(this.centered){const r=this.accumulatedMeanGrads[a].variable;var t=E(w(r,this.decay),w(i,1-this.decay)),n=y(w(i,this.learningRate),$c(k(e,E(Al(t),this.epsilon)))),n=E(w(u,this.momentum),n),t=(o.assign(e),r.assign(t),u.assign(n),k(s,n));s.assign(t)}else{const e=E(w(o,this.decay),w(Al(i),1-this.decay));n=E(w(u,this.momentum),y(w(i,this.learningRate),$c(E(e,this.epsilon)))),t=(o.assign(e),u.assign(n),k(s,n));s.assign(t)}})}}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&C(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&C(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&C(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);var t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}vp.className="RMSProp",r(vp);class bp{static sgd(e){return new gp(e)}static momentum(e,t,n=!1){return new yp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new vp(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new fp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new pp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new mp(e,t,n,r,a)}static adagrad(e,t=.1){return new dp(e,t)}}const xp={sgd:bp.sgd,momentum:bp.momentum,adadelta:bp.adadelta,adagrad:bp.adagrad,rmsprop:bp.rmsprop,adamax:bp.adamax,adam:bp.adam},wp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function kp(){return new Promise(e=>wp(()=>e()))}function Np(e,r){const a=e[0].length,s=(e.forEach((e,t)=>{z(e.length===a,()=>`Error in concat${a}D: rank of tensors[${t}] must be the same `+`as the rank of the rest (${a})`)}),z(0<=r&&r<a,()=>`Error in concat${a}D: axis must be between 0 and ${a-1}.`),e[0]);e.forEach((t,n)=>{for(let e=0;e<a;e++)z(e===r||t[e]===s[e],()=>`Error in concat${a}D: Shape of tensors[${n}] (${t}) `+`does not match the shape of the rest (${s}) `+`along the non-concatenated axis ${n}.`)})}function Ip(t,n){const r=t[0].slice();for(let e=1;e<t.length;e++)r[n]+=t[e][n];return r}function Sp(e){return e<=30?e:ye(e,Math.floor(Math.sqrt(e)))}function Tp(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Cp(t,n,e,r=!0){let a=[];if(r)(a=a.concat(n.slice(0))).push(t[0]/e),a=a.concat(t.slice(1));else{a=a.concat(t[0]);var s=n.length;for(let e=0;e<s;++e)a=a.concat([t[e+1]/n[e],n[e]]);a=a.concat(t.slice(s+1))}return a}function Ep(t,n,e=!0){const r=[];if(e){r.push(n);for(let e=n+1;e<t;++e)e<=2*n?(r.push(e),r.push(e-(n+1))):r.push(e)}else{const a=[],s=[];for(let e=1;e<t;++e)(e>=2*n+1||e%2==1?s:a).push(e);r.push(...a),r.push(0),r.push(...s)}return r}function _p(t,n,e,r=!0){const a=[];r?a.push(t[0]/e):a.push(t[0]*e);for(let e=1;e<t.length;++e)e<=n.length?r?a.push(n[e-1]*t[e]):a.push(t[e]/n[e-1]):a.push(t[e]);return a}function Ap(t,n){const r=[0];for(let e=0;e<n;++e)r.push(t[e][0]);return r}function $p(t,n,r){const a=t.slice(0,1);for(let e=0;e<r;++e)a.push(t[e+1]-n[e][0]-n[e][1]);return a}const Rp=1.7580993408473768,Fp=1.0507009873554805;bh=.3275911,xh=.254829592,wh=-.284496736,vh=1.421413741,Nh=-1.453152027,Rh=1.061405429;function Dp(t,n){if(t.length!==n.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+`${t.length}, imag: ${n.length}.`);const r=new Float32Array(2*t.length);for(let e=0;e<r.length;e+=2)r[e]=t[e/2],r[e+1]=n[e/2];return r}function Op(t){const n=new Float32Array(t.length/2),r=new Float32Array(t.length/2);for(let e=0;e<t.length;e+=2)n[e/2]=t[e],r[e/2]=t[e+1];return{real:n,imag:r}}function Mp(t){var e=Math.ceil(t.length/4);const n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Lp(t){var e=Math.floor(t.length/4);const n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function zp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Pp(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Bp(t,n){const r=new Float32Array(t/2),a=new Float32Array(t/2);for(let e=0;e<Math.ceil(t/2);e++){var s=(n?2:-2)*Math.PI*(e/t);r[e]=Math.cos(s),a[e]=Math.sin(s)}return{real:r,imag:a}}function Wp(e,t,n){n=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(n),imag:Math.sin(n)}}const Vp=/->/g;function Up(e,t){var n=((e=e.replace(/\s/g,"")).length-e.replace(Vp,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(1<n)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->"),s=(z(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.'),r.split(","));var i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received `+t);if(2<i)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const p=a[e];if(!s.some(e=>-1!==e.indexOf(p)))throw new Error(`Output subscripts contain the label ${p} `+"not present in the input subscripts.");-1===o.indexOf(p)&&o.push(p)}for(let e=0;e<r.length;++e){var u=r[e];-1===o.indexOf(u)&&","!==u&&o.push(u)}const l=new Array(s.length);for(let t=0;t<i;++t){if(new Set(s[t].split("")).size!==s[t].length)throw new Error(`Found duplicate axes in input component ${s[t]}. `+"Support for duplicate axes in input is not implemented yet.");l[t]=[];for(let e=0;e<s[t].length;++e)l[t].push(o.indexOf(s[t][e]))}var c=o.length;const h=[];for(let e=a.length;e<c;++e)h.push(e);return{allDims:o,summedDims:h,idDims:l}}function Gp(t,n){let r=new Array(t);r.fill(-1);for(let e=0;e<n.length;++e)r[n[e]]=e;const a=[];for(let e=0;e<t;++e)-1===r[e]&&a.push(e);return{permutationIndices:r=r.filter(e=>-1!==e),expandDims:a}}function jp(e,n,r){const a=new Array(e);for(let t=0;t<r.length;++t){const s=r[t].shape;for(let e=0;e<n[t].length;++e)void 0===a[n[t][e]]?a[n[t][e]]=s[e]:z(a[n[t][e]]===s[e],()=>`Expected dimension ${a[n[t][e]]} at axis ${e} `+`of input shaped ${JSON.stringify(s)}, `+"but got dimension "+s[e])}}function Hp(e,t){const n=e,r=[];var a;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e)for(const i of function(t,n){const r=[];for(let e=0;e<t.length;++e)0!==t[e].length&&-1===t[e].indexOf(n)&&-1!==n||r.push(e);return r}(t,n[e]))-1===s.indexOf(i)&&(r[e].push(i),s.push(i));return{path:n,steps:r}}function qp(e){return e.every((e,t)=>e===t)}function Kp(e,t,n=0){let r=[];var a,s;return r="number"==typeof t?(z(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),new Array(t).fill(e.shape[n]/t)):(z(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array."),-1!==(a=t.indexOf(-1))&&(s=t.reduce((e,t)=>0<t?e+t:e),t[a]=e.shape[n]-s),z(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),t)}function Xp(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = `+e}function Yp(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Jp(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= `+n}function Zp(e,t){return`only one output dimension may be -1, not both ${e} and `+t}function Qp(e,t){return`size ${e} must be non-negative, not `+t}function ed(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function td(e,t){return`Input to reshape is a SparseTensor with ${U(e)}
  dense values, but the requested shape requires a multiple of ${U(t)}. inputShape=${e} outputShape= `+t}function nd(e,t){return`Input to reshape is a tensor with ${U(e)} dense values, but the requested shape has ${U(t)}. inputShape=${e} outputShape=`+t}function rd(){return"segment ids must be >= 0"}function ad(){return"segment ids are not increasing"}function sd(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function id(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function od(e,t){let n=!1,r;for(e<=30?(r=e,n=!0):r=ye(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=ye(e,r+1);return r}function ud(t,n,r){const a=[];var s=t.length;for(let e=0;e<s;e++)e!==n?a.push(t[e]):a.push(r);return a}function ld(t,n,r,a){var s=n.shape.length,i=t.shape.length;if(0!==a&&(a<-s||s<a))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got `+a);if(a<0&&(a+=s),i<a)throw new Error(`batchDims (${a}) must be less than rank(x) (
    ${i}).`);if(r<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${r}).`);for(let e=0;e<a;++e)if(t.shape[e]!==n.shape[e])throw new Error(`x.shape[${e}]: ${t.shape[e]} should be equal to indices.shape[${e}]: ${n.shape[e]}.`);var e=t.shape[r];const o=[];let u=1,l=1,c=1;for(let e=0;e<a;++e)o.push(t.shape[e]),u*=t.shape[e];for(let e=a;e<r;e++)o.push(t.shape[e]),l*=t.shape[e];for(let e=a;e<s;e++)o.push(n.shape[e]);for(let e=r+1;e<i;e++)o.push(t.shape[e]),c*=t.shape[e];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:e,outputShape:o}}function cd(e){try{return e.map(e=>Da(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}}function hd(e){return e.map(e=>Fa(e))}Dh=Object.freeze({__proto__:null,slice_util:Yi,segment_util:Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:od,computeOutShape:ud,collectGatherOpShapeInfo:ld}),fromUint8ToStringArray:cd,fromStringArrayToUint8:hd,upcastType:Ya,axesAreInnerMostDims:il,combineLocations:ol,computeOutAndReduceShapes:ul,expandShapeToKeepDim:ll,assertAxesAreInnerMostDims:cl,getAxesPermutation:hl,getUndoAxesPermutation:pl,getInnerMostAxes:dl,getBroadcastDims:bi,getReductionAxes:xi,assertAndGetBroadcastShape:L,assertParamsConsistent:Np,computeOutShape:Ip,computeDilation2DInfo:To,computePool2DInfo:Co,computePool3DInfo:Eo,computeConv2DInfo:_o,computeConv3DInfo:Ao,computeDefaultPad:$o,tupleValuesAreOne:Mo,eitherStridesOrDilationsAreOne:Lo,convertConv2DDataFormat:zo,checkPadOnDimRoundingMode:Po,getFusedDyActivation:sh,getFusedBiasGradient:ih,applyActivation:oh,shouldFuse:uh,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:Sp,getImageCenter:Tp,getReshaped:Cp,getPermuted:Ep,getReshapedPermuted:_p,getSliceBeginCoords:Ap,getSliceSize:$p,prepareAndValidate:Ci,validateUpdateShape:_i,validateInput:Ai,calculateShapes:$i,SELU_SCALEALPHA:Rp,SELU_SCALE:Fp,ERF_P:bh,ERF_A1:xh,ERF_A2:wh,ERF_A3:vh,ERF_A4:Nh,ERF_A5:Rh,warn:zr,log:function(...e){N.getBool("IS_TEST")||N.getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:Dp,splitRealAndImagArrays:Op,complexWithEvenIndex:Mp,complexWithOddIndex:Lp,getComplexWithIndex:zp,assignToTypedArray:Pp,exponents:Bp,exponent:Wp,decodeEinsumEquation:Up,getEinsumPermutation:Gp,checkEinsumDimSizes:jp,getEinsumComputePath:Hp,isIdentityPermutation:qp,prepareSplitSize:Kp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Xp,getSparseFillEmptyRowsNegativeIndexErrorMessage:Yp,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Jp,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Zp,getSparseReshapeNegativeOutputDimErrorMessage:Qp,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:ed,getSparseReshapeInputOutputMultipleErrorMessage:td,getSparseReshapeInputOutputMismatchErrorMessage:nd,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:rd,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:ad,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:sd,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:id}),zh=Object.freeze({__proto__:null,nonMaxSuppressionV3Impl:Th,nonMaxSuppressionV4Impl:Ch,nonMaxSuppressionV5Impl:Eh,whereImpl:qc}),Ph={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,Oc(x(n,"float32"),-1))}}},Bh={kernelName:De,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{var e=Al(x(n,"float32")),e=$c(k(P(1),e));return tl(y(t,e))}}}},Wh={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{var e=$c(k(Al(x(n,"float32")),1));return y(t,e)}}}},Gh={kernelName:Me,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{let e=n;var t=xi(r.shape,s);return 0<t.length&&(e=b(e,t)),M(e,r.shape)},b:()=>{let e=n;var t=xi(a.shape,s);return 0<t.length&&(e=b(e,t)),M(e,a.shape)}}}},Hh={kernelName:Le,saveAllInputs:!0,gradFunc:(n,e)=>{const r={};return e.forEach((e,t)=>{r[t]=()=>n.clone()}),r}},qh={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Su(n)}}},Kh={kernelName:We,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Su(n)}}},a={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,$c(k(P(1),Al(x(n,"float32")))))}}},Xh={kernelName:Ue,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{var e=$c(E(P(1),Al(x(n,"float32"))));return y(t,e)}}}},Yh={kernelName:He,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{var e=E(Al(r),Al(a));let t=w(n,y(a,e));e=xi(r.shape,s);return 0<e.length&&(t=b(t,e)),M(t,r.shape)},b:()=>{var e=E(Al(r),Al(a));let t=tl(w(n,y(r,e)));e=xi(a.shape,s);return 0<e.length&&(t=b(t,e)),M(t,a.shape)}}}},Jh={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,E(Al(x(n,"float32")),1))}}},Zh={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,k(P(1),Al(x(n,"float32"))))}}};const pd=n({avgPool3dGrad_:function(e,t,n,r,a,s){e=S(e,"dy","avgPool3dGrad"),t=S(t,"input","avgPool3dGrad");let i=e,o=t,u=!1;return 4===t.rank&&(u=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=M(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),z(5===i.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+i.rank+"."),z(5===o.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+o.rank+"."),Po("avgPool3dGrad",a,s),e={dy:i,input:o},t={filterSize:n,strides:r,pad:a,dimRoundingMode:s},n=I.runKernel(Ye,e,t),u?M(n,[n.shape[1],n.shape[2],n.shape[3],n.shape[4]]):n}});Qh={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>pd(e,r,a,s,i,o)}}};const dd=n({avgPoolGrad_:function(e,t,n,r,a){const s=S(e,"dy","avgPoolGrad"),i=S(t,"input","avgPoolGrad");z(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,l=!1;return 3===i.rank&&(l=!0,o=M(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=M(s,[1,s.shape[0],s.shape[1],s.shape[2]])),z(4===u.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+u.rank+"."),z(4===o.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+"."),e={dy:u,input:o},t={filterSize:n,strides:r,pad:a},n=I.runKernel(Ke,e,t),l?M(n,[n.shape[1],n.shape[2],n.shape[3]]):n}});ep={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>dd(e,r,a,s,i)}}},tp={kernelName:Je,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t;var{transposeA:t,transposeB:n}=n;return t||n?!t&&n?{a:()=>T(e,a,!1,!1),b:()=>T(e,r,!0,!1)}:t&&!n?{a:()=>T(a,e,!1,!0),b:()=>T(r,e,!1,!1)}:{a:()=>T(a,e,!0,!0),b:()=>T(e,r,!0,!0)}:{a:()=>T(e,a,!1,!0),b:()=>T(r,e,!0,!1)}}},np={kernelName:Ze,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Vl(e,r,a)}}},rp={kernelName:o,gradFunc:(e,t,n)=>{var r=n.inputShape,a=n.shape;const s=Array.from(a);for(let e=r.length-1;0<=e;e--)if(r[e]===a[e])s[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const i=[];for(let e=0;e<s.length;e++)1<s[e]&&i.push(e);return{x:()=>b(e,i,!0)}}},ap={kernelName:tt,gradFunc:e=>({x:()=>e.clone()})},sp={kernelName:nt,gradFunc:e=>({x:()=>Su(e)})},bh={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Iu(ml(Bu(r,a),qu(r,s)),e,Su(e))}}},xh={kernelName:st,inputsToSave:["x"],gradFunc:Ph.gradFunc},wh={kernelName:it,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape);n=n.axis;const a=Q(n,t[0].shape)[0];n=r.map(e=>e[a]);const s=_c(e,n,a);return s.map(e=>()=>e)}},vh={kernelName:ot,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return z(Mo(s),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+`are not yet supported in gradients. Got dilations '${s}'`),{x:()=>lu(r.shape,e,a,i,o,u),filter:()=>ah(r,e,a.shape,i,o,u)}}},Nh={kernelName:lt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>ou(e,a,s,i,o,1,u),filter:()=>ah(e,r,a.shape,s,i,o,u)}}};const fd=n({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e,i=(4===e.rank&&(s=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),t);return 4===i.rank&&(i=M(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),z(5===s.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."),z(5===i.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."),z(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."),z(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must `+`match input depth in filter (${n[3]}.`),z(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must `+`match output depth for filter (${n[4]}).`),e={x:s,dy:i},t={strides:r,pad:a,filterShape:n},I.runKernel(ht,e,t)}});var Rh={kernelName:ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n,[i,o]=(z(Mo(r),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+`not yet supported in gradients. Got dilations '${r}'`),t);return{x:()=>pu(i.shape,e,o,a,s),filter:()=>fd(i,e,o.shape,a,s)}}},md={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(tl(bc(x(n,"float32"))),e)}}},gd={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(xc(x(n,"float32")),e)}}},yd={kernelName:gt,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:a,exclusive:s,reverse:i}=t;return{x:()=>{var e=hl([a],r.rank);let t=yu(n,a,s,!i);return t=null!=e?vi(t,e):t}}}},vd={kernelName:xt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r,[u,l]=(z(Mo(o),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+`'${o}'`),t);return z(4===u.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+`rank 4, but got rank ${u.rank}.`),z(4===l.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+`rank 4, but got rank ${l.rank}.`),z(u.shape[3]===l.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+`channels (${u.shape[3]}) must match the inChannels dimension `+`in filter ${l.shape[2]}.`),z(Lo(a,o),()=>"Error in gradient of depthwiseConv2d: Either strides or "+`dilations must be  1. Got strides ${a} and dilations `+`'${o}'.`),Po("depthwiseConv2d",s,i),{x:()=>hh(u.shape,e,l,a,s,o,i),filter:()=>ch(u,e,l.shape,a,s,o,i)}}},bd={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{var[t,r]=t;const a={x:t,filter:r,dy:e},s={x:t,filter:r,dy:e};return{x:()=>I.runKernel(St,a,n),filter:()=>I.runKernel(Tt,s,n)}}},xd={kernelName:_t,outputsToSave:[!0],gradFunc:(e,t)=>{var[t]=t;const n={dy:e,y:t};return{x:()=>I.runKernel(At,n)}}},wd={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{var[t]=t;const n=w($u(tl(Al(t))),2/Math.sqrt(Math.PI));return{x:()=>w(e,n)}}},kd={kernelName:Ft,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,n)}}},Nd={kernelName:Dt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>M(e,n.shape)}}},Id={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,$u(n))}}},Sd={kernelName:Pt,gradFunc:e=>({x:()=>Su(e)})},Td={kernelName:Bt,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{var e=y(n,x(a,"float32")),t=xi(r.shape,s);return 0<t.length?M(b(e,t),r.shape):e},b:()=>{let e=w(n,x(r,"float32"));var t=xi(a.shape,s),t=(0<t.length&&(e=M(b(e,t),a.shape)),Al(a));return tl(y(e,x(t,"float32")))}}}},Cd={kernelName:Wt,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{t=t.varianceEpsilon;const[r,a,s,i]=e,o=null==i?P(1):i,u=xi(a.shape,r.shape),l=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)l.push(r.shape[e]);l.push(1)}const c=k(r,a),h=w(n,o),p=fc(E(s,P(t))),d=w(w(w(p,p),p),P(-.5));return{x:()=>1===a.rank?M(w(w(n,Du(M(p,[1,1,1,a.shape[0]]),l)),o),r.shape):M(w(w(n,p),o),r.shape),mean:()=>{let e=w(w(p,P(-1)),h);return 1===a.rank&&(e=b(e,u)),M(e,a.shape)},variance:()=>{let e=w(w(d,c),h);return 1===a.rank&&(e=b(e,u)),M(e,a.shape)},scale:()=>{var e=w(c,p);let t=w(n,e);return 1===a.rank&&(t=b(t,u)),M(t,a.shape)},offset:()=>{let e=n;return 1===a.rank&&(e=b(e,u)),M(e,a.shape)}}}},Ed={kernelName:Vt,inputsToSave:["x","indices"],gradFunc:(o,e,t)=>{const[u,l]=e,c=t["axis"],h=Q(c,u.shape)[0];return{x:()=>{const e=u.shape;var t=l.size,n=e.slice(0,h),r=n.length,a=e.slice(c,e.length).slice(1),s=a.length,i=_d(0,r),s=_d(r+1,r+1+s),n=Ad([n,[t],a]),a=M(o,n),n=M(l,[t]),t=Ad([[r],i,s]),r=vi(a,t),i=Gc(r,n,u.shape[h]),s=pl(t);return vi(i,s)},indices:()=>l}}};function _d(t,n){const r=[];for(let e=t;e<n;++e)r.push(e);return r}function Ad(n){const r=[];for(let t=0;t<n.length;++t)for(let e=0;e<n[t].length;++e)r.push(n[t][e]);return r}var $d={kernelName:jt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Su(n),b:()=>Su(r)}}},Rd={kernelName:Ht,gradFunc:e=>({x:()=>x(e,"float32")})},Fd={kernelName:Xt,gradFunc:e=>({x:()=>Su(e)})},Dd={kernelName:Yt,gradFunc:e=>({x:()=>Su(e)})},Od={kernelName:Jt,gradFunc:e=>({x:()=>Su(e)})},Md={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{var[t]=t;const r=n["alpha"],a=Pu(t,0);return{x:()=>Iu(a,e,w(e,r))}}},Ld={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,E(n,1))}}},zd={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,x(n,"float32"))}}},Pd={kernelName:un,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,a=n["axis"];return{logits:()=>{var e=$u(r);return k(t,w(b(t,a,!0),e))}}}};const Bd=n({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){return e={x:e,y:t,dy:n},t={depthRadius:r,bias:a,alpha:s,beta:i},I.runKernel(cn,e,t)}});var Wd={kernelName:ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Bd(r,a,e,s,i,o,u)}}};function Vd(e,t,n,r){return t.rank<n.rank&&(t=M(t,ll(t.shape,r))),e.rank<n.rank&&(e=M(e,ll(e.shape,r))),{x:()=>{return w(e,x(Nu(n,t),e.dtype))}}}var Ud={kernelName:hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{var n=n["reductionIndices"],r=t[0];const a=Vd(e,t[1],r,Q(n,r.shape));return{x:()=>a.x()}}},Gd={kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>w(e,x(Bu(n,r),"float32")),b:()=>w(e,x(Hu(n,r),"float32"))}}};const jd=n({maxPool3dGrad_:function(e,t,n,r,a,s,i){e=S(e,"dy","maxPool3dGrad"),t=S(t,"input","maxPool3dGrad"),n=S(n,"output","maxPool3dGrad");let o=e,u=t,l=n,c=!1;return 4===t.rank&&(c=!0,o=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),u=M(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=M(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]])),z(5===o.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+o.rank+"."),z(5===u.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+u.rank+"."),z(5===l.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+l.rank+"."),Po("maxPool3dGrad",s,i),e={dy:o,input:u,output:l},t={filterSize:r,strides:a,pad:s,dimRoundingMode:i},n=I.runKernel(gn,e,t),c?M(n,[n.shape[1],n.shape[2],n.shape[3],n.shape[4]]):n}});var Hd={kernelName:mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>jd(e,r,a,s,i,o,u)}}};const qd=n({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=S(e,"dy","maxPoolGrad"),u=S(t,"input","maxPoolGrad");return e=S(n,"output","maxPoolGrad"),z(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy `+`(${o.rank})`),z(4===o.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+"."),z(4===u.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+u.rank+"."),Po("maxPoolGrad",s,i),t={dy:o,input:u,output:e},n={filterSize:r,strides:a,pad:s,dimRoundingMode:i},I.runKernel(fn,t,n)}});var Kd={kernelName:dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>qd(e,r,a,s,i,o)}}},Xd={kernelName:vn,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e;e=t.axis;const a=Q(e,r.shape),s=U(ul(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach(e=>{t[e]=1});var e=M(n,t);return y(w(e,Sl(r.shape,"float32")),s)}}}},Yd={kernelName:bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{var n=n["axis"],[t,r]=t;const a=Vd(e,r,t,Q(n,t.shape));return{x:()=>a.x()}}},Jd={kernelName:xn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>w(e,x(qu(n,r),"float32")),b:()=>w(e,x(Pu(n,r),"float32"))}}},Zd={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],a=n["paddings"],s=a.map(e=>e[0]);return{x:()=>Go(e,s,r.shape)}}},Qd={kernelName:kn,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{var e=xi(r.shape,s);return 0<e.length?M(b(n,e),r.shape):n},b:()=>{var e=w(n,tl(Lu(y(r,a)))),t=xi(a.shape,s);return 0<t.length?M(b(e,t),a.shape):e}}}},ef={kernelName:In,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{var e=w(n,x(a,"float32")),t=xi(r.shape,s);return 0<t.length?M(b(e,t),r.shape):e},b:()=>{var e=w(n,x(r,"float32")),t=xi(a.shape,s);return 0<t.length?M(b(e,t),a.shape):e}}}},tf={kernelName:Sn,gradFunc:e=>({x:()=>tl(e)})},nf={kernelName:$n,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Il(n.shape,"float32")}}},rf={kernelName:An,gradFunc:e=>({x:()=>Su(e)})},af={kernelName:Rn,saveAllInputs:!0,gradFunc:(e,t,n)=>{n=n.axis;const r=jc(e,n);return r.map(e=>()=>e)}},sf={kernelName:Fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],a=n["paddings"],s=a.map(e=>e[0]);return{x:()=>Go(e,s,r.shape)}}},of={kernelName:Dn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,r,a]=e,s=t,i=r,o=L(s.shape,i.shape);return{a:()=>{var e=x(i,"float32");let t=w(n,w(e,Gl(s,k(e,P(1)))));e=xi(s.shape,o);return 0<e.length&&(t=b(t,e)),M(t,s.shape)},b:()=>{var e=Pu(s,0),e=Iu(e,Yu(s),Su(s));let t=w(n,w(a,e));e=xi(i.shape,o);return 0<e.length&&(t=b(t,e)),M(t,i.shape)}}}},uf={kernelName:On,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[r,a]=e,s=Pu(r,0);return{x:()=>Iu(s,n,w(n,a)),alpha:()=>{let e=Iu(s,Su(n),w(n,r));var t=xi(a.shape,n.shape);return 0<t.length&&(e=b(e,t)),M(e,a.shape)}}}},lf={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{var e=y(n,x(a,"float32")),t=xi(r.shape,s);return 0<t.length?M(b(e,t),r.shape):e},b:()=>{let e=w(n,x(r,"float32"));var t=xi(a.shape,s),t=(0<t.length&&(e=M(b(e,t),a.shape)),Al(a));return tl(y(e,x(t,"float32")))}}}},cf={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,tl(Al(n)))}}},hf={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{var[t]=t;const n=w(qu(t,6),Oc(t));return{x:()=>w(e,x(n,"float32"))}}},pf={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,x(Oc(n),"float32"))}}},df={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>M(e,n.shape)}}},ff={kernelName:Gn,inputsToSave:["images"],gradFunc:(e,t,n)=>{var[t]=t;const r={dy:e,images:t};return{images:()=>I.runKernel(jn,r,n)}}},mf={kernelName:Vn,inputsToSave:["images"],gradFunc:(e,t,n)=>{var[t]=t;const r={dy:e,images:t};return{images:()=>I.runKernel(Un,r,n)}}},gf={kernelName:qn,gradFunc:(e,t,n)=>{n=n.dims;const r=Q(n,e.shape);return{x:()=>pc(e,r)}}},yf={kernelName:Kn,gradFunc:e=>({x:()=>Su(e)})},vf={kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tl(y(e,w(Gl(n,1.5),2)))}}},bf={kernelName:Jn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>x(Su(n),"float32"),t:()=>w(e,x(n,e.dtype)),e:()=>w(e,x(gl(n),e.dtype))}}},xf={kernelName:Zn,inputsToSave:["x"],gradFunc:(r,e)=>{const[a]=e;return{x:()=>{var e=Pu(a,P(0)),t=P(Rp),n=P(Fp),n=w(r,n),t=w(w(r,t),$u(x(a,"float32")));return Iu(e,n,t)}}}},wf={kernelName:rr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,w(n,k(P(1),n)))}}},kf={kernelName:nr,gradFunc:e=>({x:()=>Su(e)})},Nf={kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(fu(x(n,"float32")),e)}}},If={kernelName:tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(mu(x(n,"float32")),e)}}},Sf={kernelName:Qn,inputsToSave:["x"],gradFunc:(t,e,n)=>{var[e]=e,{begin:n,size:r}=n,a=e.shape,[s,i]=qi(e,n,r);const o=[];for(let e=0;e<t.rank;e++)o.push([s[e],a[e]-s[e]-i[e]]);return{x:()=>Ll(t,o)}}},Tf={kernelName:lr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,a=n["dim"],s=w(e,r);return{logits:()=>k(s,w(b(s,[a],!0),r))}}},Cf={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,Uo(n))}}},Ef={kernelName:or,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>qo(e,r,a)}}},_f={kernelName:ur,gradFunc:(e,t,n)=>{const r=n["axis"];return{x:()=>Vo(e,r)}}};for(const nR of[Ph,Bh,Wh,Gh,Hh,qh,Kh,a,Xh,Yh,Jh,Zh,Qh,ep,tp,np,rp,ap,sp,bh,xh,wh,Nh,vh,Rh,md,gd,yd,vd,bd,lf,xd,wd,kd,Nd,Id,Td,Sd,Cd,Ed,$d,Rd,Fd,Dd,Od,Md,Ld,zd,Pd,Wd,Ud,Ud,Gd,Hd,Kd,Xd,Yd,Jd,Zd,Qd,ef,tf,nf,rf,af,sf,sf,of,uf,cf,hf,pf,df,ff,mf,gf,yf,vf,bf,xf,wf,kf,Nf,If,Sf,Tf,Cf,Ef,Ef,_f,_f,{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,w($c(x(n,"float32")),2))}}},{kernelName:mr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=P(2);return{a:()=>w(e,w(a,k(n,r))),b:()=>w(e,w(a,k(r,n)))}}},{kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(e,w(x(n,"float32"),2))}}},{kernelName:Rr,gradFunc:e=>({x:()=>Su(e)})},{kernelName:wr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[r,a]=e,s=L(r.shape,a.shape);return{a:()=>{let e=n;var t=xi(r.shape,s);return 0<t.length&&(e=b(e,t)),M(e,r.shape)},b:()=>{let e=n;var t=xi(a.shape,s);return 0<t.length&&(e=b(e,t)),M(tl(e),a.shape)}}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice();t=n.axis;const s=Q(t,r.shape);s.forEach(e=>{a[e]=1});n=M(e,a);const i=w(n,Sl(r.shape,"float32"));return{x:()=>i}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>y(e,Al(fu(n)))}}},{kernelName:Nr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>w(k(P(1),Al(n)),e)}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[i]=e,o=t["reps"];return{x:()=>{let a=Su(i);if(1===i.rank)for(let e=0;e<o[0];++e)a=E(a,Go(s,[e*i.shape[0]],[i.shape[0]]));else if(2===i.rank)for(let t=0;t<o[0];++t)for(let e=0;e<o[1];++e)a=E(a,Go(s,[t*i.shape[0],e*i.shape[1]],[i.shape[0],i.shape[1]]));else if(3===i.rank)for(let n=0;n<o[0];++n)for(let t=0;t<o[1];++t)for(let e=0;e<o[2];++e)a=E(a,Go(s,[n*i.shape[0],t*i.shape[1],e*i.shape[2]],[i.shape[0],i.shape[1],i.shape[2]]));else{if(4!==i.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+i.rank+" tensors yet.");for(let r=0;r<o[0];++r)for(let n=0;n<o[1];++n)for(let t=0;t<o[2];++t)for(let e=0;e<o[3];++e)a=E(a,Go(s,[r*i.shape[0],n*i.shape[1],t*i.shape[2],e*i.shape[3]],[i.shape[0],i.shape[1],i.shape[2],i.shape[3]]))}return a}}}},{kernelName:Cr,gradFunc:(e,t,n)=>{n=n.perm;const r=pl(n);return{x:()=>vi(e,r)}}},{kernelName:_r,gradFunc:(e,t,n)=>{const r=n["axis"];return{value:()=>Dc(e,r)}}},{kernelName:Ar,inputsToSave:["segmentIds"],gradFunc:(s,e)=>{const[i]=e;return{x:()=>{{var e=s,n=i,r=kl(n,Su(n)),e=zu(e,r);let t=Bu(n,P(0,"int32"));var a=e.rank-t.rank;for(let e=0;e<a;++e)t=Ru(t,e+1);return t=ml(t,Sl(e.shape,"bool")),r=Su(e),Iu(t,e,r)}}}}},{kernelName:$r,gradFunc:e=>({x:()=>Su(e)})}])jr(nR);t().prototype.abs=function(){return this.throwIfDisposed(),po(this)},t().prototype.acos=function(){return this.throwIfDisposed(),fo(this)},t().prototype.acosh=function(){return this.throwIfDisposed(),mo(this)},t().prototype.add=function(e){return this.throwIfDisposed(),E(this,e)},t().prototype.all=function(e,t){return this.throwIfDisposed(),yo(this,e,t)},t().prototype.any=function(e,t){return this.throwIfDisposed(),vo(this,e,t)},t().prototype.argMax=function(e){return this.throwIfDisposed(),bo(this,e)},t().prototype.argMin=function(e){return this.throwIfDisposed(),xo(this,e)},t().prototype.asScalar=function(){return this.throwIfDisposed(),z(1===this.size,()=>"The array must have only 1 element."),M(this,[])},t().prototype.asType=function(e){return this.throwIfDisposed(),x(this,e)},t().prototype.as1D=function(){return this.throwIfDisposed(),M(this,[this.size])},t().prototype.as2D=function(e,t){return this.throwIfDisposed(),M(this,[e,t])},t().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),M(this,[e,t,n])},t().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),M(this,[e,t,n,r])},t().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),M(this,[e,t,n,r,a])},t().prototype.asin=function(){return this.throwIfDisposed(),wo(this)},t().prototype.asinh=function(){return this.throwIfDisposed(),ko(this)},t().prototype.atan=function(){return this.throwIfDisposed(),No(this)},t().prototype.atan2=function(e){return this.throwIfDisposed(),Io(this,e)},t().prototype.atanh=function(){return this.throwIfDisposed(),So(this)},t().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Bo(this,e,t,n,r)},t().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),qo(this,e,t)},t().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Ko(this,e,t,n,r,a)},t().prototype.broadcastTo=function(e){return this.throwIfDisposed(),eu(this,e)},t().prototype.cast=function(e){return this.throwIfDisposed(),x(this,e)},t().prototype.ceil=function(){return this.throwIfDisposed(),tu(this)},t().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),nu(this,e,t)},t().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof v&&(e=[e]),Vo([this,...e],t)},t().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),uu(this,e,t,n,r,a,s)},t().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),cu(this,e,t,n,r,a)},t().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),ou(this,e,t,n,r,a,s)},t().prototype.cos=function(){return this.throwIfDisposed(),fu(this)},t().prototype.cosh=function(){return this.throwIfDisposed(),mu(this)},t().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),gu(this,e,t,n)},t().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),yu(this,e,t,n)},t().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},t().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),xu(this,e,t,n,r,a,s)},t().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),ku(this,e,t,n,r,a)},t().prototype.divNoNan=function(e){return this.throwIfDisposed(),Tu(this,e)},t().prototype.div=function(e){return this.throwIfDisposed(),y(this,e)},t().prototype.dot=function(e){return this.throwIfDisposed(),Cu(this,e)},t().prototype.elu=function(){return this.throwIfDisposed(),_u(this)},t().prototype.equal=function(e){return this.throwIfDisposed(),Nu(this,e)},t().prototype.erf=function(){return this.throwIfDisposed(),Au(this)},t().prototype.exp=function(){return this.throwIfDisposed(),$u(this)},t().prototype.expandDims=function(e){return this.throwIfDisposed(),Ru(this,e)},t().prototype.expm1=function(){return this.throwIfDisposed(),Fu(this)},t().prototype.fft=function(){return this.throwIfDisposed(),Tc(this)},t().prototype.flatten=function(){return this.throwIfDisposed(),M(this,[this.size])},t().prototype.floor=function(){return this.throwIfDisposed(),Lu(this)},t().prototype.floorDiv=function(e){return this.throwIfDisposed(),ho(this,e)},t().prototype.gather=function(e,t){return this.throwIfDisposed(),zu(this,e,t)},t().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Bu(this,e)},t().prototype.greater=function(e){return this.throwIfDisposed(),Pu(this,e)},t().prototype.ifft=function(){return this.throwIfDisposed(),Cc(this)},t().prototype.irfft=function(){return this.throwIfDisposed(),Ec(this)},t().prototype.isFinite=function(){return this.throwIfDisposed(),Vu(this)},t().prototype.isInf=function(){return this.throwIfDisposed(),Uu(this)},t().prototype.isNaN=function(){return this.throwIfDisposed(),Gu(this)},t().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ju(this,e)},t().prototype.lessEqual=function(e){return this.throwIfDisposed(),qu(this,e)},t().prototype.less=function(e){return this.throwIfDisposed(),Hu(this,e)},t().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Xu(this,e,t,n,r)},t().prototype.logSigmoid=function(){return this.throwIfDisposed(),rl(this)},t().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sl(this,e)},t().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),fl(this,e,t)},t().prototype.log=function(){return this.throwIfDisposed(),Yu(this)},t().prototype.log1p=function(){return this.throwIfDisposed(),Ju(this)},t().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ml(this,e)},t().prototype.logicalNot=function(){return this.throwIfDisposed(),gl(this)},t().prototype.logicalOr=function(e){return this.throwIfDisposed(),yl(this,e)},t().prototype.logicalXor=function(e){return this.throwIfDisposed(),vl(this,e)},t().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),T(this,e,t,n)},t().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),bl(this,e,t,n,r)},t().prototype.max=function(e,t){return this.throwIfDisposed(),al(this,e,t)},t().prototype.maximum=function(e){return this.throwIfDisposed(),kl(this,e)},t().prototype.mean=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)},t().prototype.min=function(e,t){return this.throwIfDisposed(),Tl(this,e,t)},t().prototype.minimum=function(e){return this.throwIfDisposed(),Cl(this,e)},t().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),El(this,e,t)},t().prototype.mod=function(e){return this.throwIfDisposed(),_l(this,e)},t().prototype.mul=function(e){return this.throwIfDisposed(),w(this,e)},t().prototype.neg=function(){return this.throwIfDisposed(),tl(this)},t().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Yc(this,e,t,n)},t().prototype.notEqual=function(e){return this.throwIfDisposed(),Dl(this,e)},t().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),yi(this,e,t,n)},t().prototype.onesLike=function(){return this.throwIfDisposed(),Ol(this)},t().prototype.pad=function(e,t){return this.throwIfDisposed(),Ll(this,e,t)},t().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ul(this,e,t,n,r,a,s)},t().prototype.pow=function(e){return this.throwIfDisposed(),Gl(this,e)},t().prototype.prelu=function(e){return this.throwIfDisposed(),jl(this,e)},t().prototype.prod=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},t().prototype.reciprocal=function(){return this.throwIfDisposed(),lc(this)},t().prototype.relu=function(){return this.throwIfDisposed(),cc(this)},t().prototype.relu6=function(){return this.throwIfDisposed(),hc(this)},t().prototype.reshapeAs=function(e){return this.throwIfDisposed(),M(this,e.shape)},t().prototype.reshape=function(e){return this.throwIfDisposed(),M(this,e)},t().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Mh(this,e,t,n)},t().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Lh(this,e,t,n)},t().prototype.reverse=function(e){return this.throwIfDisposed(),pc(this,e)},t().prototype.rfft=function(){return this.throwIfDisposed(),Ac(this)},t().prototype.round=function(){return this.throwIfDisposed(),dc(this)},t().prototype.rsqrt=function(){return this.throwIfDisposed(),fc(this)},t().prototype.selu=function(){return this.throwIfDisposed(),mc(this)},t().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),gc(this,e,t,n,r,a,s)},t().prototype.sigmoid=function(){return this.throwIfDisposed(),Uo(this)},t().prototype.sign=function(){return this.throwIfDisposed(),vc(this)},t().prototype.sin=function(){return this.throwIfDisposed(),bc(this)},t().prototype.sinh=function(){return this.throwIfDisposed(),xc(this)},t().prototype.slice=function(e,t){return this.throwIfDisposed(),Go(this,e,t)},t().prototype.softmax=function(e){return this.throwIfDisposed(),Sc(this,e)},t().prototype.softplus=function(){return this.throwIfDisposed(),nl(this)},t().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Vl(this,e,t)},t().prototype.split=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},t().prototype.sqrt=function(){return this.throwIfDisposed(),$c(this)},t().prototype.square=function(){return this.throwIfDisposed(),Al(this)},t().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Rc(this,e)},t().prototype.squeeze=function(e){return this.throwIfDisposed(),Fc(this,e)},t().prototype.stack=function(e,t){this.throwIfDisposed();e=e instanceof v?[this,e]:[this,...e];return Dc(e,t)},t().prototype.step=function(e){return this.throwIfDisposed(),Oc(this,e)},t().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Mc(this,e,t,n,r,a,s,i,o)},t().prototype.sub=function(e){return this.throwIfDisposed(),k(this,e)},t().prototype.sum=function(e,t){return this.throwIfDisposed(),b(this,e,t)},t().prototype.tan=function(){return this.throwIfDisposed(),Lc(this)},t().prototype.tanh=function(){return this.throwIfDisposed(),jo(this)},t().prototype.tile=function(e){return this.throwIfDisposed(),Du(this,e)},t().prototype.toBool=function(){return this.throwIfDisposed(),x(this,"bool")},t().prototype.toFloat=function(){return this.throwIfDisposed(),x(this,"float32")},t().prototype.toInt=function(){return this.throwIfDisposed(),x(this,"int32")},t().prototype.topk=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},t().prototype.transpose=function(e){return this.throwIfDisposed(),vi(this,e)},t().prototype.unique=function(e){return this.throwIfDisposed(),Uc(this,e)},t().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Gc(this,e,t)},t().prototype.unstack=function(e){return this.throwIfDisposed(),jc(this,e)},t().prototype.where=function(e,t){return this.throwIfDisposed(),Iu(e,this,t)},t().prototype.zerosLike=function(){return this.throwIfDisposed(),Su(this)};let Af;function $f(){return Af=null==Af?co().epsilon():Af}function Rf(){return"channelsLast"}class Ff extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ff.prototype)}}class Df extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Df.prototype)}}class H extends Error{constructor(e){super(e),Object.setPrototypeOf(this,H.prototype)}}class _ extends Error{constructor(e){super(e),Object.setPrototypeOf(this,_.prototype)}}class Of extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Of.prototype)}}function Mf(n,r){if(Array.isArray(n)){let t=[];for(let e=0;e<r;e++)t=t.concat(n);return t}{const e=new Array(r);return e.fill(n),e}}function Lf(e,t){if(!e)throw new Of(t)}function zf(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Pf(e){return 1===e.length?e[0]:e}function Bf(e){return Array.isArray(e)?e:[e]}function Wf(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2");e=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Vf(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Uf={};function Gf(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function jf(n,r={},a={},s="object",i=!1){if("string"==typeof n){var o=n;let e;if(o in a)e=a[o];else if(o in Uf)e=Uf[o];else if(null==(e=r[o]))throw new H(`Unknown ${s}: ${n}. `+`This may be due to one of the following reasons:
`+`1. The ${s} is defined in Python, in which `+"case it needs to be ported to TensorFlow.js or your JavaScript "+`code.
`+`2. The custom ${s} is defined in JavaScript, `+"but is not registered properly with tf.serialization.registerClass().");return e}{o=n;if(null==o.className||null==o.config)throw new H(s+": Improper config format: "+JSON.stringify(o)+`.
`+"'className' and 'config' must set.");n=o.className;let e,t;if(n in a?[e,t]=a[n]:n in Uf?[e,t]=Uf.className:n in r&&([e,t]=r[n]),null==e)throw new H(`Unknown ${s}: ${n}. `+`This may be due to one of the following reasons:
`+`1. The ${s} is defined in Python, in which `+"case it needs to be ported to TensorFlow.js or your JavaScript "+`code.
`+`2. The custom ${s} is defined in JavaScript, `+"but is not registered properly with tf.serialization.registerClass().");if(null!=t){const u={};for(const c of Object.keys(Uf))u[c]=Uf[c];for(const h of Object.keys(a))u[h]=a[h];const l=o.config;l.customObjects=u;r=Object.assign({},Uf);for(const p of Object.keys(a))Uf[p]=a[p];!function t(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>t(e));else for(const r of Object.keys(e)){var n=e[r];null!=n&&"object"==typeof n&&(Array.isArray(n)||"ndarray"!==n.type||"number"!=typeof n.value?t(n):e[r]=n.value)}}(o.config);n=t(e,o.config,a,i);return Uf=Object.assign({},r),n}s=Object.assign({},Uf);for(const d of Object.keys(a))Uf[d]=a[d];i=new e(o.config);return Uf=Object.assign({},s),i}}function Hf(e,t){return-1*((e=e)<(t=t)?-1:t<e?1:0)}function qf(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Kf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new H(n+` is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Xf(e,t,n=0,r=1/0){return Lf(0<=n),Lf(n<=r),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Yf(e,n){Array.isArray(e)?(z(0<e.length,()=>n+" is unexpectedly an empty array."),e.forEach((e,t)=>Yf(e,`element ${t+1} of `+n))):z(Number.isInteger(e)&&0<e,()=>`Expected ${n} to be a positive integer, but got `+function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}(e)+".")}function Jf(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Zf(e,t){return O(()=>$c(b(w(e,e),t,!0)))}class Qf extends Ji{getConfig(){return{}}}class em extends Qf{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(n){return O(()=>{var e=Zf(n,this.axis),t=nu(e,0,this.maxValue);return w(n,y(t,E($f(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}em.className="MaxNorm",r(em);class tm extends Qf{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return O(()=>y(e,E($f(),Zf(e,this.axis))))}getConfig(){return{axis:this.axis}}}tm.className="UnitNorm",r(tm);class nm extends Qf{apply(e){return cc(e)}}nm.className="NonNeg",r(nm);class rm extends Qf{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(n){return O(()=>{var e=Zf(n,this.axis),t=E(w(this.rate,nu(e,this.minValue,this.maxValue)),w(1-this.rate,e));return w(n,y(t,E($f(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}rm.className="MinMaxNorm",r(rm);const am={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function sm(e){return Gf(e)}function im(e,t={}){return jf(e,Zi.getMap().classNameMap,t,"constraint")}function om(e){return null==e?null:"string"==typeof e?im({className:e in am?am[e]:e,config:{}}):e instanceof Qf?e:im(e)}Ph=Object.freeze({__proto__:null,maxNorm:function(e){return new em(e)},unitNorm:function(e){return new tm(e)},nonNeg:function(){return new nm},minMaxNorm:function(e){return new rm(e)}});const um=["channelsFirst","channelsLast"],lm=["nearest","bilinear"],cm=["valid","same","causal"],hm=["max","avg"],pm=["sum","mul","concat","ave"],dm=new Map;function fm(e){Kf(um,"DataFormat",e)}function mm(e){Kf(cm,"PaddingMode",e)}function gm(e){Kf(hm,"PoolMode",e)}const ym=[],vm="/";function bm(e,t){ym.push(e);try{var n=t();return ym.pop(),n}catch(e){throw ym.pop(),e}}function xm(e){if(Nm(e))return(0===ym.length?"":ym.join(vm)+vm)+e;throw new Error("Not a valid tensor name: '"+e+"'")}function wm(e){if(!Nm(e))throw new Error("Not a valid tensor name: '"+e+"'");dm.has(e)||dm.set(e,0);var t=dm.get(e);return dm.set(e,dm.get(e)+1),0<t?(t=e+"_"+t,dm.set(t,1),t):e}const km=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Nm(e){return e.match(km)}function Im(t,n,r){null==r&&(r=t.length);let a=1;for(let e=n=null==n?0:n;e<r;++e)a*=t[e];return a}function Sm(t){if(0===t.length)return Number.NaN;let n=Number.POSITIVE_INFINITY;for(let e=0;e<t.length;e++){var r=t[e];r<n&&(n=r)}return n}function Tm(t){if(0===t.length)return Number.NaN;let n=Number.NEGATIVE_INFINITY;for(let e=0;e<t.length;e++){var r=t[e];r>n&&(n=r)}return n}function Cm(t,n){if(n<t)throw new H(`end (${n}) < begin (${t}) is forbidden.`);const r=[];for(let e=t;e<n;++e)r.push(e);return r}function Em(e,t){return x(e,t)}function _m(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),M(e,n)}function Am(e,t,n){return O(()=>{switch(e.rank){case 1:return wc(e,t,n);case 2:return kc(e,[t,0],[n,e.shape[1]]);case 3:return Nc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Ic(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Go(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Go(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}})}function $m(e,t,n){return O(()=>{switch(e.rank){case 1:return wc(e,t,n);case 2:return kc(e,[0,t],[e.shape[0],n]);case 3:return Nc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Ic(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function Rm(e,t,n,r){return O(()=>{switch(e.rank){case 1:return wc(e,t,n);case 2:switch(r){case 1:return Am(e,t,n);case 2:return $m(e,t,n);default:throw new H("The axis is not within the rank of the tensor "+r)}case 3:switch(r){case 1:return Am(e,t,n);case 2:return Nc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return $m(e,t,n);default:throw new H("The axis is not within the rank of the tensor "+r)}case 4:switch(r){case 1:return Am(e,t,n);case 2:return Ic(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Ic(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return $m(e,t,n);default:throw new H("The axis is not within the rank of the tensor "+r)}default:throw new H("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}})}function Fm(e,t=-1){var n;return(t=t<0?0!==(n=e[0].rank)?n:0:t)===e[0].rank&&(t=-1),Vo(e,t)}function Dm(e,t){switch(e.rank){case 1:return ru([e,t]);case 2:return au([e,t],0);case 3:return su([e,t],0);case 4:return iu([e,t],0);default:throw new H("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function Om(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match `+`the number of dimensions in input x (${e.rank})`);return Du(e,t)}function Mm(e,t=0,n=1,r,a){return sc(e,t,n,r,a)}function Lm(e,n,t,r){if(e.rank<2||n.rank<2)throw new _("dot requires both inputs to be rank >= 2"+` but got x shape = ${e.shape} and y shape = `+n.shape);if(3<=n.rank&&e.shape.slice(-1)[0]!==n.shape.slice(-2)[0])throw new _("If rank y >= 3, then the second last dim"+` of y must equal the last dim of x but got x shape = ${e.shape} and `+" y shape = "+n.shape);if(2===e.rank&&2===n.rank)return 0,dh({a:e,b:n,transposeA:!1,transposeB:!1,bias:r?Bm(e.rank,r,Rf()):null,activation:t});{const o=e.shape.slice();var a=o.pop();e=M(e,[-1,a]);const u=n.shape.slice();var a=u.pop(),s=u.pop(),a=[...u,a],i=Array.from({length:n.rank},(e,t)=>0===t?n.rank-2:t<=n.rank-2?t-1:t),i=(n=M(vi(n,i),[s,-1]),[...o,...a]);return M(dh({a:e,b:n,transposeA:!1,transposeB:!1,bias:r?Bm(e.rank,r,Rf()):null,activation:t}),i)}}function zm(e,t,n){return O(()=>(t=(Array.isArray(t)?zc:x)(t,"int32"),zu(e,t,n)))}function Pm(e){return w(e,e)}function Bm(e,t,n){var r=t.shape;if(1!==t.rank&&t.rank!==e)throw new H("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return 1===r.length?M(t,[1,r[0],1,1,1]):M(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?M(t,[1,1,1,1,r[0]]):M(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?M(t,[1,r[0],1,1]):M(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?M(t,[1,1,1,r[0]]):M(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?M(t,[1,r[0],1]):M(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?M(t,[1,1,r[0]]):M(t,[1].concat(r))}else if(e<3)return t;throw new H("Unsupported input rank by biasAdd: "+t.rank)}function Wm(e,t,n){return O(()=>(fm(n=null==n?Rf():n),E(e,Bm(e.rank,t,n))))}function Vm(e,t,n,r){return O(()=>eh(e,t,n,r))}function Um(e,t,n=!1){return(n?e:t)()}const Gm=["fanIn","fanOut","fanAvg"],jm=["normal","uniform","truncatedNormal"];class Hm extends Ji{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class qm extends Hm{apply(e,t){return Il(e,t)}}qm.className="Zeros",r(qm);class Km extends Hm{apply(e,t){return Sl(e,t)}}Km.className="Ones",r(Km);class Xm extends Hm{constructor(e){if(super(),"object"!=typeof e)throw new H("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new H("config must have value set but got "+e);this.value=e.value}apply(e,t){return O(()=>w(P(this.value),Sl(e,t)))}getConfig(){return{value:this.value}}}Xm.className="Constant",r(Xm);class Ym extends Hm{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ic(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ym.className="RandomUniform",r(Ym);class Jm extends Hm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _(`randomNormal does not support dType ${t}.`);return Mm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Jm.className="RandomNormal",r(Jm);class Zm extends Hm{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _(`truncatedNormal does not support dType ${t}.`);return Vc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Zm.className="TruncatedNormal",r(Zm);class Qm extends Hm{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return O(()=>{if(2!==e.length||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return w(this.gain,Ou(e[0]))})}getConfig(){return{gain:this.gain}}}Qm.className="Identity",r(Qm);class eg extends Hm{constructor(e){if(super(),e.scale<0)throw new H("scale must be a positive float. Got: "+e.scale);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Kf(Gm,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,t=this.distribution,Kf(jm,"Distribution",t),this.seed=e.seed}apply(e,t){var n=function(e,t="channelsLast"){let n,r;var a;return fm(t),2===e.length?(n=e[0],r=e[1]):-1!==[3,4,5].indexOf(e.length)?"channelsFirst"===t?(a=Im(e,2),n=e[1]*a,r=e[0]*a):"channelsLast"===t&&(a=Im(e,0,e.length-2),n=e[e.length-2]*a,r=e[e.length-1]*a):(t=Im(e),n=Math.sqrt(t),r=Math.sqrt(t)),[n,r]}(e),r=n[0],n=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,n):a/=Math.max(1,(r+n)/2),"normal"!==this.distribution)return r=Math.sqrt(3*a),ic(e,-r,r,t);n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new _(this.getClassName()+` does not support dType ${t}.`);return Vc(e,0,n,t,this.seed)}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}eg.className="VarianceScaling",r(eg);class tg extends eg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return eg.className}}tg.className="GlorotUniform",r(tg);class ng extends eg{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return eg.className}}ng.className="GlorotNormal",r(ng);class rg extends eg{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return eg.className}}rg.className="HeNormal",r(rg);class ag extends eg{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return eg.className}}ag.className="HeUniform",r(ag);class sg extends eg{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return eg.className}}sg.className="LeCunNormal",r(sg);class ig extends eg{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return eg.className}}ig.className="LeCunNormal",r(ig);class og extends Hm{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new _("Random seed is not implemented for Orthogonal Initializer yet.")}apply(n,e){return O(()=>{if(n.length<2)throw new _("Shape must be at least 2D.");2e3<n[0]*n[1]&&console.warn("Orthogonal initializer is being called on a matrix with more "+`than 2000 (${n[0]*n[1]}) elements: `+"Slowness may result.");var e=Mm(n[0]>n[1]?[n[1],n[0]]:n,0,1,"float32");let t=up.gramSchmidt(e);return n[0]>n[1]&&(t=vi(t)),w(this.gain,t)})}getConfig(){return{gain:this.gain,seed:this.seed}}}og.className="Orthogonal",r(og);const ug={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function lg(e,t={}){return jf(e,Zi.getMap().classNameMap,t,"initializer")}function cg(e){return Gf(e)}function hg(e){if("string"!=typeof e)return e instanceof Hm?e:lg(e);e=e in ug?ug[e]:e;if("GlorotNormal"===e)return new ng;if("GlorotUniform"===e)return new tg;if("HeNormal"===e)return new rg;if("HeUniform"===e)return new ag;if("LeCunNormal"===e)return new sg;if("LeCunUniform"===e)return new ig;{const t={};return t.className=e,t.config={},lg(t)}}Bh=Object.freeze({__proto__:null,zeros:function(){return new qm},ones:function(){return new Km},constant:function(e){return new Xm(e)},randomUniform:function(e){return new Ym(e)},randomNormal:function(e){return new Jm(e)},truncatedNormal:function(e){return new Zm(e)},identity:function(e){return new Qm(e)},varianceScaling:function(e){return new eg(e)},glorotUniform:function(e){return new tg(e)},glorotNormal:function(e){return new ng(e)},heNormal:function(e){return new rg(e)},heUniform:function(e){return new ag(e)},leCunNormal:function(e){return new sg(e)},leCunUniform:function(e){return new ig(e)},orthogonal:function(e){return new og(e)}});let pg=0;const dg={};function fg(e=""){return e in dg||(dg[e]=0),dg[e]+=1,e+dg[e].toString()}function mg(e){return Array.isArray(e)&&Array.isArray(e[0])}function gg(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function A(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new H("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function yg(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new H("Expected exactly 1 Shape; got "+e.length)}return e}function vg(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const bg="Variable";class xg{constructor(e,t="float32",n=bg,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=pg++,n=null==n?bg:n,this.originalName=xm(n),this.name=wm(this.originalName),this.trainable_=r,this.constraint=a,this.val=Hc(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){this.assertNotDisposed();var t=this.val,n=e;if(t.shape.toString()!==n.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(n.shape));return this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function wg(e){return e.map(e=>e.read())}function kg(e){e.forEach(e=>{const t=e[0];t.write(e[1])})}class Ng{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ig{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=pg++,null!=s&&(this.originalName=xm(s),this.name=wm(this.originalName)),this.rank=t.length}}let Sg=0;class Tg{constructor(e,t){this.callArgs=t,this.id=Sg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Cg=0;class Eg extends Ji{constructor(n={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Cg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=n.name;var t;if(e||(t=this.getClassName(),e=Wf(t)+"_"+fg(t)),this.name=e,this.trainable_=null==n.trainable||n.trainable,null!=n.inputShape||null!=n.batchInputShape){let t;if(null!=n.batchInputShape)t=n.batchInputShape;else if(null!=n.inputShape){let e=null;null!=n.batchSize&&(e=n.batchSize),t=[e].concat(n.inputShape)}this.batchInputShape=t;let e=n.dtype;null==(e=null==e?n.inputDType:e)&&(e="float32"),this.dtype=e}null!=n.weights?this.initialWeights=n.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Df("The layer has never been called "+`and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, `+`but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Pf(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Pf(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(1<this.inboundNodes.length)throw new Ff("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Ff("Layer "+this.name+" is not connected, no input to return.");return Pf(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ff("Layer "+this.name+" has no inbound nodes.");if(1<this.inboundNodes.length)throw new Ff("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Pf(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return(this.trainable?this._trainableWeights.filter(e=>!e.trainable):this._trainableWeights).concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Bf(e),null!=this.inputSpec&&0!==this.inputSpec.length){var n=Bf(this.inputSpec);if(e.length!==n.length)throw new H(`Layer ${this.name} expects ${n.length} inputs, `+`but it received ${e.length} input tensors. `+"Input received: "+e);for(let t=0;t<e.length;t++){var r=e[t],a=n[t];if(null!=a){var s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new H(`Input ${t} is incompatible with layer ${this.name}: `+`expected ndim=${a.ndim}, found ndim=`+s);if(null!=a.maxNDim&&s>a.maxNDim)throw new H(`Input ${t} is incompatible with layer `+this.name+`: expected max_ndim=${a.maxNDim}, found ndim=`+s);if(null!=a.minNDim&&s<a.minNDim)throw new H(`Input ${t} is incompatible with layer `+this.name+`: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new H(`Input ${t} is incompatible with layer ${this.name} `+`: expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){var i=r.shape;for(const h in a.axes){var o=Number(h);const p=a.axes[h];var u=0<=o?i[o]:i[i.length+o];if(null!=p&&-1===[p,null].indexOf(u))throw new H(`Input ${t} is incompatible with layer `+this.name+`: expected axis ${o} of input shape to `+`have value ${p} but got shape ${i}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){var l=a.shape[e],c=r.shape[e];if(null!=l&&null!=c&&l!==c)throw new H(`Input ${t} is incompatible with layer `+`${this.name}: expected shape=${a.shape}, `+`found shape=${r.shape}.`)}}}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(i,o){o=o||{},this.assertNotDisposed();const u=Bf(i);let e=!0;for(const t of u)if(!(t instanceof Ig)){e=!1;break}let l=!0;for(const n of u)if(n instanceof Ig){l=!1;break}if(e===l)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return bm(this.name,()=>{if(!this.built){this.assertInputCompatibility(i);const n=[];for(const r of Bf(i))n.push(r.shape);this.build(Pf(n)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&l&&(this._refCount=1)}if(this.assertInputCompatibility(i),l){var e;const a=[];for(e of Bf(this.call(i,o)))-1!==u.indexOf(e)&&(e=e.clone()),a.push(e);if(t=Pf(a),null!=this.activityRegularizer)throw new _("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return t}{var t=function(e){e=Bf(e);const t=[];for(const n of e)t.push(n.shape);return Pf(t)}(i);const s=this.computeOutputShape(t);let e;if(this.warnOnIncompatibleInputShape(Array.isArray(i)?t[0]:t),e=null!=s&&0<s.length&&Array.isArray(s[0])?s.map((e,t)=>new Ig("float32",e,this,Bf(i),o,this.name,t)):new Ig("float32",s,this,Bf(i),o,this.name),this.addInboundNode(i,e,null,null,t,s,o),this._refCount++,null!=this.activityRegularizer)throw new _("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return e}})}warnOnIncompatibleInputShape(r){if(null!=this.batchInputShape)if(r.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(r)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) `+"of the layer "+this.name);else{let n=!1;this.batchInputShape.forEach((e,t)=>{null!=e&&null!=r[t]&&r[t]!==e&&(n=!0)}),n&&console.warn("The shape of the input tensor "+`(${JSON.stringify(r)}) does not `+`match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ff(`The layer ${this.name} has never been called and thus has no `+"defined output shape.");const e=[];for(const r of this.inboundNodes){var t=JSON.stringify(r.outputShapes);-1===e.indexOf(t)&&e.push(t)}var n;if(1===e.length)return n=this.inboundNodes[0].outputShapes,Array.isArray(n)&&Array.isArray(n[0])&&1===n.length?n[0]:n;throw new Ff(`The layer ${this.name} has multiple inbound nodes with different `+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(this.built)return vg(this.weights);throw new Df(`You tried to call countParams() on ${this.name}, `+"but the layer is not built yet. Build it first by calling build(batchInputShape).")}build(e){this.built=!0}getWeights(e=!1){return wg(e?this.trainableWeights:this.weights)}setWeights(o){O(()=>{var t=this.weights;if(t.length!==o.length)throw new H(`You called setWeights(weights) on layer "${this.name}" `+`with a weight list of length ${o.length}, `+`but the layer was expecting ${t.length} weights. `+`Provided weights: ${o}...`);if(0!==t.length){const i=[];var n=wg(t);for(let e=0;e<n.length;++e){var r=n[e],a=t[e],s=o[e];if(!ce(r.shape,s.shape))throw new H(`Layer weight shape ${r.shape} `+"not compatible with provided weight shape "+s.shape);i.push([a,s])}kg(i)}})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new H(`Duplicate weight name ${e} for layer `+this.name);this._addedWeightNames.push(e),null==n&&(n="float32");const u=(r=this.fastWeightInitDuringBuild?null!=o?o():hg("zeros"):r).apply(t,n),l=new xg(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss(()=>a.apply(l.read())),((s=null==s?!0:s)?this._trainableWeights:this._nonTrainableWeights).push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Bf(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(this.supportsMasking)return t;if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, `+"but was passed an inputMask.");t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, `+"but was passed an inputMask.")})}return null}addInboundNode(e,t,n,r,a,s,i=null){e=Bf(e);t=Bf(t),n=Bf(n),r=Bf(r),a=gg(a),s=gg(s);const o=[],u=[],l=[];for(const c of e)o.push(c.sourceLayer),u.push(c.nodeIndex),l.push(c.tensorIndex);new Tg({outboundLayer:this,inboundLayers:o,nodeIndices:u,tensorIndices:l,inputTensors:e,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been `+"built yet.");if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used `+"yet.");this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class _g extends Eg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:fg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");e=e.dtype||"float32";this.batchInputShape=t,this.dtype=e,this.inputSpec=[{shape:t}];const n=new Ig(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,new Tg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Ag(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape,n=(null!=e.shape&&null==t&&(t=[null].concat(e.shape)),e.dtype);return null==n&&(n="float32"),new _g({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function $g(t){if(null!=t){const r=[],a=[],s=[];for(const i in t){var e=t[i];if("number"!=typeof e){const o=e;r.push(o.data()),a.push(i),s.push(o)}}if(0<r.length){var n=await Promise.all(r);for(let e=0;e<n.length;++e)t[a[e]]=n[e][0];C(s)}}}function Rg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}_g.className="InputLayer",r(_g);class Fg{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Dg{constructor(e,t=10){this.callbacks=e=null==e?[]:e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Og extends Fg{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){const n=null==(t=null==t?{}:t).size?0:t.size;this.seen+=n;for(const a in t){const s=t[a];if("number"==typeof s)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+s*n;else{let e;a in this.totals?e=this.totals[a]:this.totals[a]=0;var r=O(()=>E(this.totals[a],w(s,n)));this.totals[a]=r,null!=e&&e.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"==typeof this.totals[n]?t[n]=this.totals[n]/this.seen:O(()=>{var e=w(y(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),uo(t[n])}))}}class Mg extends Fg{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const t=[],n=[],r=[];for(const i in this.history){var a=this.history[i];for(let e=0;e<a.length;++e)if("number"!=typeof a[e]){const o=a[e];t.push(o.data()),n.push(i),r.push(e)}}var s=await Promise.all(t);for(let e=0;e<s.length;++e){const u=this.history[n[e]][r[e]];u.dispose(),this.history[n[e]][r[e]]=s[e][0]}}}class Lg extends Fg{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||kp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");fe(this.yieldEvery)&&(this.maybeWait=function(n,r,a){let s=(null!=a?a:$a)(),i;return(...e)=>{var t=(null!=a?a:$a)();return t-s<r?i:(s=t,i=n(...e))}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await $g(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await $g(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await $g(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await $g(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await $g(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):fe(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await $g(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await $g(e),await this.trainEnd(e))}}function zg(e,t){if((e=null==e?{}:e)instanceof Fg)return[e];if(Array.isArray(e)&&e[0]instanceof Fg)return e;const n=Bf(e);return n.map(e=>new Lg(e,t))}class Pg{constructor(){}static registerCallbackConstructor(e,t){z(0<=e&&Number.isInteger(e),()=>"Verbosity level is expected to be an integer >= 0, but got "+e),Pg.checkForDuplicate(t),null==Pg.constructors[e]&&(Pg.constructors[e]=[]),Pg.constructors[e].push(t)}static checkForDuplicate(t){for(const e in Pg.constructors){const n=Pg.constructors[+e];n.forEach(e=>{if(e===t)throw new H("Duplicate callback constructor.")})}}static clear(){Pg.constructors={}}static createCallbacks(e){const t=[];for(const r in Pg.constructors){var n=+r;n<=e&&t.push(...Pg.constructors[n])}return t.map(e=>new e)}}function Bg(e,t,n,r,a,s,i,o,u){var l=new Mg;const c=[new Og,...Pg.createCallbacks(t)],h=(null!=e&&c.push(...e),c.push(l),new Dg(c));return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Wg(e,t={},n=!1){return jf(e,Zi.getMap().classNameMap,t,"layer",n)}function Vg(n,r){return O(()=>{"float32"!==n.dtype&&(n=x(n,"float32"));var e=b(Pm(n),r,!0),t=Mu(e.shape,$f()),e=$c(kl(e,t));return y(n,e)})}function Ug(e,t){return O(()=>Nl(Pm(k(t,e)),-1))}function Gg(e,t){return O(()=>Nl(po(k(t,e)),-1))}function jg(n,r){return O(()=>{var e=k(n,r),t=nu(po(n),$f(),Number.MAX_VALUE),e=po(y(e,t));return w(100,Nl(e,-1))})}function Hg(t,n,r=!1){return O(()=>{var e;return n=r?Sc(n):(e=b(n,n.shape.length-1,!0),y(n,e)),n=nu(n,$f(),1-$f()),tl(b(w(x(t,"float32"),Yu(n)),n.shape.length-1))})}function qg(n,r,a=!1){return O(()=>{var e=x(Lu((t=[Im((e=n).shape)],M(e,t))),"int32"),t=(r=nu(r,$f(),1-$f())).shape;return Hg(M(yi(e,t[t.length-1]),t),r,a)})}function Kg(t,n){return O(()=>{var e=nu(n,$f(),1-$f());return e=Yu(y(e,k(1,e))),Nl(function(n,r){if(ce(n.shape,r.shape))return O(()=>{var e=cc(r),t=tl(po(r));return E(k(e,w(r,n)),Ju($u(t)))});throw new H("logits and labels must have the same shape, but got shapes "+JSON.stringify(n.shape)+" and "+JSON.stringify(r.shape))}(t,e),-1)})}function Xg(n,r){return O(()=>{var e=Vg(n,-1),t=Vg(r,-1),e=w(e,t);return tl(b(e,-1))})}Pg.constructors={};const Yg={meanSquaredError:Ug,meanAbsoluteError:Gg,meanAbsolutePercentageError:jg,meanSquaredLogarithmicError:function(n,r){return O(()=>{var e=nu(r,$f(),Number.MAX_VALUE),e=Yu(E(1,e)),t=nu(n,$f(),Number.MAX_VALUE),t=Yu(E(1,t));return Nl(Pm(k(e,t)),-1)})},squaredHinge:function(t,n){return O(()=>{var e=kl(0,k(1,w(t,n)));return Nl(Pm(e),-1)})},hinge:function(t,n){return O(()=>{var e=kl(0,k(1,w(t,n)));return Nl(e,-1)})},categoricalHinge:function(n,r){return O(()=>{var e=b(w(n,r),-1),t=al(w(k(1,n),r),-1);return kl(0,E(1,k(t,e)))})},logcosh:function(n,r){return O(()=>{var e=Math.log(2),t=k(r,n),t=k(E(t,nl(w(-2,t))),e);return Nl(t,-1)})},categoricalCrossentropy:Hg,sparseCategoricalCrossentropy:qg,binaryCrossentropy:Kg,kullbackLeiblerDivergence:function(n,r){return O(()=>{var e=nu(n,$f(),1),t=nu(r,$f(),1);return b(w(n,Yu(y(e,t))),-1)})},poisson:function(t,n){return O(()=>{var e=Yu(E($f(),n));return Nl(k(n,w(t,e)),-1)})},cosineProximity:Xg};function Jg(t){if("string"!=typeof t)return t;{if(t in Yg)return Yg[t];let e="Unknown loss "+t;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. `+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new H(e)}}function Zg(t,n){return O(()=>{var e=w(.5,Ol(n)),e=Em(Pu(n,e),t.dtype);return Nl(Nu(t,e),-1)})}function Qg(e,t){return O(()=>Em(Nu(bo(e,-1),bo(t,-1)),"float32"))}function ey(e,t){return O(()=>x(b(ml(Nu(e,1),Nu(t,1))),"float32"))}function ty(a,s){return O(()=>{var e,t,n=ey(a,s),r=(e=a,t=s,O(()=>x(b(ml(Nu(e,0),Nu(t,1))),"float32"))),r=E(n,r);return x(Iu(Pu(r,0),y(n,r),0),"float32")})}function ny(a,s){return O(()=>{var e,t,n=ey(a,s),r=(e=a,t=s,O(()=>x(b(ml(Nu(e,1),Nu(t,0))),"float32"))),r=E(n,r);return x(Iu(Pu(r,0),y(n,r),0),"float32")})}function ry(e,t){return Kg(e,t)}function ay(e,t){return e.rank===t.rank&&(e=Fc(e,[e.rank-1])),(t=bo(t,-1)).dtype!==e.dtype&&(t=x(t,e.dtype)),x(Nu(e,t),"float32")}const sy=Hg,iy=qg,oy={binaryAccuracy:Zg,categoricalAccuracy:Qg,precision:ty,categoricalCrossentropy:sy,sparseCategoricalCrossentropy:iy,mse:Ug,MSE:Ug,mae:Gg,MAE:Gg,mape:jg,MAPE:jg,cosine:Xg};function uy(t){if(Lf(null!==t,"Unknown LossOrMetricFn "+t),"string"==typeof t)return t;{let e;for(const n of Object.keys(Yg))if(Yg[n]===t){e=n;break}if(void 0!==e)return e;for(const r of Object.keys(oy))if(oy[r]===t){e=r;break}return void 0!==e?e:t.name}}function ly(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){{if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const n=Object.keys(t);for(const r of n){if("string"!=typeof r)return!1;if(!e(t[r]))return!1}return!0}if(Array.isArray(t)){for(const a of t)if(!e(a))return!1;return!0}return!1}{const s=typeof t;return"string"==s||"number"==s||"boolean"==s}}}(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");n&&1048576<(n=JSON.stringify(e)).length&&console.warn(`User-defined metadata of model "${t}" is too large in `+`size (length=${n.length} when serialized). It is not `+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.")}function cy(e,t,r,a=console.log){var n=function(e){let t=!0;const n=[],r=[];for(const a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(const s of n){if(1<s.length||1===s.length&&1<s[0].inboundLayers.length){t=!1;break}r.push(...s)}if(t)for(const i of e.layers){let e=!1;for(const o of i.inboundNodes)if(-1!==r.indexOf(o)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e);const s=["Layer (type)","Input Shape","Output shape","Param #"];(r=n?(t=t||90,r||[.32,.61,.89,1]):(t=t||115,r||[.24,.48,.7,.8,1]))[r.length-1]<=1&&(r=r.map(e=>Math.floor(t*e)));let i;if(!n){s.push("Receives inputs"),i=[];for(const w in e.nodesByDepth)i.push(...e.nodesByDepth[w])}a("_".repeat(t)),hy(s,r,a),a("=".repeat(t));var o=e.layers;for(let e=0;e<o.length;++e){if(n){u=void 0;l=void 0;c=void 0;h=void 0;p=void 0;h=void 0;var u=o[e];var l=r;var c=a;let t,n;try{n=u.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){n="multiple"}try{t=JSON.stringify(u.outputShape)}catch(e){t="multiple"}var h=u.name,p=u.getClassName(),h=[h+` (${p})`,n,t,u.countParams().toString()];hy(h,l,c)}else{p=void 0;d=void 0;f=void 0;m=void 0;u=void 0;h=void 0;l=void 0;u=void 0;g=void 0;y=void 0;v=void 0;p=o[e];var d=r;var f=i;var m=a;let t,n;try{n=p.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){n="multiple"}try{t=JSON.stringify(p.outputShape)}catch(e){t="multiple"}const k=[];for(const N of p.inboundNodes)if(!(null!=f&&0<f.length&&-1===f.indexOf(N)))for(let e=0;e<N.inboundLayers.length;++e){var g=N.inboundLayers[e].name,y=N.nodeIndices[e],v=N.tensorIndices[e];k.push(g+`[${y}][${v}]`)}u=p.name,h=p.getClassName(),l=0===k.length?"":k[0],u=[u+` (${h})`,n,t,p.countParams().toString(),l];hy(u,d,m);for(let e=1;e<k.length;++e)hy(["","","","",k[e]],d,m)}a((e===o.length-1?"=":"_").repeat(t))}e.checkTrainableWeightsConsistency();var b=function(e){let t;t=null!=e.collectedTrainableWeights?vg(e.collectedTrainableWeights):vg(e.trainableWeights);return t}(e),x=vg(e.nonTrainableWeights);a("Total params: "+(b+x)),a("Trainable params: "+b),a("Non-trainable params: "+x),a("_".repeat(t))}function hy(t,n,e=console.log){let r="";for(let e=0;e<t.length;++e)0<e&&(r=r.slice(0,r.length-1)+" "),r=(r+=t[e]).slice(0,n[e]),r+=" ".repeat(n[e]-r.length);e(r)}function py(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function dy(t,n){if(null===t)return null;if("string"==typeof t)return Vf(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const i=[];var r=t.length;for(let e=0;e<r;++e){var a=t[e];py(n,e,a)?i.push(a):i.push(dy(a,n))}return i}{const o={};for(const u of Object.keys(t)){var e,s=t[u];"name"===u&&"string"==typeof s?o[u]=s:(e=Vf(u),o[e]=dy(s,e))}return o}}const fy="3.15.0";class my{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof my)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else if(null!=e)for(const n of e)this.add(n.key,n.value)}add(e,t,n){if(null!=this.id2Value[e.id])throw new H(`Duplicate key: name=${e.name}, id=`+e.id);return this.id2Value[e.id]=function(t,n){if(null==t.dtype||t.dtype===n.dtype)return n;try{return x(n,t.dtype)}catch(e){throw new H(`The dtype of the feed (${n.dtype}) can not be cast to the dtype `+`of the key '${t.name}' (${t.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ig){if(null==this.id2Value[e.id])throw new H("Nonexistent key: "+e.name);return this.id2Value[e.id]}var t=this.name2Id[e];if(null==t)throw new H("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}getMask(e){if(e instanceof Ig){if(null==this.id2Value[e.id])throw new H("Nonexistent key: "+e.name);return this.id2Mask[e.id]}var t=this.name2Id[e];if(null==t)throw new H("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}disposeMasks(){null!=this.id2Mask&&C(this.id2Mask)}}const gy={},yy={};function vy(e,n,r,t){var a=null!=r&&r.training,s=Array.isArray(e);const i=s?e:[e],o=i.map(e=>e.name),u=[],l=n.names();for(const w of o)-1!==l.indexOf(w)?u.push(n.getValue(w)):u.push(null);null!=t&&(t.maxNumTensors=-1/0,t.minNumTensors=1/0);var c,e=o.join(",")+"|"+n.names().join(",");let h,p;null==gy[e]&&(c=function(e,t){z(null!=e&&0<e.length,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){var a=by(e[0],t);n=a.sorted,r=a.recipientMap}else{const s=new Set;for(const i of e){const{sorted:o,recipientMap:u}=by(i,t);for(const l of o)s.has(l.name)||(n.push(l),s.add(l.name));for(const c in u)null==r[c]&&(r[c]=new Set),u[c].forEach(e=>r[c].add(e))}}return{sorted:n,recipientCounts:function(e){const t={};for(const n in e)t[n]=e[n].size;return t}(r)}}(i,n),h=c.sorted,p=c.recipientCounts,gy[e]=h,yy[e]=p),h=gy[e],p={},a||Object.assign(p,yy[e]);const d=new my(n);for(let e=0;e<h.length;++e){null!=t&&((f=oo().numTensors)>t.maxNumTensors&&(t.maxNumTensors=f),f<t.minNumTensors&&(t.minNumTensors=f));var f=h[e];const k=f.sourceLayer;if(!(k instanceof _g)){const N=[],I=[],S=[];let e=!1;for(const T of f.inputs){var m=d.getValue(T),g=d.getMask(T);N.push(m),I.push(g),null!=g&&(e=!0),a||(p[T.name]--,0!==p[T.name]||n.hasKey(T)||-1!==o.indexOf(T.name)||m.isDisposed||!0===T.sourceLayer.stateful||S.push(m))}e&&((r=r||{}).mask=I[0]);var y=Bf(k.apply(N,r));let t=null;k.supportsMasking&&(t=k.computeMask(N,I));var v=function(n){let e;if(1===n.sourceLayer.inboundNodes.length)e=n.sourceLayer.output;else{let t=null;for(let e=0;e<n.sourceLayer.inboundNodes.length;++e)for(const r of n.sourceLayer.inboundNodes[e].outputTensors)if(r.id===n.id){t=e;break}e=n.sourceLayer.getOutputAt(t)}return e}(f),b=Array.isArray(v)?v:[v];for(let e=0;e<b.length;++e){d.hasKey(b[e])||d.add(b[e],y[e],Array.isArray(t)?t[0]:t);var x=o.indexOf(b[e].name);-1!==x&&(u[x]=y[e])}a||C(S)}}return d.disposeMasks(),s?u:u[0]}function by(e,t){const n=new Set,r=[],a={};for(const l of t.names())n.add(l);const s=[],i=[];for(s.push(e);0<s.length;){var o=s[s.length-1];if(n.has(o.name))s.pop();else{var u=i[i.length-1]===s.length-1;if(0===o.inputs.length||u)s.pop(),r.push(o),n.add(o.name),u&&i.pop();else{i.push(s.length-1);for(const c of o.inputs)null==a[c.name]&&(a[c.name]=new Set),a[c.name].add(o.name),n.has(c.name)||s.push(c)}}}return{sorted:r,recipientMap:a}}class xy extends Eg{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name&&(y=this.getClassName().toLowerCase(),this.name=fg(y)),this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],qf(this.inputs).length!==this.inputs.length)throw new H("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map(e=>e.name));qf(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map(e=>e.name)),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const N of this.outputs){var M=N.sourceLayer,L=N.nodeIndex,z=N.tensorIndex;this.outputLayers.push(M),this.outputLayersNodeIndices.push(L),this.outputLayersTensorIndices.push(z)}for(const I of this.inputs){var P=I.sourceLayer,e=I.nodeIndex,n=I.tensorIndex;Lf(0===e,"input layer has >1 nodes"),Lf(0===n,"input layer has >1 tensors"),this.inputLayers.push(P),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const S=this.inputLayers[e];if(!(S instanceof _g))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+`Received inputs: ${t.inputs}. `+`Input ${e} (0-based) originates `+`from layer type ${S.getClassName()}.`);this.inputNames.push(S.name),this.feedInputShapes.push(S.batchInputShape),this.feedInputNames.push(S.name)}for(const T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const r={},a={},s={},i={},l={},c=[],h=(e,t,n,r,a,s)=>{null!=r&&null!=a&&null!=s||(r=e.sourceLayer,a=e.nodeIndex,s=e.tensorIndex);var i=r.inboundNodes[a];if(-1!==n.indexOf(i))throw new Df(`The tensor ${e.name} at layer "${r.name}" `+"is part of a cycle.");if(-1===t.indexOf(i)){this.containerNodes.add(xy.nodeKey(r,a)),r.id in l||(l[r.id]=Object.keys(l).length),-1===n.indexOf(i)&&n.push(i);var o=i.inboundLayers.length;for(let e=0;e<o;e++){var u=i.inputTensors[e];const r=i.inboundLayers[e],a=i.nodeIndices[e],s=i.tensorIndices[e];h(u,t,n,r,a,s)}for(t.push(i);0<=n.indexOf(i);)n.splice(n.indexOf(i),1);c.push(i)}};var B=[],W=[];for(const C of this.outputs)h(C,B,W);for(const E of c.slice().reverse()){(a[E.id]=E).id in r||(r[E.id]=0);var o=r[E.id],V=null==s[E.outboundLayer.id]?0:s[E.outboundLayer.id],o=Math.max(o,V);s[E.outboundLayer.id]=o,i[E.outboundLayer.id]=E.outboundLayer,r[E.id]=o;for(let e=0;e<E.inboundLayers.length;e++){var u=E.inboundLayers[e],p=E.nodeIndices[e],u=u.inboundNodes[p],p=null==r[u.id]?0:r[u.id];r[u.id]=Math.max(o+1,p),a[u.id]=u}}const d={};for(const _ in r){var f=r[_];f in d||(d[f]=[]),d[f].push(a[_])}const m={};for(const A in s){var g=s[A];g in m||(m[g]=[]),m[g].push(i[A])}var y=Object.keys(m).map(e=>parseInt(e,10)).sort(Hf);this.layers=[];for(const U of y){const $=m[U];$.sort((e,t)=>{e=l[e.id],t=l[t.id];return e<t?-1:t<e?1:0});for(const R of $)R instanceof xy&&this.internalContainerRefs.push(R),this.layers.push(R)}this.layersByDepth=m,y=Object.keys(d).map(e=>parseInt(e,10)).sort(Hf);const v=this.inputs.slice(),b=[];for(const G of y)for(const F of d[G]){var x=F.outboundLayer;if(null!=x){for(const D of F.inputTensors)if(-1===v.indexOf(D))throw new Df("Graph disconnected: cannot obtain value for tensor "+D+` at layer "${x.name}". `+"The following previous layers were accessed without issue: "+b);for(const j of F.outputTensors)v.push(j);b.push(x.name)}}this.nodesByDepth=d;const w=this.layers.map(e=>e.name);for(const O of w){var k=w.filter(e=>e===O).length;if(1!==k)throw new Df(`The name "${O}" is used ${k} times `+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(w))}this.outboundNodes=[],this.inboundNodes=[],new Tg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const n of this.internalContainerRefs)e.numDisposedVariables+=n.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(0<this._trainableWeights.length)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(this.trainable)return e;{const n=[];for(const r of this.layers)n.push(...r.trainableWeights);return n.concat(e)}}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,n=!0){const r={};let e=0;for(const s of this.layers)for(const i of s.weights){if(null!=r[i.originalName])throw new H("Duplicate weight name: "+i.originalName);r[i.originalName]=i,e++}const a=[];for(const o in t){let e=o;if(null==r[o]){const u=o.split("/"),l=u.slice(0,-2).concat([u[u.length-1]]);e=l.join("/")}if(null!=r[e])a.push([r[e],t[o]]);else if(n)throw new H("Provided weight data has no target variable: "+o);delete r[e]}if(n){const c=[];for(const h in r)c.push(h);if(0<c.length)throw new H(`${c.length} of ${e} weights are not set: `+c)}kg(a)}updatedConfig(){var e=this.getConfig();const t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+fy,t.backend="TensorFlow.js",t}toJSON(e,t=!0){var n=function t(n,r){if(null==n)return null;if("string"==typeof n)return Wf(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const o=[];var a=n.length;for(let e=0;e<a;++e){var s=n[e];py(r,e,s)?o.push(s):o.push(t(s,r))}return o}{const u={};for(const l of Object.keys(n)){var e=n[l],i=Wf(l);"name"!==l&&"className"!==l||"string"!=typeof e?u[i]=t(e,l):u[i]=e}return u}}(this.updatedConfig());return t?JSON.stringify(n):n}call(n,e){return O(()=>{n=Bf(n);const t=new my;for(let e=0;e<this.inputs.length;++e)t.add(this.inputs[e],n[e]);return vy(this.outputs,t,e)})}computeMask(t,n){return O(()=>{t=Bf(t);let e;return e=null==n?Mf(null,t.length):Bf(n),this.runInternalGraph(t,e)[1]})}computeOutputShape(t){const n=gg(t);if(n.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${t}: `+`model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let e=0;e<n.length;e++){var a=this.inputLayers[e];const t=n[e];a=a.name+"_0_0";r[a]=t}t=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Hf);if(1<t.length)for(const e of t)for(const g of this.nodesByDepth[e]){const y=g.outboundLayer;if(-1===this.inputLayers.map(e=>e.id).indexOf(y.id)){const n=[];for(let e=0;e<g.inboundLayers.length;e++){var s=g.inboundLayers[e],i=g.nodeIndices[e],o=g.tensorIndices[e],s=s.name+`_${i}_`+o;const t=r[s];n.push(t)}const c=gg(y.computeOutputShape(Pf(n)));var u=y.inboundNodes.indexOf(g);for(let e=0;e<c.length;e++){var l=y.name+`_${u}_`+e;r[l]=c[e]}}}const c=[],h=[];for(let e=0;e<this.outputLayers.length;e++){var p=this.outputLayers[e],d=this.outputLayersNodeIndices[e],f=this.outputLayersTensorIndices[e],p=p.name+`_${d}_`+f;h.push(p)}for(let e=0;e<h.length;e++){var m=h[e];Lf(m in r),c.push(r[m])}return Pf(c)}runInternalGraph(t,n){null==n&&(n=Mf(null,t.length));const s={};for(let e=0;e<this.inputs.length;++e){var r=this.inputs[e],a=t[e],i=n[e];s[r.id]=[a,i]}for(const y of Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Hf))for(const v of this.nodesByDepth[y]){const b=v.outboundLayer;var o,u=v.inputTensors,l=v.outputTensors;const x=new Array;for(const w of u)w.id in s&&x.push(s[w.id]);if(x.length===u.length){let e={},t,n,r,a;if(null!=v.callArgs&&(e=v.callArgs),1===x.length?([u,o]=x[0],null==e.mask&&(e.mask=o),r=Bf(b.call(u,e)),a=Bf(b.computeMask(u,o)),t=[u],n=[o]):(t=x.map(e=>e[0]),n=x.map(e=>e[1]),null==e.mask&&(e.mask=n),r=Bf(b.call(t,e)),a=Bf(b.computeMask(t,n))),b.activityRegularizer)throw new _("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<l.length;++e){var c=l[e],h=r[e],p=a[e];s[c.id]=[h,p]}}}const e=[],d=[],f=[];for(const k of this.outputs){Lf(k.id in s,`Could not compute output ${k.name} : `+k.id);var[m,g]=s[k.id];f.push(m.shape),e.push(m),d.push(g)}return[e,d,f]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof xy?1:0;for(let e=0;e<a.inboundNodes.length;e++){var r=xy.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only `+`has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new H("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new H("No such layer: "+e)}calculateLosses(){return O(()=>{const t=[];for(const r of this.layers)for(let e=0;e<r.inboundNodes.length;++e){var n=xy.nodeKey(r,e);this.containerNodes.has(n)&&t.push(...r.calculateLosses())}return t})}getConfig(){const e={name:this.name};var r=this.buildNodeConversionMap(this.layers);const t=[];for(const g of this.layers){var n=g.getClassName(),a=g.getConfig();const y=[];for(let e=0;e<g.inboundNodes.length;e++){var s=g.inboundNodes[e],i=xy.nodeKey(g,e);let n={};if(this.containerNodes.has(i)){if(s.callArgs)try{JSON.stringify(s.callArgs),n=s.callArgs}catch(e){console.warn(`Layer ${g.name} was passed `+"non-serializable keyword arguments: "+s.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),n={}}if(0<s.inboundLayers.length){const b=[];for(let t=0;t<s.inboundLayers.length;t++){var o=s.inboundLayers[t],u=s.nodeIndices[t],l=s.tensorIndices[t];let e=r[xy.nodeKey(o,u)];null==e&&(e=0),b.push([o.name,e,l,n])}y.push(b)}}}const v={};v.name=g.name,v.className=n,v.config=a,v.inboundNodes=y,t.push(v)}e.layers=t;const c=[];for(let t=0;t<this.inputLayers.length;t++){var h=this.inputLayers[t],p=this.inputLayersNodeIndices[t],p=xy.nodeKey(h,p);if(this.containerNodes.has(p)){let e=r[p];null!==e&&void 0!==e||(e=0);p=this.inputLayersTensorIndices[t];c.push([h.name,e,p])}}e.inputLayers=c;const d=[];for(let t=0;t<this.outputLayers.length;t++){var f=this.outputLayers[t],m=this.outputLayersNodeIndices[t],m=xy.nodeKey(f,m);if(this.containerNodes.has(m)){let e=r[m];null!==e&&void 0!==e||(e=0);m=this.outputLayersTensorIndices[t];d.push([f.name,e,m])}}return e.outputLayers=d,e}static fromConfig(e,a,t=0,s=!1){const u={},n={};function l(e,t){e.name in n?n[e.name].push(t):n[e.name]=[t]}var r=a.name,i=a.layers;for(const b of i)!function(e){var t=e.name;const n=Wg(e,null!=a.customObjects?a.customObjects:{}),r=(n.setFastWeightInitDuringBuild(s),u[t]=n,e.inboundNodes);r.forEach(e=>{if(!(e instanceof Array))throw new H("Corrupted configuration, expected array for nodeData: "+e);l(n,e)})}(b);for(;!function(e){if(null==e)throw new H("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return;return 1}(n);)for(const x of i){var o=u[x.name];if(o.name in n){var c=n[o.name];delete n[o.name];for(const w of c)!function(e,t){const n=[];let r;for(const o of t){var a=o[0],s=o[1],i=o[2];if(r=null==o[3]?{}:o[3],!(a in u))return l(e,t);a=u[a];if(a.inboundNodes.length<=s)return l(e,t);a=a.inboundNodes[s];n.push(a.outputTensors[i])}0<n.length&&e.apply(Pf(n),r)}(o,w)}}const h=[],p=[];for(const k of a.inputLayers){var d=k[0],f=k[1],m=k[2],d=(Lf(d in u),u[d]),d=d.inboundNodes[f].outputTensors;h.push(d[m])}for(const N of a.outputLayers){var g=N[0],y=N[1],v=N[2],g=(Lf(g in u),u[g]),g=g.inboundNodes[y].outputTensors;p.push(g[v])}return new e({inputs:h,outputs:p,name:r})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){O(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function wy(e,t){var n=e,e=t,t="classWeight",r=e.length;if(null==n||Array.isArray(n)&&0===n.length)return e.map(e=>null);if(1===r)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${t} is an array of ${n.length} `+`element(s), but the model has ${r} outputs. `+"Make sure a set of weights is provided for each model output.");return n}if("object"==typeof n&&0<Object.keys(n).length&&"object"==typeof n[Object.keys(n)[0]]){const a=[];return e.forEach(e=>{e in n?a.push(n[e]):a.push(null)}),a}throw new Error(`The model has multiple (${r}) outputs, `+`so ${t} must be either an array with `+r+` elements or an object with ${e} keys. `+`Provided ${t} not understood: `+JSON.stringify(n))}async function ky(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null==n)return null;{const a=O(()=>{if(1===e.shape.length)return ti(e);if(2!==e.shape.length)throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during `+"handling of class weights. The rank is expected to be 1 or 2.");if(1<e.shape[1])return bo(e,1);if(1===e.shape[1])return M(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) `+"during handling of class weights. The size is expected to be >= 1.")}),s=Array.from(await a.data()),i=(C(a),[]);return s.forEach(e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+`The class ${e} exists in the data but not in `+"classWeight");i.push(n[e])}),zc(i,"float32")}}function Ny(t,e){var n=e.xs,r=e.ys;z(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+e);const a=Iy("input",t.inputNames,n),s=Iy("output",t.outputNames,r),i=a[0].shape[0];z(a.length===t.inputs.length,()=>`LayersModel has ${t.inputs.length} inputs, but the dataset `+`provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(t.inputNames)+")"),z(s.length===t.outputs.length,()=>`LayersModel has ${t.outputs.length} outputs, but the dataset `+`provides ${s.length} outputs.  (Expected output keys: `+JSON.stringify(t.outputNames)+")");for(let e=0;e<a.length;e++)z(a[e].shape[0]===i,()=>"Batch size mismatch: input "+`${t.inputNames[e]} has ${a[e].shape[0]}; `+`expected  ${i} based on input ${t.inputNames[0]}.`);for(let e=0;e<s.length;e++)z(s[e].shape[0]===i,()=>"Batch size mismatch: output "+`${t.outputNames[e]} has ${s[e].shape[0]}; `+`expected  ${i} based on input ${t.inputNames[0]}.`);return{xs:a,ys:s}}function Iy(e,t,n){if(n instanceof v)return[n];if(Array.isArray(n))return z(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new H("The feature data generated by the dataset lacks the required "+`${e} key '${a}'.`);r.push(n[a])}return r}}async function Sy(i,o,u){var l=null!=u.batchesPerEpoch;if(z(null!=i.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),z(null!=u,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),z(null!=u.epochs&&0<u.epochs&&Number.isInteger(u.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+u.epochs),z(!l||0<u.batchesPerEpoch&&Number.isInteger(u.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+u.batchesPerEpoch),z(null==u.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),i.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");i.isTraining=!0;try{var t,c=null!=u.validationData;let n,r;c&&(Ty(u.validationData)?z(null==u.validationBatches||0<u.validationBatches&&Number.isInteger(u.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+u.validationBatches):(t=function(e){if(3===e.length)throw new _("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(u.validationData),n=t.xs,r=t.ys));const y=i.makeTrainFunction(),v=i.getDedupedMetricsNames();let e;e=c?v.slice().concat(v.map(e=>"val_"+e)):v.slice();const{callbackList:b,history:x}=Bg(zg(u.callbacks,u.yieldEvery),null==u.verbose?1:u.verbose,u.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(o,u),null,c,e);b.setModel(i),i.history=x,await b.onTrainBegin(),i.stopTraining_=!1;let a=null==u.initialEpoch?0:u.initialEpoch,s=await o.iterator();for(;a<u.epochs;){const w={};await b.onEpochBegin(a);let e=0,t=0;for(l||(s=await o.iterator());!l||e<u.batchesPerEpoch;){var h=await s.next();if(l&&h.done){console.warn("You provided `batchesPerEpoch` as "+u.batchesPerEpoch+", but your dataset iterator ran out of data after "+e+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+u.batchesPerEpoch*u.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=h.value){const{xs:k,ys:N}=Ny(i,h.value),I={},S=(I.batch=t,I.size=k[0].shape[0],await b.onBatchBegin(t,I),[]);if(null!=u.classWeight){var p=wy(u.classWeight,i.outputNames);for(let e=0;e<p.length;++e)S.push(await ky(N[e],null,p[e]))}var d=k.concat(N).concat(S),f=y(d);C(d);for(let e=0;e<v.length;++e){var m=v[e],g=f[e];uo(I[m]=g)}await b.onBatchEnd(t,I),Rg(I),t++,e++}if(l?e>=u.batchesPerEpoch:h.done){if(c){let t;t=Ty(u.validationData)?Bf(await i.evaluateDataset(u.validationData,{batches:u.validationBatches})):Bf(i.evaluate(n,r,{batchSize:null==u.validationBatchSize?32:u.validationBatchSize,verbose:0}));for(let e=0;e<i.metricsNames.length;++e)w["val_"+i.metricsNames[e]]=t[e]}break}if(i.stopTraining_)break}if(await b.onEpochEnd(a,w),a++,i.stopTraining_)break}return await b.onTrainEnd(),await i.history.syncData(),i.history}finally{i.isTraining=!1}}function Ty(e){return"function"==typeof e.iterator}function Cy(e){z(0<e&&Number.isInteger(e),()=>"batchSize is required to be a positive integer, but got "+e)}function Ey(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>Am(e,t,n-t)):Am(e,t,n-t)}function _y(e,t){return O(()=>null==e?null:Array.isArray(e)?e.map(e=>_y(e,t)):zm(e,"int32"===t.dtype?t:x(t,"int32")))}function Ay(e,t){const n=[];let r=0,a=null;for(;r<e;)(a=r+t)>=e&&(a=e),n.push([r,a]),r=a;return n}async function $y(a,s,i,o={}){if(a.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");a.isTraining=!0;let u,l,c,h,p,d,f,m,g;try{var y,v,b=null==o.batchSize?32:o.batchSize,x=(Cy(b),await a.standardizeUserData(s,i,o.sampleWeight,o.classWeight,!1,b));u=x[0],l=x[1],g=x[2];let e=!1,t;if(null!=o.validationData&&0<o.validationData.length){if(e=!0,2!==o.validationData.length)throw 3===o.validationData.length?new _("validationData including sample weights is not supported yet."):new H("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+o.validationData+" is invalid.");p=o.validationData[0],d=o.validationData[1];var w=await a.standardizeUserData(p,d,null,null,!0,b);f=w[0],m=w[1],t=f.concat(m)}else null!=o.validationSplit&&0<o.validationSplit&&o.validationSplit<1?(e=!0,y=Math.floor(u[0].shape[0]*(1-o.validationSplit)),v=u[0].shape[0],f=Ey(u,y,v),u=Ey(c=u,0,y),m=Ey(l,y,v),l=Ey(h=l,0,y),t=f.concat(m)):null!=o.validationSteps&&(e=!0);var k=u.concat(l).concat(g),N=(a.checkTrainableWeightsConsistency(),a.makeTrainFunction());const S=a.getDedupedMetricsNames();let n,r;r=e?(a.makeTestFunction(),n=a.testFunction,S.slice().concat(S.map(e=>"val_"+e))):(n=null,t=[],S.slice());var I=zg(o.callbacks,o.yieldEvery);return await async function(c,h,p,d,f,t,e,n,m,g,r,a,s,i,o){null==f&&(f=32),null==t&&(t=1),null==r&&(r=!0),null==s&&(s=0);let y=null!=m&&null!=g?!0:!1;if(null!=o&&(y=!0,null==i))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");var u=c.checkNumSamples(p,f,i,"steps_per_epoch");let l;null!=u&&(l=Cm(0,u));const{callbackList:v,history:b}=Bg(n,e=null==e?1:e,t,s,u,i,f,y,a);v.setModel(c),c.history=b,await v.onTrainBegin(),c.stopTraining_=!1;for(let e=s;e<t;++e){await v.onEpochBegin(e);const x={};if(null!=i)throw new _("stepsPerEpoch mode is not implemented yet.");{if("batch"===r)throw new _("batch shuffling is not implemneted yet");r&&D(l);const w=zc(l),k=Ay(u,f);for(let l=0;l<k.length;++l){const N={};if(await v.onBatchBegin(l,N),O(()=>{var e=k[l][0],t=k[l][1],n=Am(w,e,t-e),t=(N.batch=l,N.size=t-e,_y(p,n)),r=h(t);for(let e=0;e<d.length;++e){var a=d[e],s=r[e];uo(N[a]=s)}if(l===k.length-1&&y){var i=c.testLoop(m,g,f);for(let e=0;e<d.length;++e){var o=d[e],u=i[e];uo(u),x["val_"+o]=u}}}),await v.onBatchEnd(l,N),Rg(N),c.stopTraining_)break}w.dispose()}if(await v.onEpochEnd(e,x),c.stopTraining_)break}return await v.onTrainEnd(),await c.history.syncData(),c.history}(a,N,k,S,b,o.epochs,o.verbose,I,n,t,o.shuffle,r,o.initialEpoch,null,null)}finally{a.isTraining=!1,Fy(u,s),Fy(l,i),Fy(c,s),Fy(h,i),Fy(f,p),Fy(m,d),null!=g&&C(g)}}function Ry(t){const n=[];t instanceof v&&(t=[t]);for(let e=0;e<t.length;++e){var r=t[e];if(1===r.rank)n.push(_m(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");n.push(r)}}return n}function Fy(e,t){if(null!=e){const a=[];if(t instanceof v)a.push(t.id);else if(Array.isArray(t))t.forEach(e=>a.push(e.id));else if(null!=t)for(const i in t){var n=t[i];a.push(n.id)}const s=[];if(e instanceof v)-1===a.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===a.indexOf(e.id)&&s.push(e)});else if(null!=e)for(const o in e){var r=e[o];-1===a.indexOf(r.id)&&s.push(r)}s.forEach(e=>{e.isDisposed||e.dispose()})}}function Dy(e){return Array.isArray(e)}function Oy(e){return!(e instanceof v||Dy(e))}function My(t,e,n,r=!0,a=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(Dy(t)&&0<t.length)e=!0;else if(Oy(t)){for(const u in t)if(t.hasOwnProperty(u)){e=!0;break}}else e=!0;if(e)throw new H(`Error when checking model ${a} expected no data, `+"but got "+t)}return[]}if(null==t)return e.map(e=>null);let s;if(Oy(t)){s=[];for(const l of e){if(null==t[l])throw new H(`No data provided for "${l}". Need data for each key in: `+e);s.push(t[l])}}else if(Dy(t)){if(t.length!==e.length)throw new H(`Error when checking model ${a}: the Array of `+"Tensors that you are passing to your model is not the size the "+`model expected. Expected to see ${e.length} Tensor(s), but `+"instead got the following list of Tensor(s): "+t);s=t}else{if(1<e.length)throw new H(`The model ${a} expects ${e.length} Tensor(s), `+"but only received one Tensor. Found: Tensor with shape "+t.shape);s=[t]}if(s=Ry(s),null!=n)for(let t=0;t<e.length;++t)if(null!=n[t]){const c=s[t];if(c.shape.length!==n[t].length)throw new H(`Error when checking ${a}: expected ${e[t]} `+`to have ${n[t].length} dimension(s). but got array with `+"shape "+c.shape);for(let e=0;e<n[t].length;++e)if(0!==e||r){var i=c.shape[e],o=n[t][e];if(null!=o&&0<=o&&i!==o)throw new H(a+" expected a batch of elements where each "+`example has shape [${n[t].slice(1,n[t].length)}] `+`(i.e.,tensor shape [*,${n[t].slice(1,n[t].length)}])`+` but the ${a} received an input with `+c.shape[0]+` examples, each with shape [${c.shape.slice(1,c.shape.length)}]`+` (tensor shape [${c.shape}])`)}}return s}function Ly(e,n,r,a=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==n.length)throw new H(`Error when checking model ${s}: the Array of `+"Tensors that you are passing to your model is not the size the "+`the model expected. Expected to see ${n.length} Tensor(s),`+` but instead got ${e.length} Tensors(s).`);i=e}else{if(1<n.length)throw new H(`The model expects ${n.length} ${s} Tensors, `+"but only received one Tensor. Found: array with shape "+JSON.stringify(e.shape)+".");i=[e]}if(null!=r)for(let t=0;t<n.length;++t)if(null!=r[t]){var o=i[t];if(o.shape.length!==r[t].length)throw new H(`Error when checking ${s}: expected ${n[t]} `+`to have ${r[t].length} dimension(s), but got array with `+"shape "+JSON.stringify(o.shape));for(let e=0;e<r[t].length;++e)if(0!==e||a){var u=o.shape[e],l=r[t][e];if(null!=l&&l!==u)throw new H(`Error when checking ${s}: expected `+`${n[t]} to have shape ${JSON.stringify(r[t])} but `+`got array with shape ${JSON.stringify(o.shape)}.`)}}}class zy extends xy{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");cy(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>xp.adagrad(.01),Adadelta:()=>xp.adadelta(1,.95,$f()),Adam:()=>xp.adam(.001,.9,.999,$f()),Adamax:()=>xp.adamax(.002,.9,.999,$f(),0),RMSProp:()=>xp.rmsprop(.001,.9,0,$f()),SGD:()=>xp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof hp))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H("When passing an Array as loss, it should have one entry per "+`model output. The model has ${this.outputs.length} output(s), `+`but you passed loss=${e.loss}.`);const i=e.loss;t=i.map(e=>Jg(e))}else{const u=Jg(e.loss);this.outputs.forEach(e=>{t.push(u)})}else{e.loss=e.loss;for(const l in e.loss)if(-1===this.outputNames.indexOf(l))throw new H(`Unknown entry in loss dictionary: "${l}". `+"Only expected the following keys: "+this.outputNames);for(const c of this.outputNames)null==e.loss[c]&&console.warn(`Output "${c}" is missing from loss dictionary. We assume `+"this was done on purpose, and we will not be expecting data "+`to be passed to ${c} during training`),t.push(Jg(e.loss[c]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){var n=this.internalOutputShapes[e],r=this.outputNames[e];this.feedOutputNames.push(r),this.feedOutputShapes.push(n),this.feedLossFns.push(this.lossFunctions[e])}const a=[],s=(this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],bm("loss",()=>{for(let e=0;e<this.outputs.length;++e){var t;-1===a.indexOf(e)&&(t=this.lossFunctions[e],1<this.outputs.length&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss")))}}),function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map(e=>n);{const r=[];for(const a of t){let e=n.hasOwnProperty(a)?n[a]:[];Array.isArray(e)||(e=[e]),r.push(e)}return r}}(e.metrics,this.outputNames)),o=(e,t,n)=>{1<this.outputNames.length&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};bm("metric",()=>{for(let i=0;i<this.outputs.length;++i)-1===a.indexOf(i)&&(e=>{let t,n,r;for(const s of e){if("string"==typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){var a=this.internalOutputShapes[i];1===a[a.length-1]||this.lossFunctions[i]===Kg?-1!==["accuracy","acc"].indexOf(s)?n=Zg:-1!==["crossentropy","ce"].indexOf(s)&&(n=ry):this.lossFunctions[i]===qg?-1!==["accuracy","acc"].indexOf(s)?n=ay:-1!==["crossentropy","ce"].indexOf(s)&&(n=iy):-1!==["accuracy","acc"].indexOf(s)?n=Qg:-1!==["crossentropy","ce"].indexOf(s)&&(n=sy);let e;-1!==["accuracy","acc"].indexOf(s)?e="acc":-1!==["crossentropy","ce"].indexOf(s)&&(e="ce"),r=n,t=""+e}else{a=function(e){if("string"==typeof e&&e in oy)return oy[e];if("string"!=typeof e&&null!=e)return e;throw new H("Unknown metric "+e)}(s);r=a,t=""+uy(s)}let e;bm(t,()=>{e=r}),o(i,t,e)}})(s[i])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){var r=null==n.batchSize?32:n.batchSize;Cy(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{var s=a[0].concat(a[1]),i=(this.makeTestFunction(),this.testFunction);return Pf(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Fy(a[0],e),Fy(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(o,e,t){var n=null!=(t=t||{}).batches;const u=o.testFunction;let l=[];if(0<t.verbose)throw new _("Verbose mode is not implemented yet.");z(!n||0<t.batches&&Number.isInteger(t.batches),()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(t.batches));const r="function"==typeof e.next?e:await e.iterator();let c=0,h=0;for(;!n||h<t.batches;){const p=await r.next();if(l=O(()=>{if(p.value){const{xs:e,ys:r}=Ny(o,p.value),a=e.concat(r);var t=O(()=>u(a));if(C(a),0===h)for(let e=0;e<t.length;++e)l.push(P(0));const s=a[0].shape[0];for(let e=0;e<t.length;++e){const i=t[e];var n=l[e];l[e]=O(()=>E(l[e],w(s,i))),0<h&&C(n)}C(t),c+=s,++h}return l}),p.done){n&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+`batches (in this case, ${t.batches} batches). `+"You may need to use the repeat() function when building your dataset.");break}}for(let e=0;e<l.length;++e){var a=l[e];l[e]=y(l[e],c),C(a)}return Pf(l)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if((a=null)!=t)throw new H(`If ${r} is set, batchSize must be null or undefined.`+"Got batchSize = "+t)}else{if(null==e)throw new H("Either the input data should have a defined shape, or "+r+" shoud be specified.");a=(Array.isArray(e)?e[0]:e).shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new H("`outputs` is an empty Array, which is not allowed.");var n=Array.isArray(e),e=this.retrieveSymbolicTensors(n?e:[e]);const r=new my;if(t instanceof v&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new H(`The number of inputs provided (${t.length}) `+"does not match the number of inputs of this model "+`(${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)r.add(this.inputs[e],t[e])}else for(const s of this.inputs){var a=t[s.name];if(null==a)throw new H("No value is provided for the model's input "+s.name);r.add(s,a)}e=vy(e,r);return n?e:e[0]}retrieveSymbolicTensors(n){const t=Mf(null,n.length);let r=n.length;for(const e of this.layers){const s=Array.isArray(e.output)?e.output:[e.output],i=s.map(e=>e.name);for(let e=0;e<n.length;++e){var a=i.indexOf(n[e]);if(-1!==a&&(t[e]=s[a],r--),0===r)break}if(0===r)break}if(0<r){const o=[];throw t.forEach((e,t)=>{null==e&&o.push(n[t])}),new H("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(o))}return t}predictLoop(i,r=32,a=!1){return O(()=>{var e=this.checkNumSamples(i);if(a)throw new _("Verbose predictLoop() is not implemented yet.");const s=Ay(e,r),n=this.outputs.map(e=>[]);for(let a=0;a<s.length;++a){const t=O(()=>{var e=s[a][0],t=s[a][1],n=Ey(i,e,t);const r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});e=new my(r);return vy(this.outputs,e)});t.forEach((e,t)=>n[t].push(e))}return Pf(n.map(e=>Vo(e,0)))})}predict(e,t={}){var n=Ry(e);Ly(n,this.inputNames,this.feedInputShapes,!1);try{var r=null==t.batchSize?32:t.batchSize;return Cy(r),this.predictLoop(n,r)}finally{Fy(n,e)}}predictOnBatch(e){Ly(e,this.inputNames,this.feedInputShapes,!0);var t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=0,r){if(null==this.optimizer_)throw new Df("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const m=this.feedOutputShapes[e];this.feedLossFns[e]===qg?a.push(m.slice(0,m.length-1).concat([1])):a.push(m)}e=My(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=My(t,this.feedOutputNames,a,!1,"target");{var s=e,i=t;const g=qf(s.map(e=>e.shape[0])),y=(g.sort(),qf(i.map(e=>e.shape[0])));if(y.sort(),1<g.length)throw new H("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(s.map(e=>e.shape)));if(1<y.length)throw new H("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(i.map(e=>e.shape)));if(0<g.length&&0<y.length&&!ce(g,y))throw new H("Input Tensors should have the same number of samples as target "+`Tensors. Found ${g[0]} input sample(s) and ${y[0]} target `+"sample(s).")}{var o=t,u=this.feedLossFns,l=this.feedOutputShapes;const v=[Ug,Kg,Hg];for(let e=0;e<o.length;++e){const b=o[e];var c=u[e];const x=l[e];if(null!=c){if(c===Hg&&1===b.shape[b.shape.length-1])throw new H(`You are passing a target array of shape ${b.shape} while using `+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==v.indexOf(c)){var h=b.shape.slice(1),p=x.slice(1);for(let e=0;e<h.length;++e){var d=h[e],f=p[e];if(null!=f&&d!==f)throw new H(`A target Tensor with shape ${b.shape} was passed for an `+`output of shape ${x}, while using a loss function that `+"expects targets to have the same shape as the output.")}}}}}if(this.stateful&&null!=r&&0<r&&e[0].shape[0]%r!=0)throw new H("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+`${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){var[e,i]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let o=null;if(null!=r){var u=wy(r,this.outputNames);o=[];for(let e=0;e<u.length;++e)o.push(await ky(i[e],null,u[e]))}return[e,i,o]}testLoop(c,h,e,p=0,d){return O(()=>{var t=this.checkNumSamples(h,e,d,"steps");const n=[];if(0<p)throw new _("Verbose mode is not implemented yet.");if(null!=d)throw new _("steps mode in testLoop() is not implemented yet");var r=Ay(t,e),a=zc(Cm(0,t));for(let e=0;e<r.length;++e){var s=r[e][0],i=r[e][1],o=Am(a,s,i-s),o=_y(h,o),u=c(o);if(0===e)for(let e=0;e<u.length;++e)n.push(P(0));for(let e=0;e<u.length;++e){var l=u[e];n[e]=E(n[e],w(i-s,l))}}for(let e=0;e<n.length;++e)n[e]=y(n[e],t);return n})}getDedupedMetricsNames(){const n=this.metricsNames,r=[];for(let t=0;t<n.length;++t){var a=n[t];let e=a;1<zf(n,a)&&(a=zf(n.slice(0,t),a),e+="_"+a),r.push(e)}return r}makeTrainFunction(){return e=>{const l=[],c=e.slice(0,this.inputs.length),h=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),p=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),d=[];e=this.collectedTrainableWeights.map(e=>e.read());const t=this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:c[e]});var n,e=new my(t),r=vy(this.outputs,e,{training:!0});let a;for(let t=0;t<this.lossFunctions.length;++t){const o=this.lossFunctions[t];let e=o(h[t],r[t]);null!=p[t]&&(e=(s=e,n=p[t],w(s,n)));var s=Nl(e);l.push(s),a=0===t?e:E(a,e)}for(let t=0;t<this.metricsTensors.length;++t){let e;if(1<this.outputs.length&&t<this.outputs.length)e=l[t];else{const u=this.metricsTensors[t][0];var i=this.metricsTensors[t][1];e=Nl(u(h[i],r[i]))}uo(e),d.push(e)}return a=Nl(a),this.calculateLosses().forEach(e=>{a=E(a,e)}),a},!0,e);return[t].concat(d)}}makeTestFunction(){this.testFunction=h=>O(()=>{const t=[];let n;var r=h.slice(0,this.inputs.length),a=h.slice(this.inputs.length,this.inputs.length+this.outputs.length);const s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});var e=new my(s),i=vy(this.outputs,e);for(let e=0;e<this.lossFunctions.length;++e){const l=this.lossFunctions[e];var o=Nl(l(a[e],i[e]));n=0===e?o:E(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const c=this.metricsTensors[e][0];var u=this.metricsTensors[e][1],u=Nl(c(a[u],i[u]));t.push(u)}return t})}async fit(e,t,n={}){return $y(this,e,t,n)}async fitDataset(e,t){return Sy(this,e,t)}async trainOnBatch(e,t){var n=await this.standardizeUserData(e,t);const r=n[0];var a=n[1];const s=this.makeTrainFunction();a=s(r.concat(a));const i=[];for(const u of a){var o=await u.data();i.push(o[0])}return C(a),Fy(n[0],e),Fy(n[1],t),Pf(i)}getNamedWeights(e){const t=[];var n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();var t;return 0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned&&(t=oo().numTensors,this.optimizer_.dispose(),e.numDisposedVariables+=t-oo().numTensors),e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Wf(this.loss);else if(Array.isArray(this.loss)){for(const r of this.loss)if("string"!=typeof r)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>Wf(e))}else{var t=Object.keys(this.loss),n=(e={},this.loss);for(const a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Wf(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Wf(uy(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Wf(uy(e)));{const e={};for(const t in this.metrics)e[t]=Wf(uy(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");var t=Wg(dy(e.optimizer_config));let n;if("string"==typeof e.loss)n=Vf(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Vf(e));else if(null!=e.loss){n={};for(const a in e.loss)n[a]=Vf(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(e=>Vf(e));else if(null!=e.metrics){r={};for(const s in e.metrics)r[s]=Vf(e.metrics[s])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){var n=$s(e);if(0===n.length)throw new H(`Cannot find any save handlers for URL '${e}'`);if(1<n.length)throw new H(`Found more than one (${n.length}) save handlers for `+`URL '${e}'`);e=n[0]}if(null==e.save)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await ws(this.getNamedWeights(t));const a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+fy,convertedBy:null};return null!=t&&t.includeOptimizer&&null!=this.optimizer&&(a.trainingConfig=this.getTrainingConfig(),{data:n,specs:t}=await ws(await this.optimizer.getWeights(),"optimizer"),r.specs.push(...t),r.data=Ss([r.data,n])),null!=this.userDefinedMetadata&&(ly(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=r.data,a.weightSpecs=r.specs,e.save(a)}setUserDefinedMetadata(e){ly(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}zy.className="Model",r(zy);class Py extends zy{}async function By(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Rs(e,t);if(0===n.length)n.push(fi(e,t));else if(1<n.length)throw new H(`Found more than one (${n.length}) load handlers for `+`URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new H("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");e=await e.load();let r=e.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,s=null!=e.weightData&&null!=e.weightSpecs&&a,i=Wg(dy(r),t,s),o=e.trainingConfig;null!=o&&i.loadTrainingConfig(o);null!=e.userDefinedMetadata&&i.setUserDefinedMetadata(e.userDefinedMetadata);if(null!=e.weightData){if(null==e.weightSpecs)throw new H("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:l}=function(e,t){const n=ks(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(e.weightData,e.weightSpecs);i.loadWeights(u,a),null!=i.optimizer&&0<l.length&&await i.optimizer.setWeights(l),C(u),C(l.map(e=>e.tensor))}return i}(e,void 0,t)}Py.className="Functional",r(Py);class Wy extends zy{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:fg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some(e=>e<0))throw new H("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){var t=e instanceof Wy||e instanceof zy;let n;if(t){if(1!==(n=e).outputs.length)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");var r=Ag({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new H("A layer added to a Sequential model must not already be "+`connected somewhere else. LayersModel received layer ${e.name} `+`which has ${e.inboundNodes.length} pre-existing inbound `+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&0<r)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];var a=n.inboundNodes[r];if(0===a.inboundLayers.length)return a.inputTensors;{const i=[];for(let e=0;e<a.inboundLayers.length;e++){var s=a.inputTensors[e];const n=a.inboundLayers[e],r=a.nodeIndices[e];for(const o of t(s,n,r))-1===i.indexOf(o)&&i.push(o)}return i}}(this.outputs[0])}this.inboundNodes=[],new Tg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Mf(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");var e;this.layers.pop(),0===this.layers.length?(this.outputs=[],this.inboundNodes=[],this.outboundNodes=[]):(e=this.layers.length-1,this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape])}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(yg(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new zy({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(this.built)return this.model.evaluate(e,t,n);throw new Df("The model needs to be compiled before being used.")}async evaluateDataset(e,t){if(this.built)return this.model.evaluateDataset(e,t);throw new Df("The model needs to be compiled before being used.")}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(this.built)return this.model.fit(e,t,n);throw new Df("The model needs to be compiled before being used.")}async fitDataset(e,t){if(this.built)return this.model.fitDataset(e,t);throw new Df("The model needs to be compiled before being used.")}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n=0,r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new H("Legacy serialization format not supported yet.");a=t}else z(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Wy))throw new _("Sequential.fromConfig called on non-Sequential input: "+i);for(const o of a){const n=void 0,u=Wg(o,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),i.add(u)}return i}set stopTraining(e){if(null==this.model)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Vy(e){return Ag(e)}Wy.className="Sequential",r(Wy);class Uy extends Ji{getConfig(){return{}}}class Gy extends Uy{apply(e,t=1){var[e,t=1]=[e,t];if(1!==t)throw new _(`Support for alpha values other than 1 (${t}) is not implemented `+"yet.");return _u(e)}}Gy.className="elu",r(Gy);class jy extends Uy{apply(e){return mc(e)}}jy.className="selu",r(jy);class Hy extends Uy{apply(e){return cc(e)}}Hy.className="relu",r(Hy);class qy extends Uy{apply(e){return O(()=>Cl(6,cc(e)))}}qy.className="relu6",r(qy);class Ky extends Uy{apply(e){return e}}Ky.className="linear",r(Ky);class Xy extends Uy{apply(e){return Uo(e)}}Xy.className="sigmoid",r(Xy);class Yy extends Uy{apply(e){return t=e,O(()=>{var e=E(.5,w(.2,t));return nu(e,0,1)});var t}}Yy.className="hardSigmoid",r(Yy);class Jy extends Uy{apply(e){return nl(e)}}Jy.className="softplus",r(Jy);class Zy extends Uy{apply(e){return t=e,O(()=>y(t,E(po(t),1)));var t}}Zy.className="softsign",r(Zy);class Qy extends Uy{apply(e){return jo(e)}}Qy.className="tanh",r(Qy);class ev extends Uy{apply(e,t=-1){return Sc(e,t)}}ev.className="softmax",r(ev);class tv extends Uy{apply(e,t=-1){return sl(e,t)}}tv.className="logSoftmax",r(tv);class nv extends Uy{apply(e,t=1){return O(()=>w(Uo(w(e,t)),e))}}nv.className="swish",r(nv);class rv extends Uy{apply(e){return O(()=>w(e,jo(nl(e))))}}function av(e){return e.getClassName()}function sv(e,t={}){return jf(e,Zi.getMap().classNameMap,t,"activation")}function iv(e){if(null==e){const t={className:"linear",config:{}};return sv(t)}if("string"!=typeof e)return e instanceof Uy?e:sv(e);{const n={};return n.className=e,n.config={},sv(n)}}function ov(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}rv.className="mish",r(rv);class uv extends Ji{}class lv extends uv{constructor(e){super(),ov(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return O(()=>{let e=Il([1]);return this.hasL1&&(e=E(e,b(w(this.l1,po(t))))),this.hasL2&&(e=E(e,b(w(this.l2,Pm(t))))),M(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}lv.className="L1L2",r(lv);const cv={l1l2:"L1L2"};function hv(e){return Gf(e)}function pv(e,t={}){return jf(e,Zi.getMap().classNameMap,t,"regularizer")}function dv(e){return null==e?null:"string"==typeof e?pv({className:e in cv?cv[e]:e,config:{}}):e instanceof uv?e:pv(e)}class fv extends Eg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=A(e);let n=cc(e);return n=null!=this.maxValue?nu(n,0,this.maxValue):n}computeOutputShape(e){return e}getConfig(){var e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}fv.className="ReLU",r(fv);class mv extends Eg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,this.alpha=null==(e=null==e?{}:e).alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){e=A(e);return ju(e,this.alpha)}computeOutputShape(e){return e}getConfig(){var e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}mv.className="LeakyReLU",r(mv);class gv extends Eg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=hg(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=dv(e.alphaRegularizer),this.alphaConstraint=om(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new H("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(t){const e=(t=yg(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new Ng({ndim:t.length,axes:n})],this.built=!0}call(e,t){return e=A(e),jl(e,this.alpha.read())}getConfig(){var e={alphaInitializer:cg(this.alphaInitializer),alphaRegularizer:hv(this.alphaRegularizer),alphaConstraint:sm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}gv.className="PReLU",r(gv);class yv extends Eg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null!=(e=null==e?{}:e).alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new _(`Non-default alpha value (${e.alpha}) is not supported by the `+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){e=A(e);return _u(e)}computeOutputShape(e){return e}getConfig(){var e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}yv.className="ELU",r(yv);class vv extends Eg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,this.theta=null==(e=null==e?{}:e).theta?this.DEFAULT_THETA:e.theta}call(e,t){e=A(e);return w(e,x(Pu(e,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){var e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}vv.className="ThresholdedReLU",r(vv);class bv extends Eg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new ev).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){e=A(e);return this.softmax(e,this.axis)}computeOutputShape(e){return e}getConfig(){var e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function xv(t,n,r){if("number"==typeof t)return Mf(t,n);if(t.length!==n)throw new H(`The ${r} argument must be an integer or tuple of ${n} integers.`+` Received: ${t.length} elements.`);for(let e=0;e<n;++e){var a=t[e];if(a!==parseInt(a.toString(),10))throw new H(`The ${r} argument must be an integer or tuple of `+n+` integers. Received: ${JSON.stringify(t)} including a`+" non-integer number "+a)}return t}function wv(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function kv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Tm([n-t,0]);else{if("same"!==r)throw new H(`Unsupport padding mode: ${r}.`);e*=t}return e}function Nv(e,t){return O(()=>(fm(t),"channelsFirst"===t?vi(e,[0,2,3,1]):e))}function Iv(e,t){return O(()=>(fm(t),"channelsFirst"===t?vi(e,[0,2,3,4,1]):e))}function Sv(t,n,r,a=[1,1],s="valid",i,o,u=null){return O(()=>{if(fm(i=null==i?Rf():i),3!==t.rank&&4!==t.rank)throw new H("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+`but received ${t.rank}.`);if(3!==n.rank&&4!==n.rank)throw new H("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+`but received ${t.rank}.`);let e=Nv(t,i);if("causal"===s)throw new _("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return e=lh({x:e,filter:n,strides:a,pad:"same"===s?"same":"valid",dilations:o,dataFormat:"NHWC",bias:r,activation:u}),e="channelsFirst"===i?vi(e,[0,3,1,2]):e})}bv.className="Softmax",r(bv);class Tv extends Eg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Tv.verifyArgs(t),this.rank=e,Yf(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new _(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is `+"not implemented yet.");if(this.kernelSize=xv(t.kernelSize,e,"kernelSize"),this.strides=xv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,mm(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,fm(this.dataFormat),this.activation=iv(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=hg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=om(t.biasConstraint),this.biasRegularizer=dv(t.biasRegularizer),this.activityRegularizer=dv(t.activityRegularizer),this.dilationRate=xv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new H("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new H("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new H("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(Lf("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Xf(e.kernelSize,"number",1,3))throw new H("BaseConv expects config.kernelSize to be number or number[] with "+`length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){var e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:av(this.activation),useBias:this.useBias,biasInitializer:cg(this.biasInitializer),biasRegularizer:hv(this.biasRegularizer),activityRegularizer:hv(this.activityRegularizer),biasConstraint:sm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cv extends Tv{constructor(e,t){super(e,t),this.kernel=null,Cv.verifyArgs(t),this.filters=t.filters,Yf(this.filters,"filters"),this.kernelInitializer=hg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=om(t.kernelConstraint),this.kernelRegularizer=dv(t.kernelRegularizer)}build(e){e=yg(e);var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new H("The channel dimension of the input should be defined. Found "+e[t]);var e=e[t],n=this.kernelSize.concat([e,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:e}}],this.built=!0}call(y,e){return O(()=>{y=A(y);let e;var t,n,r,a,s,i,o,u,l,c,h,p,d,f,m=null==this.bias?null:this.bias.read(),g=Jf(this.activation.getClassName());if(null!=g&&2===this.rank)e=Sv(y,this.kernel.read(),m,this.strides,this.padding,this.dataFormat,this.dilationRate,g);else{if(1===this.rank)e=([u,l,c,h=1,p="valid",d,f=1]=[y,this.kernel.read(),m,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]],O(()=>{if(fm(d=null==d?Rf():d),3!==u.shape.length)throw new H("The input of a conv1dWithBias operation should be 3, but is "+u.shape.length+" instead.");if(3!==l.shape.length)throw new H("The kernel for a conv1dWithBias operation should be 3, but is "+l.shape.length+" instead");if(null!=c&&1!==c.shape.length)throw new H("The bias for a conv1dWithBias operation should be 1, but is "+l.shape.length+" instead");if("channelsFirst"===d&&(u=vi(u,[0,2,1])),"causal"===p)throw new _("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let e=uu(u,l,h,"same"===p?"same":"valid","NWC",f);return e=null!=c?Wm(e,c):e}));else if(2===this.rank)e=Sv(y,this.kernel.read(),m,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new _("convolutions greater than 3D are not implemented yet.");e=([t,n,r,a=[1,1,1],s="valid",i,o]=[y,this.kernel.read(),m,this.strides,this.padding,this.dataFormat,this.dilationRate],O(()=>{if(fm(i=null==i?Rf():i),4!==t.rank&&5!==t.rank)throw new H("conv3dWithBias expects input to be of rank 4 or 5, but received "+t.rank+".");if(4!==n.rank&&5!==n.rank)throw new H("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+t.rank+".");let e=Iv(t,i);if("causal"===s)throw new _("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return e=hu(e,n,a,"same"===s?"same":"valid","NDHWC",o),null!=r&&(e=Wm(e,r)),e="channelsFirst"===i?vi(e,[0,4,1,2,3]):e}))}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(e){e=yg(e);const t=[];var n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){var r=wv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t)).push(this.filters):(a.push(this.filters),a=a.concat(t)),a}getConfig(){var e={filters:this.filters,kernelInitializer:cg(this.kernelInitializer),kernelRegularizer:hv(this.kernelRegularizer),kernelConstraint:sm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new H("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class Ev extends Cv{constructor(e){super(2,e),Ev.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xf(e.kernelSize,"number",1,2))throw new H("Conv2D expects config.kernelSize to be number or number[] with "+`length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ev.className="Conv2D",r(Ev);class _v extends Cv{constructor(e){super(3,e),_v.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new H("Conv3D expects config.kernelSize to be number or"+` [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}_v.className="Conv3D",r(_v);class Av extends Ev{constructor(e){if(super(e),this.inputSpec=[new Ng({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new H("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=yg(e)).length)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new H("The channel dimension of the inputs should be defined. Found `None`.");var e=e[t],n=this.kernelSize.concat([this.filters,e]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ng({ndim:4,axes:{[t]:e}})],this.built=!0}call(h,e){return O(()=>{let e=A(h);if(4!==e.shape.length)throw new H("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);var t=e.shape,n=t[0];let r,a;a="channelsFirst"===this.dataFormat?(r=2,3):(r=1,2);var s=t[r],t=t[a],i=this.kernelSize[0],o=this.kernelSize[1],u=this.strides[0],l=this.strides[1],n=[n,kv(s,u,i,this.padding),kv(t,l,o,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=vi(e,[0,2,3,1]));let c=cu(e,this.kernel.read(),n,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=vi(c,[0,3,1,2])),null!=this.bias&&(c=Wm(c,this.bias.read(),this.dataFormat)),c=null!=this.activation?this.activation.apply(c):c})}computeOutputShape(e){const t=(e=yg(e)).slice();let n,r,a;a="channelsFirst"===this.dataFormat?(n=1,r=2,3):(n=3,r=1,2);var e=this.kernelSize[0],s=this.kernelSize[1],i=this.strides[0],o=this.strides[1];return t[n]=this.filters,t[r]=kv(t[r],i,e,this.padding),t[a]=kv(t[a],o,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Av.className="Conv2DTranspose",r(Av);class $v extends _v{constructor(e){if(super(e),this.inputSpec=[new Ng({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new H("Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(5!==(e=yg(e)).length)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new H("The channel dimension of the inputs should be defined. Found `None`.");var e=e[t],n=this.kernelSize.concat([this.filters,e]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ng({ndim:5,axes:{[t]:e}})],this.built=!0}call(m,e){return O(()=>{let e=A(m);if(5!==e.shape.length)throw new H("Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+e.shape.length);var t=e.shape,n=t[0];let r,a,s;a="channelsFirst"===this.dataFormat?(s=2,r=3,4):(s=1,r=2,3);var i=t[s],o=t[r],t=t[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],h=this.strides[0],p=this.strides[1],d=this.strides[2],n=[n,kv(i,h,u,this.padding),kv(o,p,l,this.padding),kv(t,d,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=vi(e,[0,2,3,4,1]));let f=du(e,this.kernel.read(),n,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=vi(f,[0,4,1,2,3])),null!==this.bias&&(f=Wm(f,this.bias.read(),this.dataFormat)),f=null!==this.activation?this.activation.apply(f):f})}computeOutputShape(e){const t=(e=yg(e)).slice();let n,r,a,s;s="channelsFirst"===this.dataFormat?(n=1,r=2,a=3,4):(n=4,r=1,a=2,3);var e=this.kernelSize[0],i=this.kernelSize[1],o=this.kernelSize[2],u=this.strides[0],l=this.strides[1],c=this.strides[2];return t[n]=this.filters,t[r]=kv(t[r],u,e,this.padding),t[a]=kv(t[a],l,i,this.padding),t[s]=kv(t[s],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}$v.className="Conv3DTranspose",r($v);class Rv extends Cv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,(this.pointwiseKernel=null)==t.filters)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new H(`SeparableConv${this.rank}D supports only padding modes: `+"'same' and 'valid', but received "+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=hg(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=dv(t.depthwiseRegularizer),this.depthwiseConstraint=om(t.depthwiseConstraint),this.pointwiseInitializer=hg(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=dv(t.pointwiseRegularizer),this.pointwiseConstraint=om(t.pointwiseConstraint)}build(e){if((e=yg(e)).length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new H("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));var e=e[t],n=this.kernelSize.concat([e,this.depthMultiplier]);const r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(e*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new Ng({ndim:this.rank+2,axes:{[t]:e}})],this.built=!0}call(t,e){return O(()=>{t=A(t);let e;if(1===this.rank)throw new _("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=vi(t,[0,2,3,1])),e=gc(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=Wm(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e="channelsFirst"===this.dataFormat?vi(e,[0,3,1,2]):e})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=cg(this.depthwiseInitializer),e.pointwiseInitializer=cg(this.pointwiseInitializer),e.depthwiseRegularizer=hv(this.depthwiseRegularizer),e.pointwiseRegularizer=hv(this.pointwiseRegularizer),e.depthwiseConstraint=sm(this.depthwiseConstraint),e.pointwiseConstraint=sm(this.pointwiseConstraint),e}}Rv.className="SeparableConv";class Fv extends Rv{constructor(e){super(2,e)}}Fv.className="SeparableConv2D",r(Fv);class Dv extends Cv{constructor(e){super(1,e),Dv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xf(e.kernelSize,"number",1,1))throw new H("Conv1D expects config.kernelSize to be number or number[] with "+`length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Dv.className="Conv1D",r(Dv);class Ov extends Eg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(t,e){return O(()=>{var e;return t=A(t),"channelsLast"===this.dataFormat?(e=Rm(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2),Rm(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)):(e=Rm(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3),Rm(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4))})}getConfig(){var e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ov.className="Cropping2D",r(Ov);class Mv extends Eg{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fm(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,e=this.interpolation,Kf(lm,"InterpolationFormat",e)}computeOutputShape(e){var t,n;return"channelsFirst"===this.dataFormat?(t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3],[e[0],e[1],t,n]):(t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2],[e[0],t,n,e[3]])}call(a,e){return O(()=>{let e=A(a);var t,n,r=e.shape;return"channelsFirst"===this.dataFormat?(e=vi(e,[0,2,3,1]),n=this.size[0]*r[2],t=this.size[1]*r[3],n="nearest"===this.interpolation?op.resizeNearestNeighbor(e,[n,t]):op.resizeBilinear(e,[n,t]),vi(n,[0,3,1,2])):(t=this.size[0]*r[1],n=this.size[1]*r[2],"nearest"===this.interpolation?op.resizeNearestNeighbor(e,[t,n]):op.resizeBilinear(e,[t,n]))})}getConfig(){var e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Mv.className="UpSampling2D",r(Mv);class Lv extends Tv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=hg(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=om(e.depthwiseConstraint),this.depthwiseRegularizer=dv(e.depthwiseRegularizer)}build(e){if((e=yg(e)).length<4)throw new H("Inputs to DepthwiseConv2D should have rank 4. "+`Received input shape: ${JSON.stringify(e)}.`);var t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new H("The channel dimension of the inputs to DepthwiseConv2D should "+`be defined, but is not (${e[t]}).`);e=e[t],t=[this.kernelSize[0],this.kernelSize[1],e,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",t,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[e*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(o,e){return O(()=>{o=A(o);[t,n,r=[1,1],a="valid",s,i]=[o,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null];let e=O(()=>{fm(s=null==s?Rf():s);let e=Nv(t,s);if(4!==t.rank)throw new H("Input for depthwiseConv2d is required to be 4-D, but is instead "+t.rank+"-D");if(4!==n.rank)throw new H("depthwiseKernel is required to be 4-D, but is instead "+n.rank+"-D");return e=xu(e,n,r,"same"===a?"same":"valid","NHWC",i),e="channelsFirst"===s?vi(e,[0,3,1,2]):e});var t,n,r,a,s,i;return this.useBias&&(e=Wm(e,this.bias.read(),this.dataFormat)),e=null!=this.activation?this.activation.apply(e):e})}computeOutputShape(e){e=yg(e);var t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,t=wv(t,this.kernelSize[0],this.padding,this.strides[0]),n=wv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,t,n]:[e[0],t,n,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=cg(this.depthwiseInitializer),e.depthwiseRegularizer=hv(this.depthwiseRegularizer),e.depthwiseConstraint=sm(this.depthwiseRegularizer),e}}function zv(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new H("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),1<e.length&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Pv(p,d,f,m=!1,g,y,v=!1,b=!1){return O(()=>{var e=d.shape.length;if(e<3)throw new H(`Input should be at least 3D, but is ${e}D.`);var t=[1,0].concat(Cm(2,e));if(d=vi(d,t),null!=y)throw new _("The rnn() functoin of the deeplearn.js backend does not support constants yet.");v&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=g&&((g=x(x(g,"bool"),"float32")).rank===e-1&&(g=Ru(g,-1)),g=vi(g,t)),m&&(d=pc(d,0),null!=g&&(g=pc(g,0)));const n=[];let r,a=f;var s,i=d.shape[0],o=jc(d);let u;null!=g&&(u=jc(g));for(let e=0;e<i;++e){const c=o[e],h=O(()=>p(c,a));a=null==g?(r=h[0],h[1]):(s=O(()=>{const n=u[e],r=k(Ol(n),n);return{output:E(w(h[0],n),w(a[0],r)),newStates:a.map((e,t)=>E(w(h[1][t],n),w(e,r)))}}),r=s.output,s.newStates),b&&n.push(r)}let l;return b&&(l=Dc(n,1)),[r,l,a]})}Lv.className="DepthwiseConv2D",r(Lv);class Bv extends Eg{constructor(e){super(e);let t;if(null==e.cell)throw new H("cell property is missing for the constructor of RNN.");if(null==(t=Array.isArray(e.cell)?new Kv({cells:e.cell}):e.cell).stateSize)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ng({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Cm(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){mg(e)&&(e=e[0]);let t=this.cell.stateSize;var n=(t=Array.isArray(t)?t:[t])[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const a=[];for(const s of t)a.push([e[0],s]);return[r].concat(a)}return r}computeMask(e,n){return O(()=>{Array.isArray(n)&&(n=n[0]);const e=this.returnSequences?n:null;var t;return this.returnState?(t=this.states.map(e=>null),[e].concat(t)):e})}get states(){if(null!=this.states_)return this.states_;{var t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;const n=[];for(let e=0;e<t;++e)n.push(null);return n}}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new _("Constants support is not implemented in RNN yet.");mg(e)&&(e=e[0]);var t=this.stateful?e[0]:null,n=e.slice(2),t=(this.inputSpec[0]=new Ng({shape:[t,null,...n]}),[e[0]].concat(e.slice(2)));this.cell.build(t);let r;if(r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ce(this.stateSpec.map(e=>e.shape[e.shape.length-1]),r))throw new H("An initialState was passed that is not compatible with "+`cell.stateSize. Received stateSpec=${this.stateSpec}; `+"However cell.stateSize is "+this.cell.stateSize)}else this.stateSpec=r.map(e=>new Ng({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(a,e=!1){O(()=>{if(!this.stateful)throw new Ff("Cannot call resetStates() on an RNN Layer that is not stateful.");const t=this.inputSpec[0].shape[0];if(null==t)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Il([t,e])):this.states_=[Il([t,this.cell.stateSize])];else if(null==a)C(this.states_),null!=this.keptStates&&(C(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Il([t,e])):this.states_[0]=Il([t,this.cell.stateSize]);else{if((a=Array.isArray(a)?a:[a]).length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), `+`but it received ${a.length} state value(s). Input `+"received: "+a);!0===e?this.keptStates.push(this.states_.slice()):C(this.states_);for(let e=0;e<this.states_.length;++e){var n=a[e],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,r=[t,r];if(!ce(n.shape,r))throw new H(`State ${e} is incompatible with layer ${this.name}: `+`expected shape=${r}, received shape=`+n.shape);this.states_[e]=n}}this.states_=this.states_.map(e=>uo(e.clone()))})}apply(e,t){var n=null==t?null:t.initialState,r=null==t?null:t.constants,a=(null==t&&(t={}),zv(e,n,r,this.numConstants));e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const o of n)this.stateSpec.push(new Ng({shape:o.shape}));i=i.concat(this.stateSpec)}return null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Ig?(a=[e].concat(s),n=this.inputSpec.concat(i),r=this.inputSpec,this.inputSpec=n,n=super.apply(a,t),this.inputSpec=r,n):super.apply(e,t)}call(o,u){return O(()=>{var e=null==u?null:u.mask,t=null==u?null:u.training;let n=null==u?null:u.initialState;o=A(o),null==n&&(n=this.stateful?this.states_:this.getInitialState(o));var r=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(n.length!==r)throw new H(`RNN Layer has ${r} state(s) but was passed `+n.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:t};var r=Pv((e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]},o,n,this.goBackwards,e,null,this.unroll,this.returnSequences),e=r[0],s=r[1],r=r[2];this.stateful&&this.resetStates(r,t);const i=this.returnSequences?s:e;return this.returnState?[i].concat(r):i})}getInitialState(e){return O(()=>{let t=Il(e.shape);return t=_m(t=b(t,[1,2])),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>1<e?Om(t,[1,e]):t):1<this.cell.stateSize?[Om(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){var e=super.getConfig();const t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);var n=this.cell.getConfig();return this.getClassName()===Bv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){n=Wg(t.cell,n);return new e(Object.assign(t,{cell:n}))}}Bv.className="RNN",r(Bv);class Wv extends Eg{}class Vv extends Wv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yf(this.units,"units"),this.activation=iv(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=dv(e.kernelRegularizer),this.recurrentRegularizer=dv(e.recurrentRegularizer),this.biasRegularizer=dv(e.biasRegularizer),this.kernelConstraint=om(e.kernelConstraint),this.recurrentConstraint=om(e.recurrentConstraint),this.biasConstraint=om(e.biasConstraint),this.dropout=Sm([1,Tm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sm([1,Tm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=yg(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(s,i){return O(()=>{if(2!==s.length)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${s.length}.`);let e=s[1];s=s[0];var t=null!=i.training&&i.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xv({ones:()=>Ol(s),rate:this.dropout,training:t,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xv({ones:()=>Ol(e),rate:this.recurrentDropout,training:t,dropoutFunc:this.dropoutFunc}));let n;var t=this.dropoutMask,r=this.recurrentDropoutMask;n=Lm(null!=t?w(s,t):s,this.kernel.read()),null!=this.bias&&(n=Wm(n,this.bias.read())),null!=r&&(e=w(e,r));let a=E(n,Lm(e,this.recurrentKernel.read()));return[a=null!=this.activation?this.activation.apply(a):a,a]})}getConfig(){var e=super.getConfig(),t={units:this.units,activation:av(this.activation),useBias:this.useBias,kernelInitializer:cg(this.kernelInitializer),recurrentInitializer:cg(this.recurrentInitializer),biasInitializer:cg(this.biasInitializer),kernelRegularizer:hv(this.kernelRegularizer),recurrentRegularizer:hv(this.recurrentRegularizer),biasRegularizer:hv(this.biasRegularizer),activityRegularizer:hv(this.activityRegularizer),kernelConstraint:sm(this.kernelConstraint),recurrentConstraint:sm(this.recurrentConstraint),biasConstraint:sm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Vv.className="SimpleRNNCell",r(Vv);class Uv extends Bv{constructor(e){e.cell=new Vv(e),super(e)}call(r,a){return O(()=>{null!=this.cell.dropoutMask&&(C(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(C(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);var e=null==a?null:a.mask,t=null==a?null:a.training,n=null==a?null:a.initialState;return super.call(r,{mask:e,training:t,initialState:n})})}static fromConfig(e,t){return new e(t)}}Uv.className="SimpleRNN",r(Uv);class Gv extends Wv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Yf(this.units,"units"),this.activation=iv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=iv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=dv(e.kernelRegularizer),this.recurrentRegularizer=dv(e.recurrentRegularizer),this.biasRegularizer=dv(e.biasRegularizer),this.kernelConstraint=om(e.kernelConstraint),this.recurrentConstraint=om(e.recurrentConstraint),this.biasConstraint=om(e.biasConstraint),this.dropout=Sm([1,Tm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sm([1,Tm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=(e=yg(e))[e.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(u,l){return O(()=>{if(2!==u.length)throw new H("GRUCell expects 2 input Tensors (inputs, h, c), got "+u.length+".");var e=null!=l.training&&l.training;let t=u[1];u=u[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xv({ones:()=>Ol(u),rate:this.dropout,training:e,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xv({ones:()=>Ol(t),rate:this.recurrentDropout,training:e,count:3,dropoutFunc:this.dropoutFunc}));var e=this.dropoutMask,n=this.recurrentDropoutMask;let r=Lm(u=0<this.dropout&&this.dropout<1?w(u,e[0]):u,this.kernel.read());this.useBias&&(r=Wm(r,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(t=w(t,n[0]));var e=this.recurrentKernel.read(),[n,e]=_c(e,[2*this.units,this.units],e.rank-1),n=Lm(t,n),[a,s,i]=_c(r,3,r.rank-1),[n,o]=_c(n,2,n.rank-1),a=this.recurrentActivation.apply(E(a,n)),n=this.recurrentActivation.apply(E(s,o)),s=Lm(w(n,t),e),o=this.activation.apply(E(i,s)),n=E(w(a,t),w(E(1,tl(a)),o));return[n,n]})}getConfig(){var e=super.getConfig(),t={units:this.units,activation:av(this.activation),recurrentActivation:av(this.recurrentActivation),useBias:this.useBias,kernelInitializer:cg(this.kernelInitializer),recurrentInitializer:cg(this.recurrentInitializer),biasInitializer:cg(this.biasInitializer),kernelRegularizer:hv(this.kernelRegularizer),recurrentRegularizer:hv(this.recurrentRegularizer),biasRegularizer:hv(this.biasRegularizer),activityRegularizer:hv(this.activityRegularizer),kernelConstraint:sm(this.kernelConstraint),recurrentConstraint:sm(this.recurrentConstraint),biasConstraint:sm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Gv.className="GRUCell",r(Gv);class jv extends Bv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Gv(e),super(e)}call(r,a){return O(()=>{null!=this.cell.dropoutMask&&(C(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(C(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);var e=null==a?null:a.mask,t=null==a?null:a.training,n=null==a?null:a.initialState;return super.call(r,{mask:e,training:t,initialState:n})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}jv.className="GRU",r(jv);class Hv extends Wv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Yf(this.units,"units"),this.activation=iv(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=iv(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=hg(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=hg(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=hg(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=dv(e.kernelRegularizer),this.recurrentRegularizer=dv(e.recurrentRegularizer),this.biasRegularizer=dv(e.biasRegularizer),this.kernelConstraint=om(e.kernelConstraint),this.recurrentConstraint=om(e.recurrentConstraint),this.biasConstraint=om(e.biasConstraint),this.dropout=Sm([1,Tm([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Sm([1,Tm([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var e=(e=yg(e))[e.length-1];this.kernel=this.addWeight("kernel",[e,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let t;if(this.useBias){if(this.unitForgetBias){const s=this.biasInitializer,i=this.units;t=((e=class extends Hm{apply(e,t){var n=s.apply([i]),r=(new Km).apply([i]),a=s.apply([2*i]);return Dm(Dm(n,r),a)}}).className="CustomInit",new e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,t,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(o,u){return O(()=>{var e=null!=u.training&&u.training;if(3!==o.length)throw new H("LSTMCell expects 3 input Tensors (inputs, h, c), got "+o.length+".");let t=o[1];var n=o[2],e=(o=o[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xv({ones:()=>Ol(o),rate:this.dropout,training:e,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xv({ones:()=>Ol(t),rate:this.recurrentDropout,training:e,count:4,dropoutFunc:this.dropoutFunc})),this.dropoutMask),r=this.recurrentDropoutMask;let a=Lm(o=0<this.dropout&&this.dropout<1?w(o,e[0]):o,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(t=w(t,r[0])),a=E(a,Lm(t,this.recurrentKernel.read())),this.useBias&&(a=Wm(a,this.bias.read()));var[e,r,s,i]=_c(a,4,a.rank-1),e=this.recurrentActivation.apply(e),r=this.recurrentActivation.apply(r),r=E(w(r,n),w(e,this.activation.apply(s))),n=this.recurrentActivation.apply(i),e=w(n,this.activation.apply(r));return[e,e,r]})}getConfig(){var e=super.getConfig(),t={units:this.units,activation:av(this.activation),recurrentActivation:av(this.recurrentActivation),useBias:this.useBias,kernelInitializer:cg(this.kernelInitializer),recurrentInitializer:cg(this.recurrentInitializer),biasInitializer:cg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:hv(this.kernelRegularizer),recurrentRegularizer:hv(this.recurrentRegularizer),biasRegularizer:hv(this.biasRegularizer),activityRegularizer:hv(this.activityRegularizer),kernelConstraint:sm(this.kernelConstraint),recurrentConstraint:sm(this.recurrentConstraint),biasConstraint:sm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Hv.className="LSTMCell",r(Hv);class qv extends Bv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Hv(e),super(e)}call(r,a){return O(()=>{null!=this.cell.dropoutMask&&(C(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(C(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);var e=null==a?null:a.mask,t=null==a?null:a.training,n=null==a?null:a.initialState;return super.call(r,{mask:e,training:t,initialState:n})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qv.className="LSTM",r(qv);class Kv extends Wv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(o,u){return O(()=>{let t=o.slice(1);const n=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?n.push(t.splice(0,e.stateSize.length)):n.push(t.splice(0,1));n.reverse();const r=[];let a;for(let e=0;e<this.cells.length;++e){const s=this.cells[e];t=n[e],a=(0===e?[o[0]]:[a[0]]).concat(t),a=s.call(a,u),r.push(a.slice(1))}t=[];for(const i of r.slice().reverse())t.push(...i);return[a[0]].concat(t)})}build(n){mg(n)&&(n=n[0]);let r;this.cells.forEach((e,t)=>{bm("RNNCell_"+t,()=>{e.build(n),r=Array.isArray(e.stateSize)?e.stateSize[0]:e.stateSize,n=[n[0],r]})}),this.built=!0}getConfig(){var e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign({},e,{cells:t})}static fromConfig(e,t,n={}){const r=[];for(const a of t.cells)r.push(Wg(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(this.trainable)return e;{const n=[];for(const r of this.cells)n.push(...r.trainableWeights);return n.concat(e)}}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return wg(e)}setWeights(e){const t=[];for(const a of this.cells){var n=a.weights.length,r=e.splice(n);for(let e=0;e<a.weights.length;++e)t.push([a.weights[e],r[e]])}kg(t)}}function Xv(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>(null!=s?s:Vm)(t(),n);e=()=>Um(i,t,r);if(!a||a<=1)return uo(e().clone());const o=Array(a).fill(void 0).map(e);return o.map(e=>uo(e.clone()))}Kv.className="StackedRNNCells",r(Kv);var Yv=function(e,t){var n={};for(a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var r=0,a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]]);return n};class Jv extends Bv{constructor(e){if(e.unroll)throw new _("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new _("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ng({ndim:5})]}call(r,a){return O(()=>{if(null!=this.cell.dropoutMask&&(C(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(C(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),a&&a.constants)throw new H("ConvRNN2D cell does not support constants");var e=null==a?null:a.mask,t=null==a?null:a.training,n=null==a?null:a.initialState;return super.call(r,{mask:e,training:t,initialState:n})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),t=this.returnState?[t,...Array(2).fill([e[0],...t.slice(-3)])]:t}getInitialState(r){return O(()=>{var e=this.cell["stateSize"],t=r.shape;const n=this.computeSingleOutputShape(t);t=Il([n[0],...n.slice(2)]);return Array.isArray(e)?Array(e.length).fill(t):[t]})}resetStates(s,i=!1){O(()=>{if(!this.stateful)throw new Ff("Cannot call resetStates() on an RNN Layer that is not stateful.");var e=this.inputSpec[0].shape;const t=this.computeSingleOutputShape(e),n=[t[0],...t.slice(2)];if(null==e[0])throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Il(n)):this.states_=[Il(n)];else if(null==s)C(this.states_),null!=this.keptStates&&(C(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Il(n)):this.states_[0]=Il(n);else{if((s=Array.isArray(s)?s:[s]).length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), `+`but it received ${s.length} state value(s). Input `+"received: "+s);i?this.keptStates.push(this.states_.slice()):C(this.states_);for(let e=0;e<this.states_.length;++e){var r=s[e],a=n;if(!ce(r.shape,a))throw new H(`State ${e} is incompatible with layer ${this.name}: `+`expected shape=${a}, received shape=`+r.shape);this.states_[e]=r}}this.states_=this.states_.map(e=>uo(e.clone()))})}computeSingleOutputShape(e){var{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,t="channelsFirst"===t,o=e[t?3:2],u=e[t?4:3],o=wv(o,r[0],a,s[0],i[0]),u=wv(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...t?[n,o,u]:[o,u,n]]}}Jv.className="ConvRNN2D";class Zv extends Hv{constructor(e){var{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Yf(this.filters,"filters"),this.kernelSize=xv(n,2,"kernelSize"),this.kernelSize.forEach(e=>Yf(e,"kernelSize")),this.strides=xv(r||1,2,"strides"),this.strides.forEach(e=>Yf(e,"strides")),this.padding=a||"valid",mm(this.padding),this.dataFormat=s||"channelsLast",fm(this.dataFormat),this.dilationRate=xv(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Yf(e,"dilationRate"))}build(e){e=yg(e);var t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new H("The channel dimension of the input should be defined. Found "+e[t]);var e=e[t],t=this.kernelSize.concat([e,4*this.filters]),e=(this.kernel=this.addWeight("kernel",t,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.kernelSize.concat([this.filters,4*this.filters]));if(this.recurrentKernel=this.addWeight("recurrent_kernel",e,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=((t=class extends Hm{apply(e,t){return Fm([n.apply([r]),Sl([r]),n.apply([2*r])])}}).className="CustomInit",new t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(b,x){return O(()=>{if(3!==b.length)throw new H("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+b.length+".");var e=x.training||!1;const t=b[0],n=b[1];var r=b[2],a=(0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xv({ones:()=>Ol(t),rate:this.dropout,training:e,count:4,dropoutFunc:this.dropoutFunc})),this.dropoutMask),s=(e,t,n)=>t&&t[n]?w(t[n],e):e,i=s(t,a,0),o=s(t,a,1),u=s(t,a,2),a=s(t,a,3),e=(0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xv({ones:()=>Ol(n),rate:this.recurrentDropout,training:e,count:4,dropoutFunc:this.dropoutFunc})),this.recurrentDropoutMask),l=s(n,e,0),c=s(n,e,1),h=s(n,e,2),s=s(n,e,3),[e,p,d,f]=_c(this.kernel.read(),4,3),[m,g,y,v]=this.useBias?_c(this.bias.read(),4):[null,null,null,null],i=this.inputConv(i,e,m,this.padding),o=this.inputConv(o,p,g,this.padding),u=this.inputConv(u,d,y,this.padding),a=this.inputConv(a,f,v,this.padding),[e,m,p,g]=_c(this.recurrentKernel.read(),4,3),l=this.recurrentConv(l,e),c=this.recurrentConv(c,m),h=this.recurrentConv(h,p),s=this.recurrentConv(s,g),d=this.recurrentActivation.apply(E(i,l)),y=this.recurrentActivation.apply(E(o,c)),f=E(w(y,r),w(d,this.activation.apply(E(u,h)))),v=w(this.recurrentActivation.apply(E(a,s)),this.activation.apply(f));return[v,v,f]})}getConfig(){var e=super.getConfig(),e=Yv(e,["units"]),t={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},e,t)}inputConv(e,t,n,r){e=ou(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Wm(e,n,this.dataFormat):e}recurrentConv(e,t){return ou(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Zv.className="ConvLSTM2DCell",r(Zv);class Qv extends Jv{constructor(e){var t=new Zv(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Qv.className="ConvLSTM2D",r(Qv);class eb extends Eg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;var t=e.shape;const n=[];for(let e=0;e<this.noiseShape.length;++e)n.push((null==this.noiseShape[e]?t:this.noiseShape)[e]);return n}call(r,a){return O(()=>{this.invokeCallHook(r,a);const e=A(r);if(0<this.rate&&this.rate<1){var t=null!=a.training&&a.training;const n=this.getNoiseShape(e);return Um(()=>Vm(e,this.rate,n,this.seed),()=>e,t)}return r})}getConfig(){var e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}eb.className="Dropout",r(eb);class tb extends eb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){e=e.shape;return[e[0],1,e[2]]}}tb.className="SpatialDropout1D",r(tb);class nb extends Eg{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Yf(this.units,"units"),this.activation=iv(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=hg(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=hg(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=om(t.kernelConstraint),this.biasConstraint=om(t.biasConstraint),this.kernelRegularizer=dv(t.kernelRegularizer),this.biasRegularizer=dv(t.biasRegularizer),this.activityRegularizer=dv(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=(e=yg(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{"-1":e}}],this.built=!0}computeOutputShape(e){const t=(e=yg(e)).slice();return t[t.length-1]=this.units,t}call(r,a){return O(()=>{this.invokeCallHook(r,a);var e=A(r),t=Jf(this.activation.getClassName());let n;return null!=t?n=Lm(e,this.kernel.read(),t,this.bias?this.bias.read():null):(n=Lm(e,this.kernel.read()),null!=this.bias&&(n=Wm(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n})}getConfig(){var e={units:this.units,activation:av(this.activation),useBias:this.useBias,kernelInitializer:cg(this.kernelInitializer),biasInitializer:cg(this.biasInitializer),kernelRegularizer:hv(this.kernelRegularizer),biasRegularizer:hv(this.biasRegularizer),activityRegularizer:hv(this.activityRegularizer),kernelConstraint:sm(this.kernelConstraint),biasConstraint:sm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}nb.className="Dense",r(nb);class rb extends Eg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(const t of(e=yg(e)).slice(1))if(null==t)throw new H('The shape of the input to "Flatten" is not fully defined '+`(got ${e.slice(1)}). Make sure to pass a complete `+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Im(e,1)]}call(a,s){return O(()=>{this.invokeCallHook(a,s);let t=A(a);if("channelsFirst"===this.dataFormat&&1<t.rank){const r=[0];for(let e=2;e<t.rank;++e)r.push(e);r.push(1),t=vi(t,r)}var e=t;if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);var n=[e.shape[0],Im(e.shape,1)];return M(e,n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);var t=super.getConfig();return Object.assign(e,t),e}}rb.className="Flatten",r(rb);class ab extends Eg{constructor(e){super(e),this.supportsMasking=!0,this.activation=iv(e.activation)}call(t,n){return O(()=>{this.invokeCallHook(t,n);var e=A(t);return this.activation.apply(e)})}getConfig(){var e={activation:av(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ab.className="Activation",r(ab);class sb extends Eg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(n,e){return O(()=>{return n=A(n),e=n,t=this.n,O(()=>{if(2!==e.shape.length)throw new H("repeat() expects a rank-2 tensor, but received a "+`rank-${e.shape.length} tensor.`);return Om(_m(e,1),[1,t,1])});var e,t})}getConfig(){var e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}sb.className="RepeatVector",r(sb);class ib extends Eg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){var n="Total size of new array must be unchanged.";const r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){var i=r[e];if(this.isUnknown(i)){if(null!==s)throw new H("Can only specifiy one unknown dimension.");s=e}else a*=i}t=Im(e);if(null!==s){if(0===a||t%a!=0)throw new H(n);r[s]=t/a}else if(t!==a)throw new H(n);return r}computeOutputShape(t){let n=!1;for(let e=0;e<t.length;++e)if(this.isUnknown(t[e])){n=!0;break}return n?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(r,a){return O(()=>{this.invokeCallHook(r,a);var e=A(r);const t=e.shape;var n=t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape));return M(e,n)})}getConfig(){var e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ib.className="Reshape",r(ib);class ob extends Eg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");var t=Cm(1,e.dims.length+1);if(!ce(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ng({ndim:this.dims.length+1})]}computeOutputShape(n){const r=(n=yg(n)).slice();return this.dims.forEach((e,t)=>{r[t+1]=n[e]}),r}call(e,t){return vi(A(e),this.dimsIncludingBatch)}getConfig(){var e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}ob.className="Permute",r(ob);class ub extends Eg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null==e||null==e.maskValue?0:e.maskValue}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){e=A(e);return vo(Dl(e,this.maskValue),-1)}call(n,r){return O(()=>{this.invokeCallHook(n,r);var e=A(n),t=vo(Dl(e,this.maskValue),-1,!0);return w(e,x(t,e.dtype))})}}ub.className="Masking",r(ub);class lb extends Eg{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(Bf(t.inputLength))}this.inputDim=t.inputDim,Yf(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Yf(this.outputDim,"outputDim"),this.embeddingsInitializer=hg(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=dv(t.embeddingsRegularizer),this.activityRegularizer=dv(t.activityRegularizer),this.embeddingsConstraint=om(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return O(()=>this.maskZero?(e=A(e),Dl(e,Su(e))):null)}computeOutputShape(n){if(n=yg(n),null==this.inputLength)return[...n,this.outputDim];const r=Bf(this.inputLength);if(r.length!==n.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received `+"input shape has shape "+n);{let t=0;for(let e=0;e<r.length;++e){var a=r[e],s=n[e+1];if(null!=a&&null!=s&&a!==s)throw new H(`"inputLength" is ${this.inputLength}, but received `+"input shape has shape "+n);null==a&&(r[t]=s),t++}}return[n[0],...r,this.outputDim]}call(n,r){return O(()=>{this.invokeCallHook(n,r);let e=A(n);"int32"!==e.dtype&&(e=Em(e,"int32"));var t=zm(this.embeddings.read(),M(e,[e.size]));return M(t,yg(this.computeOutputShape(e.shape)))})}getConfig(){var e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:cg(this.embeddingsInitializer),embeddingsRegularizer:hv(this.embeddingsRegularizer),activityRegularizer:hv(this.activityRegularizer),embeddingsConstraint:sm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}lb.className="Embedding",r(lb);class cb extends Eg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new _}computeElementwiseOpOutputShape(t,n){if(null==t||null==n)return null;if(t.length<n.length)return this.computeElementwiseOpOutputShape(n,t);if(0===n.length)return t;const r=t.slice(0,t.length-n.length);for(let e=0;e<n.length;++e){var a=t[t.length-n.length+e],s=n[e];if(null==a||null==s||a<0||s<0)r.push(null);else if(1===a)r.push(s);else if(1===s)r.push(a);else{if(a!==s)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(n));r.push(a)}}return r}build(t){if((t=Array.isArray(t)&&!Array.isArray(t[0])?[yg(t)]:t).length<2)throw new H("A merge layer should be called on an Array of at least 2 inputs."+` Got ${t.length} input(s).`);let e=[];for(const s of t)null!=s&&null!==s[0]&&e.push(s[0]);if(1<(e=qf(e)).length)throw new H("Can not merge tensors with different batch sizes. "+`Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){var r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}var a=t.map(e=>e.length);-1===t.indexOf(null)&&1===qf(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(m,e){return O(()=>{if(this.reshapeRequired){const l=[],e=m.map(e=>e.rank);if(-1===e.indexOf(null)){var t,n=Tm(e);for(t of m){var r=t.rank;for(let e=0;e<n-r;++e)t=_m(t,1);l.push(t)}return this.mergeFunction(l)}{let e=!1;for(const c of m){var a=c.rank;if(null==a){const h=c.shape,p=h[0];var s=h.slice(1).concat([p]),i=M(c,[p].concat(Im(h.slice(1)))),i=vi(i,[1,0]);i=M(i,s),l.push(i),e=!0}else 1<a?(s=Cm(1,a).concat([0]),l.push(vi(c,s)),e=!0):l.push(c)}let t=this.mergeFunction(l);var o=t.rank;if(e)if(null==o){const d=t.shape;var u=d.length;const f=d[u-1];var u=[f].concat(d.slice(0,d.length-1));t=M(vi(M(t,[-1,f]),[1,0]),u)}else 1<o&&(u=[o-1].concat(Cm(0,o-1)),t=vi(t,u));return t}}return this.mergeFunction(m)})}computeOutputShape(t){let n;n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){var r=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);return e=qf(e),n=(1===e.length?e:[null]).concat(n)}computeMask(e,n){return O(()=>{if(null==n)return null;if(!Array.isArray(n))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(n.length!==e.length)throw new H("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+`(${e.length} vs ${n.length})`);if(n.every(e=>null==e))return null;let t=(n=n.map(e=>null==e?e:Ru(e,0)))[0];for(let e=1;e<n.length-1;++e)t=ml(t,n[e]);return t})}}class hb extends cb{constructor(e){super(e)}mergeFunction(n){return O(()=>{let t=n[0].clone();for(let e=1;e<n.length;++e)t=E(t,n[e]);return t})}}hb.className="Add",r(hb);class pb extends cb{constructor(e){super(e)}mergeFunction(n){return O(()=>{let t=n[0].clone();for(let e=1;e<n.length;++e)t=w(t,n[e]);return t})}}pb.className="Multiply",r(pb);class db extends cb{constructor(e){super(e)}mergeFunction(n){return O(()=>{let t=n[0].clone();for(let e=1;e<n.length;++e)t=E(t,n[e]);return w(1/n.length,t)})}}db.className="Average",r(db);class fb extends cb{constructor(e){super(e)}mergeFunction(n){return O(()=>{let t=n[0];for(let e=1;e<n.length;++e)t=kl(t,n[e]);return t})}}fb.className="Maximum",r(fb);class mb extends cb{constructor(e){super(e)}mergeFunction(n){return O(()=>{let t=n[0];for(let e=1;e<n.length;++e)t=Cl(t,n[e]);return t})}}mb.className="Minimum",r(mb);class gb extends cb{constructor(e){super(e),this.DEFAULT_AXIS=-1,this.axis=null==(e=null==e?{}:e).axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(n){if(!Array.isArray(n)||!Array.isArray(n[0])||1===n.length)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const t of n)if(null!=t){e=!1;break}if(!e){const r=[];for(let t=0;t<n.length;++t){const a=n[t].slice();a.splice(this.axis,1);let e=!1;for(const s of r)if(ce(s,a)){e=!0;break}e||r.push(a)}if(1<r.length)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(n))}}mergeFunction(e){return O(()=>Fm(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new H("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice();var r=this.axis<0?n.length+this.axis:this.axis;for(const a of t.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(r,a){if(null==a)return null;if(!Array.isArray(a))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(r))throw new H("`inputs` should be an array for Concatenate");if(a.length!==r.length)throw new H(`Mismatch in the length of mask (${a.length}) `+`and the legnth of inputs (${r.length})`);return O(()=>{let t=!0;if(a.forEach(e=>{null!=e&&(t=!1)}),t)return null;const n=[];for(let e=0;e<r.length;++e)null==a[e]?n.push(x(Ol(r[e]),"bool")):a[e].rank<r[e].rank?n.push(Ru(a[e],-1)):n.push(a[e]);var e=Vo(n,this.axis);return yo(e,-1,!1)})}getConfig(){var e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yb(e,t){for(;e<0;)e+=t;return e}gb.className="Concatenate",r(gb);class vb extends cb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){z(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");var t=e[0],e=e[1];if(3<t.length||3<e.length)throw new _("Dot layer does not support tensors of 4D or higher rank yet.");var n=this.interpretAxes(t,e);if(t[n[0]]!==e[n[1]])throw new H("Dimension incompatibility: "+t[n[0]]+" !== "+e[n[1]])}mergeFunction(n){if(2!==n.length)throw new H("A `Dot` layer must be called on exactly 2 inputs, "+`but received ${n.length} input(s).`);let e=n[0],t=n[1],r;r=Array.isArray(this.axes)?this.axes.map((e,t)=>yb(e,n[t].shape.length)):[yb(this.axes,e.shape.length),yb(this.axes,t.shape.length)],this.normalize&&(e=Vg(e,r[0]),t=Vg(t,r[1]));{var o=e,u=t,a=r;if(3<o.shape.length||3<u.shape.length)throw new _("batchDot is not implemented for tensors of 4D or higher rank yet");if(z(2<=o.shape.length,()=>"batchDot requires the rank of x to be >= 2, but got "+o.shape.length),z(2<=o.shape.length,()=>"batchDot requires the rank of y to be >= 2, but got "+u.shape.length),"number"==typeof a&&(a=[a,a]),"complex64"===o.dtype||"complex64"===u.dtype)throw new _("batchDot is not implemented for complex64-type Tensors yet.");const l=o.shape.length,c=u.shape.length,h=a=null==a?[l-1,c-2]:a;return O(()=>{let n;if(l>c){n=l-c;const a=[];for(let e=0;e<n;++e)a.push(1);u=M(u,u.shape.concat(a))}else if(c>l){n=c-l;const s=[];for(let e=0;e<n;++e)s.push(1);o=M(o,o.shape.concat(s))}else n=0;let e;var t,r;if(e=2===o.shape.length&&2===u.shape.length?h[0]===h[1]?b(w(o,u),h[0]):b(w(vi(o,[1,0]),u),h[1]):(t=h[0]!==o.shape.length-1,r=h[1]===u.shape.length-1,T(o,u,t,r)),0<n){let t;const i=[];for(let e=t=l>c?l+c-3:l-1;e<t+n;++e)i.push(e);e=Fc(e,i)}return e=1===e.shape.length?Ru(e,1):e})}}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yb(this.axes,e.length),yb(this.axes,t.length)]}computeOutputShape(e){z(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(3<t.length||3<n.length)throw new _("Dot layer does not support tensors of 4D or higher rank yet.");e=this.interpretAxes(t,n);t.splice(e[0],1),n.splice(e[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){var e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}vb.className="Dot",r(vb);class bb extends Eg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(t,n){return O(()=>{this.invokeCallHook(t,n);const e=A(t);return Um(()=>E(Mm(e.shape,0,this.stddev),e),()=>e,n.training||!1)})}}bb.className="GaussianNoise",r(bb);class xb extends Eg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,n){return O(()=>{this.invokeCallHook(e,n);const t=A(e);return 0<this.rate&&this.rate<1?Um(()=>{var e=Math.sqrt(this.rate/(1-this.rate));return w(t,Mm(t.shape,1,e))},()=>t,n.training||!1):t})}}xb.className="GaussianDropout",r(xb);class wb extends Eg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||A(e).shape}computeOutputShape(e){return e}getConfig(){var e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(i,e){return O(()=>{if(this.rate<1&&0<this.rate){const s=this._getNoiseShape(i);return Um(()=>{var e=A(i),t=-1.7580993408473766,n=Em(Bu(ic(s),this.rate),"float32"),r=((1-this.rate)*(1+this.rate*t**2))**-.5,a=-r*t*this.rate,e=E(w(e,n),w(E(n,-1),t));return E(w(e,r),a)},()=>A(i),e.training||!1)}return i})}}function kb(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Xo(e,t,n,r,a,s);else if(3===e.rank)i=Yo(e,t,n,r,a,s);else{if(4!==e.rank)throw new _(`batchNormalization is not implemented for array of rank ${e.rank} `+"yet");i=Jo(e,t,n,r,a,s)}return i}function Nb(e,t,n,r,a=.001){return ce(r.slice().sort(),Cm(0,e.rank-1))?([s,i,o,d,f=.001]=[e,t,n,r,a],O(()=>{var e=$l(s,d),t=e.mean,e=e.variance;return[kb(s,t,e,o,i,f),t,e]})):([u,l,c,h,p=.001]=[e,t,n,r,a],O(()=>{var e=$l(u,h),t=e.mean,e=e.variance;const n=[];for(const o of Cm(0,u.rank))-1!==h.indexOf(o)?n.push(1):n.push(u.shape[o]);var r=M(t,n),a=M(e,n),s=null==l?null:M(l,n),i=null==c?null:M(c,n);return[kb(u,r,a,i,s,p),t,e]}));var u,l,c,h,p,s,i,o,d,f}wb.className="AlphaDropout",r(wb);class Ib extends Eg{constructor(e){super(e=null==e?{}:e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=hg(e.betaInitializer||"zeros"),this.gammaInitializer=hg(e.gammaInitializer||"ones"),this.movingMeanInitializer=hg(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=hg(e.movingVarianceInitializer||"ones"),this.betaConstraint=om(e.betaConstraint),this.gammaConstraint=om(e.gammaConstraint),this.betaRegularizer=dv(e.betaRegularizer),this.gammaRegularizer=dv(e.gammaRegularizer)}build(e){e=yg(e);var t=0<=this.axis?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new H(`Axis ${t} of input tensor should have a defined dimension but `+"the layer received an input with shape "+JSON.stringify(e)+".");this.inputSpec=[new Ng({ndim:e.length,axes:{[t]:n}})];e=[n];this.scale&&(this.gamma=this.addWeight("gamma",e,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",e,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",e,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",e,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(d,f){return O(()=>{var e=null!=f.training&&f.training;const t=A(d);var n=t.shape,r=n.length;const a=Cm(0,r);var s=0<=this.axis?this.axis:this.axis+r;a.splice(s,1);const i=Mf(1,r),o=(i[s]=n[s],a.slice()),u=(o.sort(),!ce(o,Cm(0,r).slice(0,r-1)));if(e){const[l,c,h]=Nb(t,this.gamma.read(),this.beta.read(),a,this.epsilon),p=(n,r,a)=>{O(()=>{var e=1-a,t=n.read(),e=w(k(t,r),e);n.write(k(t,e))})};return p(this.movingMean,c,this.momentum),p(this.movingVariance,h,this.momentum),l}return u?(n=M(this.movingMean.read(),i),s=M(this.movingVariance.read(),i),r=this.center?M(this.beta.read(),i):null,e=this.scale?M(this.gamma.read(),i):null,kb(t,n,s,r,e,this.epsilon)):kb(t,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})}getConfig(){var e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:cg(this.betaInitializer),gammaInitializer:cg(this.gammaInitializer),movingMeanInitializer:cg(this.movingMeanInitializer),movingVarianceInitializer:cg(this.movingVarianceInitializer),betaRegularizer:hv(this.betaRegularizer),gammaRegularizer:hv(this.gammaRegularizer),betaConstraint:sm(this.betaConstraint),gammaConstraint:sm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ib.className="BatchNormalization",r(Ib);class Sb extends Eg{constructor(e){if(super(e=null==e?{}:e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=hg(e.betaInitializer||"zeros"),this.gammaInitializer=hg(e.gammaInitializer||"ones"),this.betaRegularizer=dv(e.betaRegularizer),this.gammaRegularizer=dv(e.gammaRegularizer),this.supportsMasking=!0}build(t){var n=(t=yg(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=n);for(const r of this.axis)if(r<0||r>=n)throw new Error("Invalid axis: "+r);if(this.axis.length!==qf(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);var e=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",e,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",e,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const u=A(e),l=u.shape,c=l.length;return O(()=>{var{mean:e,variance:t}=$l(u,this.axis,!0);const n=Mf(1,c);for(const o of this.axis)n[o]=l[o];var r=e=>null!=e&&e.shape.length!==c?M(e,n):e,a=r(this.gamma.read()),r=r(this.beta.read());const s=[],i=[];for(let e=0;e<c;++e)-1!==this.axis.indexOf(e)?(s.push(l[e]),i.push(1)):(s.push(1),i.push(l[e]));return e=Du(e,s),t=Du(t,s),a=Du(a,i),r=Du(r,i),kb(u,e,t,r,a,this.epsilon)})}getConfig(){var e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:cg(this.betaInitializer),gammaInitializer:cg(this.gammaInitializer),betaRegularizer:hv(this.betaRegularizer),gammaRegularizer:hv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Sb.className="LayerNormalization",r(Sb);class Tb extends Eg{constructor(n){if(super(n=null==n?{}:n),this.dataFormat=null==n.dataFormat?Rf():n.dataFormat,null==n.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof n.padding)this.padding=[[n.padding,n.padding],[n.padding,n.padding]];else{if(n.padding=n.padding,2!==n.padding.length)throw new H("ZeroPadding2D expects padding to be a length-2 array, but "+`received a length-${n.padding.length} array.`);let e,t;if("number"==typeof n.padding[0])e=[n.padding[0],n.padding[0]],t=[n.padding[1],n.padding[1]];else{if(n.padding=n.padding,2!==n.padding[0].length)throw new H("ZeroPadding2D expects height padding to be a length-2 array, "+`but received a length-${n.padding[0].length} array.`);if(e=n.padding[0],2!==n.padding[1].length)throw new H("ZeroPadding2D expects width padding to be a length-2 array, "+`but received a length-${n.padding[1].length} array.`);t=n.padding[1]}this.padding=[e,t]}this.inputSpec=[new Ng({ndim:4})]}computeOutputShape(e){e=yg(e);let t,n;return"channelsFirst"===this.dataFormat?(t=null!=e[2]&&0<=e[2]?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&0<=e[3]?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&0<=e[1]?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&0<=e[2]?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return O(()=>{var t=A(e),n=this.padding,r=this.dataFormat;return O(()=>{if(4!==t.rank)throw new H("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(2!==(n=null==n?[[1,1],[1,1]]:n).length||2!==n[0].length||2!==n[1].length)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if("channelsLast"!==(r=null==r?Rf():r)&&"channelsFirst"!==r)throw new H(`Unknown data format: ${r}. `+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ll(t,e)})})}getConfig(){var e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Cb(n,r,a,s,i,o){return O(()=>{fm(i),gm(o),mm(s),null==a&&(a=[1,1]),null==s&&(s="valid"),null==i&&(i=Rf()),null==o&&(o="max"),n=Nv(n,i);let e;var t="same"===s?"same":"valid";return e=("max"===o?bl:Bo)(n,r,a,t),e="channelsFirst"===i?vi(e,[0,3,1,2]):e})}function Eb(n,r,a,s,i,o){return O(()=>{fm(i),gm(o),mm(s),null==a&&(a=[1,1,1]),null==s&&(s="valid"),null==i&&(i=Rf()),null==o&&(o="max"),n=Iv(n,i);let e;var t="same"===s?"same":"valid";return e=("max"===o?xl:Wo)(n,r,a,t),e="channelsFirst"===i?vi(e,[0,4,1,2,3]):e})}Tb.className="ZeroPadding2D",r(Tb);class _b extends Eg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new H("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(Yf(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new H("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}Yf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mm(this.padding),this.inputSpec=[new Ng({ndim:3})]}computeOutputShape(e){var t=wv((e=yg(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(t,n){return O(()=>{this.invokeCallHook(t,n),t=_m(A(t),2);var e=this.poolingFunction(A(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Fc(e,[2])})}getConfig(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ab extends _b{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fm(a),mm(r),Cb(e,t,n,r,a,"max")}}Ab.className="MaxPooling1D",r(Ab);class $b extends _b{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fm(a),mm(r),Cb(e,t,n,r,a,"avg")}}$b.className="AveragePooling1D",r($b);class Rb extends Eg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new H("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];Yf(this.poolSize,"poolSize"),Yf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fm(this.dataFormat),mm(this.padding),this.inputSpec=[new Ng({ndim:4})]}computeOutputShape(e){e=yg(e);var t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],t=wv(t,this.poolSize[0],this.padding,this.strides[0]),n=wv(n,this.poolSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return O(()=>(this.invokeCallHook(e,t),this.poolingFunction(A(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fb extends Rb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fm(a),mm(r),Cb(e,t,n,r,a,"max")}}Fb.className="MaxPooling2D",r(Fb);class Db extends Rb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fm(a),mm(r),Cb(e,t,n,r,a,"avg")}}Db.className="AveragePooling2D",r(Db);class Ob extends Eg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new H("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Yf(this.poolSize,"poolSize"),Yf(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fm(this.dataFormat),mm(this.padding),this.inputSpec=[new Ng({ndim:5})]}computeOutputShape(e){e=yg(e);var t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3],t=wv(t,this.poolSize[0],this.padding,this.strides[0]),n=wv(n,this.poolSize[1],this.padding,this.strides[1]),r=wv(r,this.poolSize[2],this.padding,this.strides[2]);return"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return O(()=>(this.invokeCallHook(e,t),this.poolingFunction(A(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){var e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Mb extends Ob{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fm(a),mm(r),Eb(e,t,n,r,a,"max")}}Mb.className="MaxPooling3D",r(Mb);class Lb extends Ob{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return fm(a),mm(r),Eb(e,t,n,r,a,"avg")}}Lb.className="AveragePooling3D",r(Lb);class zb extends Eg{constructor(e){super(e),this.inputSpec=[new Ng({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new _}}class Pb extends zb{constructor(e){super(e||{})}call(t,e){return O(()=>{var e=A(t);return Nl(e,1)})}}Pb.className="GlobalAveragePooling1D",r(Pb);class Bb extends zb{constructor(e){super(e||{})}call(t,e){return O(()=>{var e=A(t);return al(e,1)})}}Bb.className="GlobalMaxPooling1D",r(Bb);class Wb extends Eg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fm(this.dataFormat),this.inputSpec=[new Ng({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new _}getConfig(){var e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Vb extends Wb{call(t,e){return O(()=>{var e=A(t);return"channelsLast"===this.dataFormat?Nl(e,[1,2]):Nl(e,[2,3])})}}Vb.className="GlobalAveragePooling2D",r(Vb);class Ub extends Wb{call(t,e){return O(()=>{var e=A(t);return"channelsLast"===this.dataFormat?al(e,[1,2]):al(e,[2,3])})}}Ub.className="GlobalMaxPooling2D",r(Ub);class Gb extends Eg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){var e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){n=Wg(t.layer,n),delete t.layer,n={layer:n};return Object.assign(n,t),new e(n)}}class jb extends Gb{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=yg(e)).length<3)throw new H("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];var t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){var t=[(e=yg(e))[0]].concat(e.slice(2));const n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,n){return O(()=>{return Pv((e,t)=>{return[A(this.layer.call(e,n)),[]]},e=A(e),[],!1,null,null,!1,!0)[1]})}}jb.className="TimeDistributed",r(jb);class Hb extends Gb{constructor(e){super(e);const t=e.layer.getConfig(),n={},r=(n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Wg(n),t.goBackwards=!0!==t.goBackwards,{});var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Wg(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Kf(pm,"BidirectionalMergeMode",a),e.weights)throw new _("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){var t=e.length,t=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);t=t=Array.isArray(t)&&Array.isArray(t[0])?t:[t];let n,r,a;return this.returnState&&(a=t.slice(1)),n=n=t[0],r="concat"===this.mergeMode?(n[n.length-1]*=2,[n]):null==this.mergeMode?[n,n.slice()]:[n],this.returnState?(null==this.mergeMode?r:[n]).concat(a).concat(a.slice()):Pf(r)}apply(e,t){let n=null==t?null:t.initialState;var r=null==t?null:t.constants,a=(null==t&&(t={}),zv(e,n,r,this.numConstants));if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){a=n.length;if(0<a%2)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const l=n.map(e=>new Ng({shape:e.shape}));this.forwardLayer.stateSpec=l.slice(0,a/2),this.backwardLayer.stateSpec=l.slice(a/2),i.push(...l)}if(null!=r)throw new _("Support for constants in Bidirectional layers is not implemented yet.");var o,u=s[0]instanceof Ig;for(const c of s)if(c instanceof Ig!=u)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");return u?(a=[e].concat(s),r=this.inputSpec.concat(i),o=this.inputSpec,this.inputSpec=r,r=super.apply(a,t),this.inputSpec=o,r):super.apply(e,t)}call(o,u){return O(()=>{const e=u.initialState;let t,n;var r,a;n=null==e?(t=this.forwardLayer.call(o,u),this.backwardLayer.call(o,u)):(r=e.slice(0,e.length/2),a=e.slice(e.length/2),t=this.forwardLayer.call(o,Object.assign(u,{initialState:r})),this.backwardLayer.call(o,Object.assign(u,{initialState:a})));let s;this.returnState&&(Array.isArray(t)&&(s=t.slice(1).concat(n.slice(1))),t=t[0],n=n[0]),this.returnSequences&&(n=pc(n,1));let i;return"concat"===this.mergeMode?i=Fm([t,n]):"sum"===this.mergeMode?i=E(t,n):"ave"===this.mergeMode?i=w(.5,E(t,n)):"mul"===this.mergeMode?i=w(t,n):null==this.mergeMode&&(i=[t,n]),this.returnState?(null==this.mergeMode?i:[i]).concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){bm(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),bm(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const r=this.forwardLayer.states;t=r.map(e=>null);return(Array.isArray(n)?n:[n]).concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){var e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){var n=Wg(t.layer);if(delete t.layer,null!=t.numConstants)throw new _("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function qb(e){return new $b(e)}function Kb(e){return new Db(e)}function Xb(e){return new Lb(e)}function Yb(e){return new Bb(e)}function Jb(e){return new Ub(e)}function Zb(e){return new Ab(e)}function Qb(e){return new Fb(e)}Hb.className="Bidirectional",r(Hb);Wh=Object.freeze({__proto__:null,inputLayer:function(e){return new _g(e)},elu:function(e){return new yv(e)},reLU:function(e){return new fv(e)},leakyReLU:function(e){return new mv(e)},prelu:function(e){return new gv(e)},softmax:function(e){return new bv(e)},thresholdedReLU:function(e){return new vv(e)},conv1d:function(e){return new Dv(e)},conv2d:function(e){return new Ev(e)},conv2dTranspose:function(e){return new Av(e)},conv3d:function(e){return new _v(e)},conv3dTranspose:function(e){return new $v(e)},separableConv2d:function(e){return new Fv(e)},cropping2D:function(e){return new Ov(e)},upSampling2d:function(e){return new Mv(e)},depthwiseConv2d:function(e){return new Lv(e)},activation:function(e){return new ab(e)},dense:function(e){return new nb(e)},dropout:function(e){return new eb(e)},spatialDropout1d:function(e){return new tb(e)},flatten:function(e){return new rb(e)},repeatVector:function(e){return new sb(e)},reshape:function(e){return new ib(e)},permute:function(e){return new ob(e)},embedding:function(e){return new lb(e)},add:function(e){return new hb(e)},average:function(e){return new db(e)},concatenate:function(e){return new gb(e)},maximum:function(e){return new fb(e)},minimum:function(e){return new mb(e)},multiply:function(e){return new pb(e)},dot:function(e){return new vb(e)},batchNormalization:function(e){return new Ib(e)},layerNormalization:function(e){return new Sb(e)},zeroPadding2d:function(e){return new Tb(e)},averagePooling1d:qb,avgPool1d:qb,avgPooling1d:qb,averagePooling2d:Kb,avgPool2d:Kb,avgPooling2d:Kb,averagePooling3d:Xb,avgPool3d:Xb,avgPooling3d:Xb,globalAveragePooling1d:function(e){return new Pb(e)},globalAveragePooling2d:function(e){return new Vb(e)},globalMaxPooling1d:Yb,globalMaxPooling2d:Jb,maxPooling1d:Zb,maxPooling2d:Qb,maxPooling3d:function(e){return new Mb(e)},gru:function(e){return new jv(e)},gruCell:function(e){return new Gv(e)},lstm:function(e){return new qv(e)},lstmCell:function(e){return new Hv(e)},simpleRNN:function(e){return new Uv(e)},simpleRNNCell:function(e){return new Vv(e)},convLstm2d:function(e){return new Qv(e)},convLstm2dCell:function(e){return new Zv(e)},rnn:function(e){return new Bv(e)},stackedRNNCells:function(e){return new Kv(e)},bidirectional:function(e){return new Hb(e)},timeDistributed:function(e){return new jb(e)},globalMaxPool1d:Yb,globalMaxPool2d:Jb,maxPool1d:Zb,maxPool2d:Qb,Layer:Eg,RNN:Bv,RNNCell:Wv,input:Vy,gaussianNoise:function(e){return new bb(e)},gaussianDropout:function(e){return new xb(e)},alphaDropout:function(e){return new wb(e)},masking:function(e){return new ub(e)}});Gh=Object.freeze({__proto__:null,binaryAccuracy:Zg,binaryCrossentropy:ry,sparseCategoricalAccuracy:ay,categoricalAccuracy:Qg,categoricalCrossentropy:function(e,t){return sy(e,t)},precision:ty,recall:ny,cosineProximity:Xg,meanAbsoluteError:Gg,meanAbsolutePercentageError:jg,MAPE:jg,mape:jg,meanSquaredError:Ug,MSE:Ug,mse:Ug}),Hh=Object.freeze({__proto__:null,modelFromJSON:async function(e,t){let n=(e="modelTopology"in e?e:{modelTopology:e}).modelTopology;const r=Wg(dy(n=null!=n.model_config?n.model_config:n),t);if(null!=e.weightsManifest){var a=await li(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName));const s={};for(const i of r.weights)s[i.originalName]=a[i.originalName];r.loadWeights(s),C(a)}return r}});qh=Object.freeze({__proto__:null,l1l2:function(e){return new lv(e)},l1:function(e){return ov(e=e),new lv({l1:null!=e?e.l1:null,l2:0})},l2:function(e){return ov(e=e),new lv({l2:null!=e?e.l2:null,l1:0})}});class e0 extends Fg{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof zy))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function t0(e,t){return e<t}function n0(e,t){return t<e}class r0 extends e0{constructor(e){if(super(),(e=null==e?{}:e).restoreBestWeights)throw new _("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. `+"Falling back to mode 'auto'."),this.mode="auto"),"min"!==this.mode&&("max"===this.mode||-1!==this.monitor.indexOf("acc"))?this.monitorFunc=n0:this.monitorFunc=t0,this.monitorFunc===t0&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===t0?1/0:-1/0}async onEpochEnd(e,t){await $g(t);t=this.getMonitorValue(t);null!=t&&(this.monitorFunc(t-this.minDelta,this.best)?(this.best=t,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){0<this.stoppedEpoch&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){var t=(e=null==e?{}:e)[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. `+"Available metrics are: "+Object.keys(e)),t}}var a0,Kh={earlyStopping:function(e){return new r0(e)}};const s0=N,i0=(s0.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),(a=a0=a0||{})[a.DT_INVALID=0]="DT_INVALID",a[a.DT_FLOAT=1]="DT_FLOAT",a[a.DT_DOUBLE=2]="DT_DOUBLE",a[a.DT_INT32=3]="DT_INT32",a[a.DT_UINT8=4]="DT_UINT8",a[a.DT_INT16=5]="DT_INT16",a[a.DT_INT8=6]="DT_INT8",a[a.DT_STRING=7]="DT_STRING",a[a.DT_COMPLEX64=8]="DT_COMPLEX64",a[a.DT_INT64=9]="DT_INT64",a[a.DT_BOOL=10]="DT_BOOL",a[a.DT_QINT8=11]="DT_QINT8",a[a.DT_QUINT8=12]="DT_QUINT8",a[a.DT_QINT32=13]="DT_QINT32",a[a.DT_BFLOAT16=14]="DT_BFLOAT16",a[a.DT_QINT16=15]="DT_QINT16",a[a.DT_QUINT16=16]="DT_QUINT16",a[a.DT_UINT16=17]="DT_UINT16",a[a.DT_COMPLEX128=18]="DT_COMPLEX128",a[a.DT_HALF=19]="DT_HALF",a[a.DT_RESOURCE=20]="DT_RESOURCE",a[a.DT_VARIANT=21]="DT_VARIANT",a[a.DT_UINT32=22]="DT_UINT32",a[a.DT_UINT64=23]="DT_UINT64",a[a.DT_FLOAT_REF=101]="DT_FLOAT_REF",a[a.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",a[a.DT_INT32_REF=103]="DT_INT32_REF",a[a.DT_UINT8_REF=104]="DT_UINT8_REF",a[a.DT_INT16_REF=105]="DT_INT16_REF",a[a.DT_INT8_REF=106]="DT_INT8_REF",a[a.DT_STRING_REF=107]="DT_STRING_REF",a[a.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",a[a.DT_INT64_REF=109]="DT_INT64_REF",a[a.DT_BOOL_REF=110]="DT_BOOL_REF",a[a.DT_QINT8_REF=111]="DT_QINT8_REF",a[a.DT_QUINT8_REF=112]="DT_QUINT8_REF",a[a.DT_QINT32_REF=113]="DT_QINT32_REF",a[a.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",a[a.DT_QINT16_REF=115]="DT_QINT16_REF",a[a.DT_QUINT16_REF=116]="DT_QUINT16_REF",a[a.DT_UINT16_REF=117]="DT_UINT16_REF",a[a.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",a[a.DT_HALF_REF=119]="DT_HALF_REF",a[a.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",a[a.DT_VARIANT_REF=121]="DT_VARIANT_REF",a[a.DT_UINT32_REF=122]="DT_UINT32_REF",a[a.DT_UINT64_REF=123]="DT_UINT64_REF",(Xh=(Xh={}).CheckpointFormatVersion||(Xh.CheckpointFormatVersion={}))[Xh.LEGACY=0]="LEGACY",Xh[Xh.V1=1]="V1",Xh[Xh.V2=2]="V2",{});function o0(e){return i0[e]}function B(e,t,n,r,a){var s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){var i=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?i+1:s.inputIndexEnd;if("tensor"===s.type)return u0(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type){const l=t.inputNames.slice(i,o);return l.map(e=>u0(e,n,r,a))}const u=u0(t.inputNames.slice(i)[0],n,r,a);o=u.dataSync();return"number"===s.type?o[0]:ve(u.shape,o)}i=t.attrParams[e];return i&&i.value}function u0(e,t,n,r){const[a,s]=h0(e);if(null!=r){e=r.getHashTableHandleByName(a);if(null!=e)return e}r=n.currentContextIds.find(e=>!!t[c0(a,e)]);return void 0!==r?t[c0(a,r)][s]:void 0}function l0(e,t){var[e,n,r]=h0(e);return[c0(e,t&&t.currentContextId),n,r]}function c0(e,t){return t?e+"-"+t:e}function h0(e){var t=e.split(":");if(1===t.length)return[e,0,void 0];var e=t[0],n=3===t.length?t[1]:void 0;return[e,Number(t[t.length-1]),n]}function p0(e,t,n){let r=B("pad",e,t,n);if("explicit"!==r)return r;{r=B("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}}function d0(e){return e.kept?e:ti(e)}var f0=Object.freeze({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),m0=Object.freeze({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),g0=Object.freeze({__proto__:null,json:[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]}),y0=Object.freeze({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]}),v0=Object.freeze({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),b0=Object.freeze({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),x0=Object.freeze({__proto__:null,json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]}),w0=Object.freeze({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),k0=Object.freeze({__proto__:null,json:[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]}),N0=Object.freeze({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]}),I0=Object.freeze({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),S0=Object.freeze({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]}),T0=Object.freeze({__proto__:null,json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]}),C0=Object.freeze({__proto__:null,json:[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]}),E0=Object.freeze({__proto__:null,json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]}),_0=Object.freeze({__proto__:null,json:[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]}),A0=Object.freeze({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),$0=Object.freeze({__proto__:null,json:[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]}),R0=Object.freeze({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]});class F0{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[f0,m0,g0,y0,v0,b0,x0,w0,k0,N0,I0,S0,T0,C0,E0,_0,A0,$0,R0],t=[].concat(...e.map(e=>e.json));this.opMappers=t.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(e=>{const a=i[e];a.inputNames.forEach((e,t)=>{var[e,,n]=l0(e);const r=i[e];null!=r.outputs&&-1!==(n=r.outputs.indexOf(n))&&(e=e+":"+n,a.inputNames[t]=e),a.inputs.push(r),r.children.push(a)})}),0===Object.keys(c).length?h.forEach(e=>{e=i[e];0===e.children.length&&u.push(e)}):Object.keys(c).forEach(e=>{var[t]=l0(e);const n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))}),0<Object.keys(l).length?Object.keys(l).forEach(e=>{var[t]=l0(e);const n=i[t];n&&(n.signatureKey=l[e],o.push(n))}):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const d={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return 0<s.length&&(d.initNodes=s),d}mapSignatureEntries(n){return Object.keys(n||{}).reduce((e,t)=>(e[n[t].name]=t,e),{})}mapNode(a){const e=o0(a.op)||this.opMappers[a.op]||{},t=(null==a.attr&&(a.attr={}),{name:a.name,op:a.op,category:e.category,inputNames:(a.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:a.attr,outputs:e.outputs});return null!=e.inputs&&(t.inputParams=e.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=e.attrs&&(t.attrParams=e.attrs.reduce((e,t)=>{var n=t.type;let r=void 0;switch(t.type){case"string":void 0===(r=O0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=O0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"string[]":void 0===(r=j0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=j0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"number":void 0===(r=L0(a.attr,t.tfName,t.defaultValue||0))&&t.tfDeprecatedName&&(r=L0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"number[]":void 0===(r=G0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=G0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"bool":void 0===(r=M0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=M0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"bool[]":void 0===(r=q0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=q0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"shape":void 0===(r=U0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=U0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"shape[]":void 0===(r=H0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=H0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"dtype":void 0===(r=B0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=B0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"dtype[]":void 0===(r=W0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=W0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"func":void 0===(r=P0(a.attr,t.tfName,t.defaultValue))&&t.tfDeprecatedName&&(r=P0(a.attr,t.tfDeprecatedName,t.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${t.type} for op: `+a.op)}return e[t.name]={value:r,type:n},e},{})),t}mapFunction(e){const t=e.nodeDef;const n=[];let s={};null!=t&&(s=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const r=[],a=[],i=(e.signature.inputArg.forEach(e=>{var[t]=l0(e.name);const n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:z0(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n}),Object.keys(s)),o=(i.forEach(e=>{const a=s[e];a.inputNames.forEach((e,t)=>{var[e,,n]=l0(e);const r=s[e];null!=r.outputs&&-1!==(n=r.outputs.indexOf(n))&&(e=e+":"+n,a.inputNames[t]=e),a.inputs.push(r),r.children.push(a)})}),e.ret);e.signature.outputArg.forEach(e=>{var[e,t]=l0(o[e.name]);const n=s[e];null!=n&&(n.defaultOutput=t,a.push(n))});e=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:e}}mapArgsToSignature(n){return{methodName:n.signature.name,inputs:n.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:n.signature.outputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t,n.ret),e),{})}}mapArgToTensorInfo(e,t){let n=e.name;return{name:n=null!=t?t[n]:n,dtype:e.type}}}function D0(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=N.global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function O0(e,t,n,r=!1){e=e[t];return null!=e?D0(e.s,r):n}function M0(e,t,n){e=e[t];return e?e.b:n}function L0(e,t,n){e=e[t]||{},t=null!=e.i?e.i:null!=e.f?e.f:n;return"number"==typeof t?t:parseInt(t,10)}function z0(e){switch(e="string"==typeof e?a0[e]:e){case a0.DT_FLOAT:case a0.DT_HALF:return"float32";case a0.DT_INT32:case a0.DT_INT64:case a0.DT_INT8:case a0.DT_UINT8:return"int32";case a0.DT_BOOL:return"bool";case a0.DT_DOUBLE:return"float32";case a0.DT_STRING:return"string";default:return null}}function P0(e,t,n){e=e[t];return e&&e.func?e.func.name:n}function B0(e,t,n){e=e[t];return e&&e.type?z0(e.type):n}function W0(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>z0(e)):n}function V0(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function U0(e,t,n){e=e[t];return e&&e.shape?V0(e.shape):n}function G0(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function j0(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>D0(e,r)):n}function H0(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>V0(e)):n}function q0(e,t,n){e=e[t];return e&&e.list&&e.list.b?e.list.b:n}class K0{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return u0(e,this.tensorMap,this.context)}getAttr(e,t){var n=this.node.rawAttrs[e];if(null!=n.tensor)return u0(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return L0(this.node.rawAttrs,e,t);if(null!=n.s)return O0(this.node.rawAttrs,e,t);if(null!=n.b)return M0(this.node.rawAttrs,e,t);if(null!=n.shape)return U0(this.node.rawAttrs,e,t);if(null!=n.type)return B0(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return G0(this.node.rawAttrs,e,t);if(null!=n.list.s)return j0(this.node.rawAttrs,e,t);if(null!=n.list.shape)return H0(this.node.rawAttrs,e,t);if(null!=n.list.b)return q0(this.node.rawAttrs,e,t);if(null!=n.list.type)return W0(this.node.rawAttrs,e,t)}return t}}function X0(t,n,r=""){if("number"!=typeof t&&"number"!=typeof n){z(t.length===n.length,()=>r+` Shapes ${t} and ${n} must match`);for(let e=0;e<t.length;e++){var a=t[e],s=n[e];z(a<0||s<0||a===s,()=>r+` Shapes ${t} and ${n} must match`)}}}function Y0(e){return"number"!=typeof e&&!e.some(e=>e<0)}function J0(e,t,n){let r=Z0(e,n);e=!Y0(r);if(e&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(e&&t.forEach(e=>{r=Z0(e.shape,r)}),Y0(r))return r;throw new Error("Non-fully-defined elementShape: "+r)}function Z0(t,n){if("number"==typeof t)return n;if("number"==typeof n)return t;if(t.length!==n.length)throw new Error(`Incompatible ranks during merge: ${t} vs. `+n);const r=[];for(let e=0;e<t.length;++e){var a=t[e],s=n[e];if(0<=a&&0<=s&&a!==s)throw new Error(`Incompatible shape during merge: ${t} vs. `+n);r[e]=0<=a?a:s}return r}class Q0{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=P(0),uo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: `+this.size());const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read `+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: `+this.maxSize);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),X0(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);uo(n.tensor=t),n.written=!0,this.tensors[e]=n}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,`+`because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((e,t)=>this.write(e,n[t]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype `+e);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return vs([],[0].concat(this.elementShape));e=this.readMany(t);return X0(this.elementShape,e[0].shape,"TensorArray shape mismatch: "),Dc(e,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype `+e);if(0===this.size())return vs([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);e=this.readMany(t);return X0(this.elementShape,e[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${e[0].shape})`),Vo(e,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype `+t.dtype);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. `+t.shape[0]);var n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,jc(t,0))}split(r,a){if(a.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype `+a.dtype);let s=0;const i=r.map(e=>s+=e);if(s!==a.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: `+a.shape);if(!this.dynamicSize&&r.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${r.length}), `+"and the TensorArray is not marked as dynamically resizeable");const o=0===s?0:a.size/s,u=[],t=(O(()=>{a=M(a,[1,s,o]);for(let e=0;e<r.length;++e){var t=[0,0===e?0:i[e-1],0],n=[1,r[e],o];u[e]=M(Go(a,t,n),this.elementShape)}return u}),[]);for(let e=0;e<r.length;e++)t[e]=e;this.writeMany(t,u)}}class ex{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements `+e.dtype);X0(t,e.shape,"TensorList shape mismatch: "),uo(e)}),this.idTensor=P(0),this.maxNumElements=r,uo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ex([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements `+this.elementDtype);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);X0(e,this.elementShape,"TensorList shape mismatch: ");const r=J0(this.elementShape,this.tensors,e);return O(()=>{var e=this.tensors.map(e=>M(e,r));return Dc(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements `+this.elementDtype);if(0===this.size())throw new Error("Trying to pop from an empty list.");var t=J0(this.elementShape,this.tensors,e),n=this.tensors.pop();return X0(n.shape,e,"TensorList shape mismatch: "),M(n,t)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements `+this.elementDtype);if(X0(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");uo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements `+this.elementDtype);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);X0(this.tensors[e].shape,t,"TensorList shape mismatch: ");n=J0(this.elementShape,this.tensors,t);return M(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements `+this.elementDtype);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);X0(this.elementShape,t.shape,"TensorList shape mismatch: "),uo(t),this.tensors[e]=t}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements `+this.elementDtype);X0(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=J0(this.elementShape,this.tensors,n);return 0===t.length?vs([],[0].concat(r)):O(()=>{var e=t.map(e=>M(this.tensors[e],r));return Dc(e,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype `+e);X0(this.elementShape,t,"TensorList shape mismatch: ");const n=J0(this.elementShape,this.tensors,t);return 0===this.size()?vs([],[0].concat(n)):O(()=>{var e=this.tensors.map(e=>M(e,n));return Vo(e,0)})}}const tx=async(n,r,a)=>{switch(n.op){case"If":case"StatelessIf":{var t=B("thenBranch",n,r,a),s=B("elseBranch",n,r,a);const e=B("cond",n,r,a);var i=B("args",n,r,a);return((await e.data())[0]?a.functionMap[t]:a.functionMap[s]).executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap)}case"While":case"StatelessWhile":{var o=B("body",n,r,a),u=B("cond",n,r,a);const d=B("args",n,r,a),f=await a.functionMap[u].executeFunctionAsync(d,a.tensorArrayMap,a.tensorListMap),m=d.map(e=>e.id);let e=await f[0].data(),t=(f.forEach(e=>{e.kept||-1!==m.indexOf(e.id)||e.dispose()}),d);for(;e[0];){const g=t,y=(t=await a.functionMap[o].executeFunctionAsync(t,a.tensorArrayMap,a.tensorListMap)).map(e=>e.id),v=(g.forEach(e=>{e.kept||-1!==m.indexOf(e.id)||-1!==y.indexOf(e.id)||e.dispose()}),await a.functionMap[u].executeFunctionAsync(t,a.tensorArrayMap,a.tensorListMap));e=await v[0].data(),v.forEach(e=>{e.kept||-1!==m.indexOf(e.id)||-1!==y.indexOf(e.id)||e.dispose()})}return t}case"LoopCond":return[d0(B("pred",n,r,a))];case"Switch":{const b=B("pred",n,r,a);let e=B("data",n,r,a);return e.kept||(e=d0(e)),(await b.data())[0]?[void 0,e]:[e,void 0]}case"Merge":t=n.inputNames.find(e=>void 0!==u0(e,r,a));return t?[d0(u0(t,r,a))]:void 0;case"Enter":s=B("frameName",n,r,a),i=B("tensor",n,r,a);return a.enterFrame(s),[d0(i)];case"Exit":t=B("tensor",n,r,a);return a.exitFrame(),[d0(t)];case"NextIteration":s=B("tensor",n,r,a);return a.nextIteration(),[d0(s)];case"TensorArrayV3":var i=B("size",n,r,a),t=B("dtype",n,r,a),s=B("elementShape",n,r,a),l=B("dynamicSize",n,r,a),c=B("clearAfterRead",n,r,a),h=B("identicalElementShapes",n,r,a),p=B("name",n,r,a),p=new Q0(p,t,i,s,h,l,c);return a.addTensorArray(p),[p.idTensor,P(1)];case"TensorArrayWriteV3":{t=B("tensorArrayId",n,r,a),i=B("index",n,r,a),s=B("tensor",n,r,a);const x=a.getTensorArray(t.id);return x.write(i,s),[x.idTensor]}case"TensorArrayReadV3":{h=B("tensorArrayId",n,r,a),l=B("index",n,r,a);const w=a.getTensorArray(h.id);return[w.read(l)]}case"TensorArrayGatherV3":{c=B("tensorArrayId",n,r,a),p=B("indices",n,r,a),t=B("dtype",n,r,a);const k=a.getTensorArray(c.id);return[k.gather(p,t)]}case"TensorArrayScatterV3":{i=B("tensorArrayId",n,r,a),s=B("indices",n,r,a),h=B("tensor",n,r,a);const N=a.getTensorArray(i.id);return N.scatter(s,h),[N.idTensor]}case"TensorArrayConcatV3":{l=B("tensorArrayId",n,r,a);const I=a.getTensorArray(l.id);c=B("dtype",n,r,a);return[I.concat(c)]}case"TensorArraySplitV3":{p=B("tensorArrayId",n,r,a),t=B("tensor",n,r,a),i=B("lengths",n,r,a);const S=a.getTensorArray(p.id);return S.split(i,t),[S.idTensor]}case"TensorArraySizeV3":{s=B("tensorArrayId",n,r,a);const T=a.getTensorArray(s.id);return[P(T.size(),"int32")]}case"TensorArrayCloseV3":{h=B("tensorArrayId",n,r,a);const C=a.getTensorArray(h.id);return C.clearAndClose(),[C.idTensor]}case"TensorListSetItem":{l=B("tensorListId",n,r,a),c=B("index",n,r,a),p=B("tensor",n,r,a);const E=a.getTensorList(l.id);return E.setItem(c,p),[E.idTensor]}case"TensorListGetItem":{i=B("tensorListId",n,r,a),t=B("index",n,r,a),s=B("elementShape",n,r,a),h=B("elementDType",n,r,a);const _=a.getTensorList(i.id);return[_.getItem(t,s,h)]}case"TensorListScatterV2":case"TensorListScatter":l=B("indices",n,r,a),c=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. `+e.shape[0]);var a=Math.max(...t);if(null!=r&&-1!==r&&r<=a)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new ex([],n,e.dtype,r),i=jc(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(B("tensor",n,r,a),l,B("elementShape",n,r,a),B("numElements",n,r,a));return a.addTensorList(c),[c.idTensor];case"TensorListReserve":case"EmptyTensorList":{p=B("elementShape",n,r,a),i=B("elementDType",n,r,a);let e;t=B(e="TensorListReserve"===n.op?"numElements":"maxNumElements",n,r,a),c=(s=p,h=i,l=t,new ex([],s,h,l));return a.addTensorList(c),[c.idTensor]}case"TensorListGather":{p=B("tensorListId",n,r,a),i=B("indices",n,r,a),t=B("elementShape",n,r,a),c=B("elementDType",n,r,a);const A=a.getTensorList(p.id);return[A.gather(i,c,t)]}case"TensorListStack":{p=B("tensorListId",n,r,a),i=B("elementShape",n,r,a),c=B("elementDType",n,r,a),t=B("numElements",n,r,a);const $=a.getTensorList(p.id);return[$.stack(i,c,t)]}case"TensorListFromTensor":p=function(e,t,n){var r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements `+n);return X0(e.shape.slice(1),t,"TensorList shape mismatch: "),n=jc(e),new ex(n,t,r)}(B("tensor",n,r,a),B("elementShape",n,r,a),B("elementDType",n,r,a));return a.addTensorList(p),[p.idTensor];case"TensorListConcat":{i=B("tensorListId",n,r,a);const R=a.getTensorList(i.id);c=B("dtype",n,r,a),t=B("elementShape",n,r,a);return[R.concat(c,t)]}case"TensorListPushBack":{p=B("tensorListId",n,r,a),i=B("tensor",n,r,a);const F=a.getTensorList(p.id);return F.pushBack(i),[F.idTensor]}case"TensorListPopBack":{c=B("tensorListId",n,r,a),t=B("elementShape",n,r,a),p=B("elementDType",n,r,a);const D=a.getTensorList(c.id);return[D.popBack(t,p)]}case"TensorListSplit":i=B("tensor",n,r,a),c=B("elementShape",n,r,a),t=function(a,s,e){let i=0;const o=s.map(e=>i+=e);if(i!==a.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${i}, and tensor's shape is: `+a.shape);const u=Z0(a.shape.slice(1),e),l=0===i?0:a.size/i;var t=O(()=>{const t=[];a=M(a,[1,i,l]);for(let e=0;e<s.length;++e){var n=[0,0===e?0:o[e-1],0],r=[1,s[e],l];t[e]=M(Go(a,n,r),u)}return a.dispose(),t});const n=new ex([],e,a.dtype,s.length);for(let e=0;e<t.length;e++)n.setItem(e,t[e]);return n}(i,B("lengths",n,r,a),c);return a.addTensorList(t),[t.idTensor];default:throw TypeError(`Node type ${n.op} is not implemented`)}};function nx(e,t,n){var[r,a]=B("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,r="fusedbatchnorm"===r,u=B("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(r)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");o=B("strides",e,t,n),s=p0(e,t,n),u=B("dataFormat",e,t,n).toUpperCase(),r=B("dilations",e,t,n);let[l,c]=B("args",e,t,n);i&&(c=l,l=void 0);i=B("leakyreluAlpha",e,t,n);return{stride:o,pad:s,dataFormat:u,dilations:r,biasArg:l,preluArg:c,activationFunc:a,leakyreluAlpha:i}}function rx(e,t,n){return{boxes:B("boxes",e,t,n),scores:B("scores",e,t,n),maxOutputSize:B("maxOutputSize",e,t,n),iouThreshold:B("iouThreshold",e,t,n),scoreThreshold:B("scoreThreshold",e,t,n),softNmsSigma:B("softNmsSigma",e,t,n)}}class ax{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=P(0),this.tensorMap=new Map,uo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return P(this.size(),"int32")}async import(e,s){this.checkKeyAndValueTensor(e,s);const i=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),O(()=>{var t=jc(s);const n=i.length,e=t.length;z(n===e,()=>"The number of elements doesn't match, keys has "+`${n} elements, the values has ${e} `+"elements.");for(let e=0;e<n;e++){var r=i[e],a=t[e];uo(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,r){this.checkKeyAndValueTensor(e,r);const a=await e.data();return O(()=>{const t=[];for(let e=0;e<a.length;e++){var n=a[e],n=this.findWithDefault(n,r);t.push(n)}return Dc(t)})}findWithDefault(e,t){e=this.tensorMap.get(e);return null!=e?e:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}function sx(e,t,n,r){const a=((f,m,g)=>{switch(f.category){case"arithmetic":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[E(B("a",e,t,n),B("b",e,t,n))];case"AddN":return[go(B("tensors",e,t,n))];case"FloorMod":case"Mod":return[_l(B("a",e,t,n),B("b",e,t,n))];case"Mul":return[w(B("a",e,t,n),B("b",e,t,n))];case"RealDiv":case"Div":return[y(B("a",e,t,n),B("b",e,t,n))];case"DivNoNan":return[Tu(B("a",e,t,n),B("b",e,t,n))];case"FloorDiv":return[ho(B("a",e,t,n),B("b",e,t,n))];case"Sub":return[k(B("a",e,t,n),B("b",e,t,n))];case"Minimum":return[Cl(B("a",e,t,n),B("b",e,t,n))];case"Maximum":return[kl(B("a",e,t,n),B("b",e,t,n))];case"Pow":return[Gl(B("a",e,t,n),B("b",e,t,n))];case"SquaredDifference":return[Rc(B("a",e,t,n),B("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"basic_math":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Abs":case"ComplexAbs":return[po(B("x",e,t,n))];case"Acos":return[fo(B("x",e,t,n))];case"Acosh":return[mo(B("x",e,t,n))];case"Asin":return[wo(B("x",e,t,n))];case"Asinh":return[ko(B("x",e,t,n))];case"Atan":return[No(B("x",e,t,n))];case"Atan2":return[Io(B("x",e,t,n),B("y",e,t,n))];case"Atanh":return[So(B("x",e,t,n))];case"Ceil":return[tu(B("x",e,t,n))];case"Complex":return[gs(B("real",e,t,n),B("imag",e,t,n))];case"Cos":return[fu(B("x",e,t,n))];case"Cosh":return[mu(B("x",e,t,n))];case"Elu":return[_u(B("x",e,t,n))];case"Erf":return[Au(B("x",e,t,n))];case"Exp":return[$u(B("x",e,t,n))];case"Expm1":return[Fu(B("x",e,t,n))];case"Floor":return[Lu(B("x",e,t,n))];case"Log":return[Yu(B("x",e,t,n))];case"Log1p":return[Ju(B("x",e,t,n))];case"Imag":return[Wu(B("x",e,t,n))];case"Neg":return[tl(B("x",e,t,n))];case"Reciprocal":return[lc(B("x",e,t,n))];case"Real":return[uc(B("x",e,t,n))];case"Relu":return[cc(B("x",e,t,n))];case"Round":return[dc(B("x",e,t,n))];case"Selu":return[mc(B("x",e,t,n))];case"Sigmoid":return[Uo(B("x",e,t,n))];case"Sin":return[bc(B("x",e,t,n))];case"Sign":return[vc(B("x",e,t,n))];case"Sinh":return[xc(B("x",e,t,n))];case"Softplus":return[nl(B("x",e,t,n))];case"Sqrt":return[$c(B("x",e,t,n))];case"Square":return[Al(B("x",e,t,n))];case"Tanh":return[jo(B("x",e,t,n))];case"Tan":return[Lc(B("x",e,t,n))];case"ClipByValue":return[nu(B("x",e,t,n),B("clipValueMin",e,t,n),B("clipValueMax",e,t,n))];case"Relu6":return[hc(B("x",e,t,n))];case"Rsqrt":return[fc(u0(e.inputNames[0],t,n))];case"Prod":return[Hl(B("x",e,t,n),B("axes",e,t,n))];case"LeakyRelu":return[ju(B("x",e,t,n),B("alpha",e,t,n))];case"Prelu":return[jl(B("x",e,t,n),B("alpha",e,t,n))];case"IsNan":return[Gu(u0(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"control":return tx(f,m,g);case"convolution":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Conv1D":var r=B("stride",e,t,n),a=B("pad",e,t,n),s=B("dataFormat",e,t,n).toUpperCase(),i=B("dilation",e,t,n);return[uu(B("x",e,t,n),B("filter",e,t,n),r,a,s,i)];case"Conv2D":r=B("strides",e,t,n),a=p0(e,t,n),s=B("dataFormat",e,t,n).toUpperCase(),i=B("dilations",e,t,n);return[ou(B("x",e,t,n),B("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])];case"_FusedConv2D":var{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=nx(e,t,n);return[lh({x:B("x",e,t,n),filter:B("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})];case"FusedDepthwiseConv2dNative":var{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=nx(e,t,n);return[ph({x:B("x",e,t,n),filter:B("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})];case"Conv2DBackpropInput":case"Conv2dTranspose":r=B("outputShape",e,t,n),a=B("strides",e,t,n),s=p0(e,t,n);return[cu(B("x",e,t,n),B("filter",e,t,n),r,[a[1],a[2]],s)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":i=B("strides",e,t,n),o=p0(e,t,n),u=B("dilations",e,t,n),l=B("dataFormat",e,t,n).toUpperCase();return[xu(B("input",e,t,n),B("filter",e,t,n),[i[1],i[2]],o,l,[u[1],u[2]])];case"Conv3D":c=B("strides",e,t,n),r=B("pad",e,t,n),a=B("dataFormat",e,t,n).toUpperCase(),s=B("dilations",e,t,n);return[hu(B("x",e,t,n),B("filter",e,t,n),[c[1],c[2],c[3]],r,a,[s[1],s[2],s[3]])];case"AvgPool":i=B("strides",e,t,n),o=B("pad",e,t,n),l=B("kernelSize",e,t,n);return[Bo(B("x",e,t,n),[l[1],l[2]],[i[1],i[2]],o)];case"MaxPool":u=B("strides",e,t,n),c=B("pad",e,t,n),r=B("kernelSize",e,t,n);return[bl(B("x",e,t,n),[r[1],r[2]],[u[1],u[2]],c)];case"MaxPoolWithArgmax":var a=B("strides",e,t,n),s=B("pad",e,t,n),l=B("kernelSize",e,t,n),i=B("includeBatchInIndex",e,t,n),{result:o,indexes:r}=wl(B("x",e,t,n),[l[1],l[2]],[a[1],a[2]],s,i);return[o,r];case"AvgPool3D":u=B("strides",e,t,n),c=B("pad",e,t,n),l=B("kernelSize",e,t,n);return[Wo(B("x",e,t,n),[l[1],l[2],l[3]],[u[1],u[2],u[3]],c)];case"MaxPool3D":a=B("strides",e,t,n),s=B("pad",e,t,n),i=B("kernelSize",e,t,n);return[xl(B("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)];case"Dilation2D":o=B("strides",e,t,n),r=B("pad",e,t,n),l=B("dilations",e,t,n),u=o[1],c=o[2],i=l[1],a=l[2];return[ku(B("x",e,t,n),B("filter",e,t,n),[u,c],r,[i,a],"NHWC")];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"creation":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Fill":var r=B("shape",e,t,n),a=B("dtype",e,t,n);return[Mu(r,B("value",e,t,n),a)];case"LinSpace":return[Ku(B("start",e,t,n),B("stop",e,t,n),B("num",e,t,n))];case"Multinomial":var r=B("logits",e,t,n),a=B("numSamples",e,t,n),s=B("seed",e,t,n);return[Fl(r,a,s)];case"OneHot":var r=B("indices",e,t,n),a=B("depth",e,t,n),s=B("onValue",e,t,n),i=B("offValue",e,t,n);return[yi(r,a,s,i)];case"Ones":return[Sl(B("shape",e,t,n),B("dtype",e,t,n))];case"OnesLike":return[Ol(B("x",e,t,n))];case"RandomUniform":return[ic(B("shape",e,t,n),B("minval",e,t,n),B("maxval",e,t,n),B("dtype",e,t,n))];case"Range":return[oc(B("start",e,t,n),B("stop",e,t,n),B("step",e,t,n),B("dtype",e,t,n))];case"TruncatedNormal":r=B("shape",e,t,n),a=B("mean",e,t,n),s=B("stdDev",e,t,n),i=B("seed",e,t,n);return[Vc(r,a,s,B("dtype",e,t,n),i)];case"Zeros":return[Il(B("shape",e,t,n),B("dtype",e,t,n))];case"ZerosLike":return[Su(B("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":var{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=rx(e,t,n),r=await op.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[r.selectedIndices,r.selectedScores];case"NonMaxSuppressionV4":var{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=rx(e,t,n),r=B("padToMaxOutputSize",e,t,n),a=await op.nonMaxSuppressionPaddedAsync(a,s,i,o,u,r);return[a.selectedIndices,a.validOutputs];case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":var{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:r}=rx(e,t,n);return[await op.nonMaxSuppressionAsync(s,i,o,u,r)];case"Where":{const l=x(B("condition",e,t,n),"bool");a=[await Kc(l)];return l.dispose(),a}case"ListDiff":return yc(B("x",e,t,n),B("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(f,m,g);case"evaluation":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"TopKV2":var r=B("x",e,t,n),a=B("k",e,t,n),s=B("sorted",e,t,n),r=Wc(r,a,s);return[r.values,r.indices];case"Unique":a=B("x",e,t,n),s=Uc(a);return[s.values,s.indices];case"UniqueV2":r=B("x",e,t,n),a=B("axis",e,t,n),s=Uc(r,a);return[s.values,s.indices];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"image":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"ResizeBilinear":var r=B("images",e,t,n),a=B("size",e,t,n),s=B("alignCorners",e,t,n),i=B("halfPixelCenters",e,t,n);return[op.resizeBilinear(r,[a[0],a[1]],s,i)];case"ResizeNearestNeighbor":r=B("images",e,t,n),a=B("size",e,t,n),s=B("alignCorners",e,t,n),i=B("halfPixelCenters",e,t,n);return[op.resizeNearestNeighbor(r,[a[0],a[1]],s,i)];case"CropAndResize":var r=B("image",e,t,n),a=B("boxes",e,t,n),s=B("boxInd",e,t,n),i=B("cropSize",e,t,n),o=B("method",e,t,n),u=B("extrapolationValue",e,t,n);return[op.cropAndResize(r,a,s,i,o,u)];case"ImageProjectiveTransformV3":{r=B("images",e,t,n),a=B("transforms",e,t,n),s=B("outputShape",e,t,n),i=B("fillValue",e,t,n);const l=B("interpolation",e,t,n),c=B("fillMode",e,t,n);return[op.transform(r,a,l.toLowerCase(),c.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"graph":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":var r=B("default",e,t,n);return[u0(e.name,t,n)||r];case"Placeholder":return[u0(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[d0(B("x",e,t,n))];case"IdentityN":return B("x",e,t,n).map(e=>d0(e));case"Snapshot":return[d0(B("x",e,t,n))];case"Shape":return[zc(B("x",e,t,n).shape,"int32")];case"ShapeN":return B("x",e,t,n).map(e=>zc(e.shape));case"Size":return[P(B("x",e,t,n).size,"int32")];case"Rank":return[P(B("x",e,t,n).rank,"int32")];case"NoOp":return[P(1)];case"Print":r=B("x",e,t,n);const i=B("data",e,t,n);var a=B("message",e,t,n),s=B("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,s));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"logical":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Equal":return[Nu(B("a",e,t,n),B("b",e,t,n))];case"NotEqual":return[Dl(B("a",e,t,n),B("b",e,t,n))];case"Greater":return[Pu(B("a",e,t,n),B("b",e,t,n))];case"GreaterEqual":return[Bu(B("a",e,t,n),B("b",e,t,n))];case"Less":return[Hu(B("a",e,t,n),B("b",e,t,n))];case"LessEqual":return[qu(B("a",e,t,n),B("b",e,t,n))];case"LogicalAnd":return[ml(B("a",e,t,n),B("b",e,t,n))];case"LogicalNot":return[gl(B("a",e,t,n))];case"LogicalOr":return[yl(B("a",e,t,n),B("b",e,t,n))];case"Select":case"SelectV2":return[Iu(B("condition",e,t,n),B("a",e,t,n),B("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"matrices":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[T(B("a",e,t,n),B("b",e,t,n),B("transposeA",e,t,n),B("transposeB",e,t,n))];case"Einsum":return[Eu(B("equation",e,t,n),...B("tensors",e,t,n))];case"Transpose":return[vi(B("x",e,t,n),B("perm",e,t,n))];case"_FusedMatMul":var[r,a]=B("fusedOps",e,t,n),r="biasadd"===r,s="prelu"===a,i=B("numArgs",e,t,n),o=B("leakyreluAlpha",e,t,n);if(r){if(s&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var[r,s]=B("args",e,t,n);return[dh({a:B("a",e,t,n),b:B("b",e,t,n),transposeA:B("transposeA",e,t,n),transposeB:B("transposeB",e,t,n),bias:r,activation:a,preluActivationWeights:s,leakyreluAlpha:o})];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"normalization":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Ko(B("x",e,t,n),B("mean",e,t,n),B("variance",e,t,n),B("offset",e,t,n),B("scale",e,t,n),B("epsilon",e,t,n))];case"LRN":return[Xu(B("x",e,t,n),B("radius",e,t,n),B("bias",e,t,n),B("alpha",e,t,n),B("beta",e,t,n))];case"Softmax":return[Sc(B("x",e,t,n))];case"LogSoftmax":return[sl(B("x",e,t,n))];case"SparseToDense":return[Zc(B("sparseIndices",e,t,n),B("outputShape",e,t,n),B("sparseValues",e,t,n),B("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"reduction":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Max":var r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[al(B("x",e,t,n),r,a)];case"Mean":r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[Nl(B("x",e,t,n),r,a)];case"Min":r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[Tl(B("x",e,t,n),r,a)];case"Sum":r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[b(B("x",e,t,n),r,a)];case"All":r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[yo(B("x",e,t,n),r,a)];case"Any":r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[vo(B("x",e,t,n),r,a)];case"ArgMax":r=B("axis",e,t,n);return[bo(B("x",e,t,n),r)];case"ArgMin":a=B("axis",e,t,n);return[xo(B("x",e,t,n),a)];case"Prod":r=B("axis",e,t,n),a=B("keepDims",e,t,n);return[Hl(B("x",e,t,n),r,a)];case"Cumprod":var r=B("axis",e,t,n),a=B("exclusive",e,t,n),s=B("reverse",e,t,n);return[gu(B("x",e,t,n),r,a,s)];case"Cumsum":r=B("axis",e,t,n),a=B("exclusive",e,t,n),s=B("reverse",e,t,n);return[yu(B("x",e,t,n),r,a,s)];case"Bincount":r=B("x",e,t,n),a=B("weights",e,t,n),s=B("size",e,t,n);return[Zo(r,a,s)];case"DenseBincount":var r=B("x",e,t,n),a=B("weights",e,t,n),s=B("size",e,t,n),i=B("binaryOutput",e,t,n);return[vu(r,a,s,i)];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"slice_join":return O(()=>{var s=f,i=m,o=g;switch(s.op){case"ConcatV2":case"Concat":{var t=B("n",s,i,o),n=B("axis",s,i,o);let e=B("tensors",s,i,o);return e=e.slice(0,t),[Vo(e,n)]}case"Gather":t=B("x",s,i,o),n=B("indices",s,i,o);return[zu(t,x(n,"int32"),0)];case"GatherV2":var t=B("axis",s,i,o),n=B("batchDims",s,i,o),e=B("x",s,i,o),r=B("indices",s,i,o);return[zu(e,x(r,"int32"),t,n)];case"Reverse":{var a=B("dims",s,i,o);const d=[];for(let e=0;e<a.length;e++)a[e]&&d.push(e);e=B("x",s,i,o);return[pc(e,d)]}case"ReverseV2":r=B("axis",s,i,o),t=B("x",s,i,o);return[pc(t,r)];case"Slice":n=B("begin",s,i,o),e=B("size",s,i,o);return[Go(B("x",s,i,o),n,e)];case"StridedSlice":var t=B("begin",s,i,o),r=B("end",s,i,o),n=B("strides",s,i,o),e=B("beginMask",s,i,o),u=B("endMask",s,i,o),l=B("ellipsisMask",s,i,o),c=B("newAxisMask",s,i,o),h=B("shrinkAxisMask",s,i,o),p=B("x",s,i,o);return[Mc(p,t,r,n,e,u,l,c,h)];case"Pack":return O(()=>{var e=B("axis",s,i,o);const t=B("tensors",s,i,o),n=t[0].shape,r=Fc(t[0]).shape;var a=t.map(e=>{var t=ce(e.shape,n);if(t||ce(Fc(e).shape,r))return t?e:M(e,n);throw new Error("the input tensors shape does not match")});return[Dc(a,e)]});case"Unpack":p=B("axis",s,i,o),t=B("tensor",s,i,o);return jc(t,p);case"Tile":r=B("reps",s,i,o);return[Du(B("x",s,i,o),r)];case"Split":case"SplitV":n=B("axis",s,i,o),e=B("numOrSizeSplits",s,i,o),u=B("x",s,i,o);return _c(u,e,n);case"ScatterNd":l=B("indices",s,i,o),c=B("values",s,i,o),h=B("shape",s,i,o);return[Jc(l,c,h)];case"GatherNd":t=B("x",s,i,o),p=B("indices",s,i,o);return[Qc(t,p)];case"SparseToDense":r=B("sparseIndices",s,i,o),u=B("outputShape",s,i,o),e=B("sparseValues",s,i,o),n=B("defaultValue",s,i,o);return[Zc(r,e,u,e.dtype===n.dtype?n:x(n,e.dtype))];default:throw TypeError(`Node type ${s.op} is not implemented`)}});case"sparse":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"SparseFillEmptyRows":var{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=lp.sparseFillEmptyRows(B("indices",e,t,n),B("values",e,t,n),B("denseShape",e,t,n),B("defaultValue",e,t,n));return[r,a,s,i];case"SparseReshape":var{outputIndices:r,outputShape:a}=lp.sparseReshape(B("inputIndices",e,t,n),B("inputShape",e,t,n),B("newShape",e,t,n));return[r,a];case"SparseSegmentMean":return[lp.sparseSegmentMean(B("data",e,t,n),B("indices",e,t,n),B("segmentIds",e,t,n))];case"SparseSegmentSum":return[lp.sparseSegmentSum(B("data",e,t,n),B("indices",e,t,n),B("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"spectral":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"FFT":return[Tc(B("x",e,t,n))];case"IFFT":return[Cc(B("x",e,t,n))];case"RFFT":return[Ac(B("x",e,t,n))];case"IRFFT":return[Ec(B("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"string":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"StringNGrams":var{nGrams:r,nGramsSplits:a}=cp.stringNGrams(B("data",e,t,n),B("dataSplits",e,t,n),B("separator",e,t,n),B("nGramWidths",e,t,n),B("leftPad",e,t,n),B("rightPad",e,t,n),B("padWidth",e,t,n),B("preserveShortSequences",e,t,n));return[r,a];case"StringSplit":var{indices:r,values:a,shape:s}=cp.stringSplit(B("input",e,t,n),B("delimiter",e,t,n),B("skipEmpty",e,t,n));return[r,a,s];case"StringToHashBucketFast":return[cp.stringToHashBucketFast(B("input",e,t,n),B("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"transformation":return O(()=>{var e=f,t=m,n=g;switch(e.op){case"Cast":return[x(B("x",e,t,n),B("dtype",e,t,n))];case"ExpandDims":var r=B("axis",e,t,n);return[Ru(B("x",e,t,n),r)];case"Squeeze":r=B("axis",e,t,n);return[Fc(B("x",e,t,n),r)];case"Reshape":return[M(B("x",e,t,n),B("shape",e,t,n))];case"MirrorPad":return[El(B("x",e,t,n),B("padding",e,t,n),B("mode",e,t,n))];case"PadV2":case"Pad":return[Ll(B("x",e,t,n),B("padding",e,t,n),B("constantValue",e,t,n))];case"SpaceToBatchND":var r=B("blockShape",e,t,n),a=B("paddings",e,t,n);return[Vl(B("x",e,t,n),r,a)];case"BatchToSpaceND":r=B("blockShape",e,t,n),a=B("crops",e,t,n);return[qo(B("x",e,t,n),r,a)];case"DepthToSpace":r=B("blockSize",e,t,n),a=B("dataFormat",e,t,n).toUpperCase();return[bu(B("x",e,t,n),r,a)];case"BroadcastTo":return[eu(B("x",e,t,n),B("shape",e,t,n))];case"BroadcastArgs":return[Qo(B("s0",e,t,n),B("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}});case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":var a=B("keyDType",e,t,n),s=B("valueDType",e,t,n),a=new ax(a,s);return r.addHashTable(e.name,a),[a.handle];case"LookupTableImport":case"LookupTableImportV2":{var s=B("tableHandle",e,t,n,r),a=B("keys",e,t,n),i=B("values",e,t,n);const o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{s=B("tableHandle",e,t,n,r),a=B("keys",e,t,n),i=B("defaultValue",e,t,n);const u=r.getHashTableById(s.id);return[await u.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{s=B("tableHandle",e,t,n,r);const l=r.getHashTableById(s.id);return[l.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(f,m,g,r);case"custom":const e=o0(f.op);if(e&&e.customExecutor)return e.customExecutor(new K0(f,m,g));throw TypeError(`Custom op ${f.op} is not registered.`);default:throw TypeError(`Unknown op '${f.op}'. File an issue at `+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return Se(a)?a.then(e=>[].concat(e)):[].concat(a)}class ix{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){var n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":e.frameName+"-"+e.iterationId).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&1<this.contexts.length))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&0<this.contexts.length))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}function ox(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map(e=>h0(e)[0]);let c=[];null!=r&&(c=r.map(e=>h0(e.name)[0]));const h=[...t];for(;0<h.length;){const d=h.pop();(hx(d)||(p=d,0<=lx.indexOf(p.op))||(p=d,0<=cx.indexOf(p.op)))&&null==i&&(i=d,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(d.name),null==n[d.name]&&-1===l.indexOf(d.name)&&-1===c.indexOf(d.name)&&(0===d.inputs.length?s.push(d.name):d.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))}))}var p;return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const ux=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],lx=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],cx=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function hx(e){return 0<=ux.indexOf(e.op)}class px{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new px(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){var e=Object.keys(t).map(e=>t[e].map(e=>e.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{var t=e.signatureKey||e.name;return e.defaultOutput?t+":"+e.defaultOutput:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){var n=ox(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has `+`the dynamic op '${a.op}'. Please use `+"model.executeAsync() instead. Alternatively, to avoid the "+`dynamic ops, specify the inputs [${s}]`);if(0<r.length)throw a=t.map(e=>e.name),s=Object.keys(e),new Error(`Cannot compute the outputs [${a}] from the provided inputs `+`[${s}]. Missing the following inputs: [${r}]`);{var i=this.graph,o=this.weightMap;const{usedNodes:u,inputs:l}=t=n,c=[],h=Object.keys(l).map(e=>h0(e)[0]).map(e=>i.nodes[e]),p=i.initNodes,d=(h.forEach(e=>{u.has(e.name)&&c.push(e)}),i.weights.forEach(e=>{u.has(e.name)&&c.push(e)}),null!=p&&p.forEach(e=>{u.has(e.name)&&c.push(e)}),new Set),f=[];for(;0<c.length;){const m=c.pop();d.add(m.name),o[m.name]||f.push(m),m.children.forEach(e=>{!d.has(e.name)&&u.has(e.name)&&e.inputs.every(e=>d.has(e.name))&&c.push(e)})}return f}}execute(o,e){o=this.mapInputs(o);const t=Object.keys(o).sort();this.checkInputs(o),this.checkInputShapeAndType(o),e=this.mapOutputs(e),this.checkOutputs(e);var n=t.map(e=>this.graph.nodes[h0(e)[0]]);const u=e.map(e=>h0(e)[0]);let r=u.map(e=>this.graph.nodes[e]);this.resetIntermediateTensors(),0===r.length&&(r=this._outputs);n=this.getCompilationKey(n,r);let l=this.compiledMap.get(n);null==l&&(l=this.compile(o,r),this.compiledMap.set(n,l));const c={},h={};return O(()=>{const t=new ix(this.weightMap,c,h,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(o).forEach(e=>{var[t,n]=h0(e);const r=[];r[n]=o[e],a[t]=r});var n=this.getFrozenTensorIds(a),r={};for(let e=0;e<l.length;e++){var s=l[e];if(!a[s.name]){var i=sx(s,a,t,this._resourceManager);if(Se(i))throw new Error(`The execution of the op '${s.op}' returned a promise. `+"Please use model.executeAsync() instead.");a[s.name]=i,this.checkTensorForDisposal(s.name,s,a,t,n,u,r)}}return null==this.parent&&t.dispose(n),e.map(e=>u0(e,a,t))})}getFrozenTensorIds(t){var e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(e=>e.map(e=>e.id)));return new Set(e)}checkTensorForDisposal(e,a,n,s,i,t,o){"control"!==a.category&&-1===t.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(o[e.id]=(o[e.id]||0)+a.children.length)}),a.inputs.forEach(e=>{if("control"!==e.category){e=e.name;const t=n[c0(e,s.currentContextId)];null!=t&&t.forEach(e=>{var t,n,r;!e||e.kept||i.has(e.id)||(1===(t=o[e.id])?(this.keepTensorForDebug?([n,r]=l0(a.name,s),this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][r]=e):e.dispose(),delete o[e.id]):null!=t&&o[e.id]--)})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(e=>{const t=this.tensorsMap[e];t.forEach(e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach(e=>e.dispose()),delete this.intermediateTensors[e]}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=N.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new ix(this.weightMap,r,a,this.functionExecutorMap),i=(this.tensorsMap=await this.executeWithControlFlow(t,s,e,n),e.map(e=>u0(e,this.tensorsMap,s)));r=i.map(e=>e.id),a=Object.keys(t).map(e=>t[e].id);return this.keepIds=new Set([...r,...a,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){e=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(e,this.outputNodes,!0,t,n)}async executeWithControlFlow(a,t,n,r){const s=Object.keys(a);var e=s.map(e=>this.graph.nodes[h0(e)[0]]);const i=n.map(e=>h0(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);var{usedNodes:u,missingInputs:n,dynamicNode:l,syncInputs:c}=ox(a,o,this.weightMap,this._initNodes),h=[...e,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext}));const p=Object.assign({},this.weightMap);Object.keys(a).forEach(e=>{var[t,n]=h0(e);const r=[];r[n]=a[e],p[t]=r});for(var d={},f=this.getFrozenTensorIds(p),m={};0<h.length;){var g=this.processStack(e,h,t,p,m,f,i,d,u);await Promise.all(g)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");r=o.filter(e=>!hx(e)&&!u0(e.name,p,t)).map(e=>e.name);if(0<r.length){let e=null!=l?"Alternatively, to avoid the dynamic ops, use model.execute() "+`and specify the inputs [${c}]`:"";throw new Error(`Cannot compute the outputs [${r}] from the provided `+`inputs [${s}]. Consider providing the following inputs: `+`[${n}]. `+e)}return p}processStack(e,n,r,a,s,i,o,u,l){const c=[];for(;0<n.length;){const h=n.pop();r.currentContext=h.contexts;let t="";if("Enter"===h.node.op&&B("isConstant",h.node,a,r)&&([t]=l0(h.node.name,r)),null==a[h.node.name]){const p=sx(h.node,a,r,this._resourceManager),d=(t||([t]=l0(h.node.name,r)),r.currentContext);Se(p)?c.push(p.then(e=>(a[t]=e,r.currentContext=d,this.checkTensorForDisposal(t,h.node,a,r,i,o,u),this.processChildNodes(h.node,n,r,a,s,l),e))):(a[t]=p,this.checkTensorForDisposal(t,h.node,a,r,i,o,u),this.processChildNodes(h.node,n,r,a,s,l))}else this.processChildNodes(h.node,n,r,a,s,l)}return c}processChildNodes(e,n,r,a,s,i){e.children.forEach(e=>{var[t]=l0(e.name,r);!s[t]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!u0(e,a,r))&&(s[t]=!0,n.push({contexts:r.currentContext,node:e})):e.inputNames.every(e=>!!u0(e,a,r))&&(s[t]=!0,n.push({contexts:r.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(a){Object.keys(a).forEach(e=>{const t=a[e];var[e]=h0(e);const n=this.graph.nodes[e];if(n.attrParams.shape&&n.attrParams.shape.value){const r=n.attrParams.shape.value;z(r.length===t.shape.length&&t.shape.every((e,t)=>-1===r[t]||r[t]===e),()=>`The shape of dict['${n.name}'] provided in `+`model.execute(dict) must be [${r}], but was `+`[${t.shape}]`)}n.attrParams.dtype&&n.attrParams.dtype.value&&z(t.dtype===n.attrParams.dtype.value,()=>`The dtype of dict['${n.name}'] provided in `+"model.execute(dict) must be "+n.attrParams.dtype.value+", but was "+t.dtype)})}mapInputs(e){const t={};for(const r in e){var n;null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[r]?(n=this._signature.inputs[r],t[n.name]=e[r]):t[r]=e[r]}return t}checkInputs(e){e=Object.keys(e).filter(e=>{var[e]=h0(e);return null==this.graph.nodes[e]});if(0<e.length)throw new Error("The dict provided in model.execute(dict) has "+`keys: [${e}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{return null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e},{})}checkOutputs(e){e.forEach(e=>{var[t]=h0(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class dx{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class fx{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new dx}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){var e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=fi(e,this.loadOptions);else{const t=Rs(e,this.loadOptions);if(0===t.length)t.push(fi(e,this.loadOptions));else if(1<t.length)throw new Error(`Found more than one (${t.length}) load handlers for `+`URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");var e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;var t=this.artifacts.modelTopology;let n;n=(null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata:this.artifacts).signature,this.signature=n,this.version=t.versions.producer+"."+t.versions.minConsumer;var r=ks(this.artifacts.weightData,this.artifacts.weightSpecs);return this.executor=new px(F0.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node&&(t=F0.Instance.transformGraph(e.modelInitializer),this.initializer=new px(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])),!0}async save(e,t){if("string"==typeof e){var n=$s(e);if(0===n.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(1<n.length)throw new Error(`Found more than one (${n.length}) save handlers for `+`URL '${e}'`);e=n[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(r){if(!(r instanceof v||Array.isArray(r)))return r;if((r=Array.isArray(r)?r:[r]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+`the graph model has ${this.inputNodes.length} placeholders, `+`while there are ${r.length} input tensors.`);return this.inputNodes.reduce((e,t,n)=>(e[t]=r[n],e),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);e=this.executor.execute(e,t);return 1<e.length?e:e[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);e=await this.executor.executeAsync(e,t);return 1<e.length?e:e[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(n){return Object.keys(n).reduce((e,t)=>(e[t]=[n[t]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}var mx;function gx(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);var a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(xx(e)){const i=Array.isArray(e)?[]:{};r.add(e);for(const o in e){var s=gx(e[o],t,n,r);i[o]=s}return r.delete(e),e.__proto__&&(i.__proto__=e.__proto__),i}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,a.value),a.value}function yx(e,t=vx){return function e(t,n,r=new Set){const a=t[0];if(r.has(a))throw new Error("Circular references are not supported.");const s=n(t);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");{if(s.recurse){if(xx(a)){const i=Array.isArray(a)?[]:{};r.add(a);for(const o in a){const u=t.map(e=>e[o]),l=e(u,n,r);i[o]=l}return r.delete(a),i}throw new Error("Can't recurse into non-iterable type: "+a)}return s.value}}(e,t)}function vx(e){return null===e?null:xx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function bx(e,t){const n=new Map;gx(e,t,n);for(const a of Array.from(n.keys())){var r=n.get(a);Se(r)&&(r=await r,n.set(a,r))}return gx(e,t,n)}function xx(e){let t=!1;var n;return t=N.get("IS_BROWSER")?e instanceof TextDecoder:(n=require("string_decoder")["StringDecoder"],e instanceof n),null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof v)&&!(e instanceof Promise)&&!t)}function wx(e){return gx(e,kx)}function kx(e){return e instanceof v?{value:e.clone(),recurse:!1}:xx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Nx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e=e<0?this.doubledCapacity+e:e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);var e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");var e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");var e=this.wrap(this.begin+e),t=this.get(e);return this.set(e,this.pop()),t}}class Ix extends Nx{constructor(){super(Ix.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){var e=2*this.capacity;const t=new Array(e);var n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Sx(e){return new Ex(e)}function Tx(e){return new _x(e)}Ix.INITIAL_CAPACITY=32;class Cx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Mx(this,e)}filter(e){return new Dx(this,e)}map(e){return new Ox(this,e)}mapAsync(e){return new Lx(this,e)}serialMapAsync(e){return new Lx(this,e).serial()}flatmap(e){return new Px(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new Fx(this,e,t)}columnMajorBatch(e,t=!0,n=vx){const r=this.rowMajorBatch(e,t);return r.map(e=>yx(e,n))}concatenate(e,t){return new Bx(Sx([this,e]),t)}take(e){return e<0||null==e?this:new Rx(this,e)}skip(e){return e<0||null==e?this:new $x(this,e)}prefetch(e){return new Vx(this,e)}shuffle(e,t){return new Ux(this,e,t)}serial(){return new Ax(this)}}class Ex extends Cx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};var e=this.items[this.trav];return this.trav++,{value:wx(e),done:!1}}}class _x extends Cx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class Ax extends Cx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class $x extends Cx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){var e=await this.upstream.next();if(e.done)return e;C(e.value)}return this.upstream.next()}}class Rx extends Cx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Fx extends Cx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){var t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&0<e.length?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Dx extends Cx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){var e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;C(e.value)}}}class Ox extends Cx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){var e=await this.upstream.next();if(e.done)return{value:null,done:!0};var t=ts(e.value),e=this.transform(e.value),n=ts(e);for(const r of t)es(r,n)||r.dispose();return{value:e,done:!1}}}class Mx extends Cx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Lx extends Cx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){var e=await this.upstream.next();if(e.done)return{value:null,done:!0};var t=ts(e.value),e=await this.transform(e.value),n=ts(e);for(const r of t)es(r,n)||r.dispose();return{value:e,done:!1}}}class zx extends Cx{constructor(){super(),this.outputQueue=new Ix,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Px extends zx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){var e=await this.upstream.next();if(e.done)return!1;var t=ts(e.value),e=this.transform(e.value),n=ts(e);this.outputQueue.pushAll(e);for(const r of t)es(r,n)||r.dispose();return!0}}class Bx extends Cx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){var t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(Yh=mx=mx||{})[Yh.FAIL=0]="FAIL",Yh[Yh.SHORTEST=1]="SHORTEST",Yh[Yh.LONGEST=2]="LONGEST";class Wx extends Cx{constructor(e,t=mx.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let n=0,r=0;e=await bx(this.iterators,function(e){if(e instanceof Cx){const t=e.next();return{value:t.then(e=>(n++,e.done&&r++,e.value)),recurse:!1}}return{value:null,recurse:!0}});if(n===r)return{value:null,done:!0};if(0<r)switch(this.mismatchMode){case mx.FAIL:throw new Error("Zipped streams should have the same length. "+`Mismatched at element ${this.count}.`);case mx.SHORTEST:return{value:null,done:!0};case mx.LONGEST:}return this.count++,{value:e,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class Vx extends Cx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Nx(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){var e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Ux extends Vx{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=(void 0)(n||$a().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){var e=this.chooseIndex(),e=await this.buffer.shuffleExcise(e);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Gx{constructor(){this.size=null}batch(e,t=!0){const n=this;z(0<e,()=>`batchSize needs to be positive, but it is
      `+e);let r;return jx(async()=>(await n.iterator()).columnMajorBatch(e,t,Hx),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e))}concatenate(e){const t=this;let n;return jx(async()=>(await t.iterator()).concatenate(await e.iterator()),n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null)}filter(t){const e=this;let n;return jx(async()=>(await e.iterator()).filter(e=>O(()=>t(e))),n=this.size===1/0?1/0:null)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(t){const e=this;return jx(async()=>(await e.iterator()).map(e=>O(()=>t(e))),this.size)}mapAsync(e){const t=this;return jx(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return jx(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(r){const a=this;let e;return jx(async()=>{const e=Tx(async()=>({value:await a.iterator(),done:!1}));return t=e.take(r),new Bx(t,n);var t,n},e=null!=this.size&&0<r?this.size*r:0===r?0:null!=this.size&&(void 0===r||r<0)?1/0:null)}skip(e){const t=this;let n;return jx(async()=>(await t.iterator()).skip(e),n=null!=this.size&&0<=e&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+`bufferSize to the dataset size (${this.size} elements)`);const r=this,a=(void 0)(e||$a().toString());return jx(async()=>{let e=a.int32();return n&&(e+=a.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(e){const t=this;let n;return jx(async()=>(await t.iterator()).take(e),n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function jx(e,t=null){return new class extends Gx{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Hx(e){if(null===e)return null;var t,n=e[0];return null==(n=n)||(null===(t=n)||"object"!=typeof t&&"function"!=typeof t)||Array.isArray(n)||"object"==typeof n&&n instanceof v||oe(n)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return(e[0]instanceof v?Dc:vs)(e)}(e),recurse:!1}:{value:null,recurse:!0}}Gx.MAX_BUFFER_SIZE=1e4;class qx extends Gx{constructor(e){super(),this.input=e}async iterator(){const e=await this.input.iterator(),t=e.decodeUTF8();return t.split("\n").map(e=>e=e.endsWith("\r")?e.slice(0,-1):e)}}const Kx=Symbol("out"),Xx=Symbol("field"),Yx=Symbol("quote"),Jx=Symbol("quoteafterquote"),Zx=Symbol("quoteinquote");class Qx extends Gx{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new qx(e),this.hasHeader=!1!==(t=t||{}).hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(z(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter||","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&z(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>1<t[e]);if(z(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const r of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(r))throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await this.base.iterator();var e=await t.next();if(e.done)throw new Error("No data was found for CSV parsing.");e=e.value;return this.parseRow(e,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return(e=this.hasHeader?e.skip(1):e).map(e=>this.makeDataElement(e))}makeDataElement(n){var r=this.parseRow(n);const a={},s={};for(let t=0;t<this.fullColumnNames.length;t++){var i=this.fullColumnNames[t],o=this.columnConfigs?this.columnConfigs[i]:null;if(!this.configuredColumnsOnly||o){var u=r[t];let e=null;if(""===u)if(o&&void 0!==o.default)e=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${i} is empty in this line: `+n);e=void 0}else{var l=Number(u);if(isNaN(l))e=o&&"bool"===o.dtype?this.getBoolean(u):u;else if(o&&o.dtype)switch(o.dtype){case"float32":e=l;break;case"int32":e=Math.floor(l);break;case"bool":e=this.getBoolean(u);break;default:e=l}else e=l}o&&o.isLabel?s[i]=e:a[i]=e}}return 0===Object.keys(s).length?a:{xs:a,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(t,e=!0){const n=[];let r=0;var a=t.length;let s=Kx;for(let e=0;e<a;e++)switch(s){case Kx:switch(t.charAt(e)){case'"':r=e+1,s=Yx;break;case this.delimiter:if(r=e+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=Kx;break;default:s=Xx,r=e}break;case Xx:t.charAt(e)===this.delimiter&&(n.push(t.substring(r,e)),s=Kx,r=e+1);break;case Yx:'"'===t.charAt(e)&&(s=Jx);break;case Jx:switch(t.charAt(e)){case this.delimiter:n.push(t.substring(r,e-1)),s=Kx,r=e+1;break;case'"':s=Yx;break;default:s=Zx}break;case Zx:'"'===t.charAt(e)&&(s=Yx)}if(s===Jx?n.push(t.substring(r,a-1)):n.push(t.substring(r)),e&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got `+n);return n}}class e1 extends Cx{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;var t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||14<t||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!N.get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new e1(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error("Error thrown while initializing video stream: "+e.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error("Mismatch in sampling rate: "+`Expected: ${this.sampleRateHz}; `+"Actual: "+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;var n,r=await this.getAudioData();return this.includeSpectrogram&&(n=this.flattenQueue(r.freqDataQueue),e=this.getTensorFromAudioDataArray(n,[this.numFrames,this.columnTruncateLength,1])),this.includeWaveform&&(n=this.flattenQueue(r.timeDataQueue),t=this.getTensorFromAudioDataArray(n,[this.numFrames*this.fftSize,1])),{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const n=[],r=[];let a=0;return new Promise(e=>{const t=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&e({freqDataQueue:n,timeDataQueue:r}),n.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),r.push(this.timeData.slice())),++a===this.numFrames&&(clearInterval(t),e({freqDataQueue:n,timeDataQueue:r}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&0<this.stream.getTracks().length&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const n=e[0].length,r=new Float32Array(e.length*n);return e.forEach((e,t)=>r.set(e,t*n)),r}getTensorFromAudioDataArray(e,t){const n=new Float32Array(U(t));return n.set(e,n.length-e.length),vs(n,t)}}class t1 extends Cx{constructor(e,t){var n,r;super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize()&&(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=zc([0],"int32"),this.webcamConfig.centerCrop?(e=+this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=+this.webcamConfig.resizeHeight/this.webcamVideoElement.height,this.cropBox=Pc([r=(1-t)/2,n=(1-e)/2,t+r,n+e],[1,4])):this.cropBox=Pc([0,0,1,1],[1,4]))}summary(){return"webcam"}static async create(e,t={}){if(!N.get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new t1(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&z("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. `+"Please provide 'user' or 'environment'");try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode||"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: "+e.message,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Si(this.webcamVideoElement)}catch(e){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(e))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error("Error thrown cropping the video: "+e.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(n){return O(()=>{var e=Ru(x(n,"float32"),0),e=op.cropAndResize(e,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const t=e.shape;return M(e,t.slice(1))})}async capture(){return(await this.next()).value}stop(){const e=this.stream.getTracks();e.forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class n1{}class r1 extends Cx{split(e){return new a1(this,e)}}class a1 extends r1{constructor(e,t){super(),this.upstream=e,this.impl=new s1(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class s1 extends zx{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),!(this.carryover=""));const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}}class i1 extends Cx{decodeUTF8(){return new o1(this)}}class o1 extends r1{constructor(e){super(),this.upstream=e,this.impl=new u1(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u1 extends zx{constructor(e){if(super(),this.upstream=e,N.get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const t=require("string_decoder")["StringDecoder"];this.decoder=new t("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){var e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let n;return n=N.get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}}class l1 extends i1{constructor(e,t={}){super(),this.file=e,this.options=t,z(e instanceof Uint8Array||!!N.get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((n,r)=>{var e=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)n(new Uint8Array(this.file.slice(this.offset,e)));else{const a=new FileReader;a.onload=e=>{let t=a.result;if(!((t=t instanceof ArrayBuffer?new Uint8Array(t):t)instanceof Uint8Array))return r(new TypeError("FileReader returned unknown type."));n(t)},a.onabort=e=>r(new Error("Aborted")),a.onerror=e=>r(new Error(e.type));var t=this.file.slice(this.offset,e);a.readAsArrayBuffer(t)}this.offset=e}),done:!1}}}function c1(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class h1 extends n1{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(c1(this.input)&&N.get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new l1(this.input,this.options)}}class p1 extends n1{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return c1(this.url)?new h1(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;"string"==typeof e?r=e:(r=e.url,a=(e=>{const t={method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity};return t})(e));const s=await(n||Ra)(r,a);if(s.ok)return e=new Uint8Array(await s.arrayBuffer()),new l1(e,t);throw new Error(s.statusText)}(this.url,this.fileOptions)}}Jh=Object.freeze({__proto__:null,array:function(e){return jx(async()=>Sx(e),e.length)},Dataset:Gx,zip:function(n){if(!xx(n))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(n))for(let e=0;e<n.length;e++)t=null==t?n[e].size:Math.min(t,n[e].size);else if(n instanceof Object)for(const e in n)t=null==t?n[e].size:Math.min(t,n[e].size);return jx(async()=>{var e,t=await bx(n,e=>{if(e instanceof Gx)return{value:e.iterator(),recurse:!1};if(xx(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return[t,e=mx.FAIL]=[t,mx.SHORTEST],new Wx(t,e)},t)},CSVDataset:Qx,TextLineDataset:qx,csv:function(e,t={}){return new Qx(new p1(e),t)},func:function(e){const t=Tx(e);return jx(async()=>t)},generator:function(t){return jx(async()=>{const e=await t();return Tx(()=>e.next())})},microphone:async function(e){return e1.create(e)},webcam:async function(e,t){return t1.create(e,t)},FileDataSource:h1,URLDataSource:p1,version_data:"3.15.0"});function ie(e,t){(e=Array.isArray(e)?e:[e]).forEach(e=>{null!=e&&z("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}const d1=qc;class f1 extends p{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new h(this,I)}nextDataId(){return f1.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,N.get("IS_NODE")&&zr("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;var a;return{dataId:r="string"===t&&null!=n&&0<n.length&&pe(n[0])?(a=n.map(e=>Fa(e)),this.write(a,e,t)):this.write(n,e,t),shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){var{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Dp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>Da(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ei(e.shape,e.dtype,n)}makeOutput(e,t,n){e=this.write(e,t,n);return I.makeTensorFromDataId(e,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&0<this.data.get(e).refCount)return!1;t=this.data.get(e)["complexTensorInfos"];null!=t&&(this.disposeData(t.real.dataId,!0),this.disposeData(t.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){var t=$a(),e=(e(),$a()-t);return{kernelMs:e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ie([e],"where");var t=this.readSync(e.dataId);return d1(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function m1(t){const n=new Float32Array(t.length);for(let e=0;e<t.length;++e)n[e]=Math.abs(t[e]);return n}f1.nextDataId=0;Zh={kernelName:Fe,backendName:"cpu",kernelFunc:e=>{var t=e.inputs["x"];const n=e.backend;ie(t,"abs");new Float32Array(U(t.shape));e=m1(n.data.get(t.dataId).values);return n.makeOutput(e,t.shape,t.dtype)}};function g1(x){return(e,t,n,r,a)=>{var s=L(e,t),i=s.length,o=se(s);const u=ee(a,U(s));var l=e.length,c=t.length,h=se(e),p=se(t);const d=bi(e,s),f=bi(t,s);if(d.length+f.length===0)for(let e=0;e<u.length;++e)u[e]=x(n[e%n.length],r[e%r.length]);else for(let e=0;e<u.length;++e){const y=Ie(e,i,o),v=y.slice(-l);d.forEach(e=>v[e]=0);var m=Ne(v,l,h);const b=y.slice(-c);f.forEach(e=>b[e]=0);var g=Ne(b,c,p);u[e]=x(n[m],r[g])}return[u,s]}}function y1(e){const{inputs:t,backend:n}=e;var{real:e,imag:r}=t,a=n.data.get(e.dataId).values,s=n.data.get(r.dataId).values,i=n.makeTensorInfo(e.shape,"complex64");const o=n.data.get(i.dataId);return o.complexTensorInfos={real:n.makeTensorInfo(e.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",s)},i}Qh={kernelName:at,backendName:"cpu",kernelFunc:y1};function v1(e,t,n="float32"){if("complex64"===n)return y1({inputs:{real:v1(e,t,"float32"),imag:v1(e,t,"float32")},backend:e});var r=xe(U(t),n);return e.makeTensorInfo(t,n,r)}function b1(e){const{inputs:t,backend:n}=e;e=t.x;return n.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}ep={kernelName:Ht,backendName:"cpu",kernelFunc:b1};function x1(e){const{inputs:t,backend:n}=e;var e=t["input"],e=n.data.get(e.dataId).complexTensorInfos.real,r=n.data.get(e.dataId).values;return n.makeTensorInfo(e.shape,e.dtype,r)}tp={kernelName:zn,backendName:"cpu",kernelFunc:x1};function w1(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["dtype"];if("complex64"===a){if("complex64"===e.dtype)return b1({inputs:{x:e},backend:n});var s=v1(n,e.shape,e.dtype),i=w1({inputs:{x:e},backend:n,attrs:{dtype:"float32"}}),o=y1({inputs:{real:i,imag:s},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if("complex64"===e.dtype)return i=w1({inputs:{x:s=x1({inputs:{input:e},backend:n})},backend:n,attrs:{dtype:a}}),n.disposeIntermediateTensorInfo(s),i;if(!ae(e.dtype,a))return{dataId:(o=b1({inputs:{x:e},backend:n})).dataId,shape:o.shape,dtype:a};if("int32"===a)return s=n.data.get(e.dataId).values,i=Int32Array.from(s),n.makeTensorInfo(e.shape,"int32",i);if("bool"===a)return o=n.data.get(e.dataId).values,s=Aa([0],e.dtype),[i,o]=g1((e,t)=>e!==t?1:0)(e.shape,[],o,s,"bool"),n.makeTensorInfo(o,"bool",i);throw new Error(`Error in Cast: failed to cast ${e.dtype} to `+a)}np={kernelName:tt,backendName:"cpu",kernelFunc:w1};function k1(i,l,c,h){return null==c?({inputs:e,backend:t})=>{var{a:e,b:n}=e;const r=t;ie([e,n],i);var t=r.data.get(e.dataId).values,a=r.data.get(n.dataId).values,t="string"===e.dtype?cd(t):t,a="string"===e.dtype?cd(a):a,s=h||e.dtype,[e,n]=l(e.shape,n.shape,t,a,s);return r.makeTensorInfo(n,s,e)}:({inputs:e,backend:t})=>{var n,r,a,s,i,{a:e,b:o}=e;const u=t;return"complex64"===e.dtype||"complex64"===o.dtype?(t=w1({inputs:{x:e},backend:u,attrs:{dtype:"complex64"}}),i=(r=u.data.get(t.dataId)).complexTensorInfos.real,r=r.complexTensorInfos.imag,i=u.data.get(i.dataId).values,r=u.data.get(r.dataId).values,a=w1({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),n=(s=u.data.get(a.dataId)).complexTensorInfos.real,s=s.complexTensorInfos.imag,n=u.data.get(n.dataId).values,s=u.data.get(s.dataId).values,[i,r,n]=c(e.shape,o.shape,i,r,n,s),n=y1({inputs:{real:s=u.makeTensorInfo(n,"float32",i),imag:i=u.makeTensorInfo(n,"float32",r)},backend:u}),u.disposeIntermediateTensorInfo(t),u.disposeIntermediateTensorInfo(a),u.disposeIntermediateTensorInfo(s),u.disposeIntermediateTensorInfo(i),n):(r=u.data.get(e.dataId).values,t=u.data.get(o.dataId).values,a=h||e.dtype,[s,i]=l(e.shape,o.shape,r,t,a),u.makeTensorInfo(i,a,s))}}function N1(C){return(e,t,n,r,a,s)=>{var i=L(e,t),o=U(i),u=i.length,l=se(i);const c=ee("float32",o),h=ee("float32",o),p=bi(e,i),d=bi(t,i);var f=Dp(n,r),m=Dp(a,s),g=e.length,y=se(e),v=t.length,b=se(t);if(p.length+d.length===0)for(let e=0;e<c.length;e++){var x=e%f.length,w=e%m.length,x=C(f[2*x],f[2*x+1],m[2*w],m[2*w+1]);c[e]=x.real,h[e]=x.imag}else for(let e=0;e<c.length;e++){const I=Ie(e,u,l),S=I.slice(-g);p.forEach(e=>S[e]=0);var k=Ne(S,g,y);const T=I.slice(-v);d.forEach(e=>T[e]=0);var N=Ne(T,v,b),k=C(f[2*k],f[2*k+1],m[2*N],m[2*N+1]);c[e]=k.real,h[e]=k.imag}return[c,h,i]}}rp=g1((e,t)=>e+t),ap=N1((e,t,n,r)=>({real:e+n,imag:t+r}));const I1=k1(Me,rp,ap);sp={kernelName:Me,backendName:"cpu",kernelFunc:I1};function S1(t,n,e,r,a){var s=U(r);const i=xe(a,e);for(let e=0;e<t.length;e++){var o=t[e];if(o<0)throw new Error("Input x must be non-negative!");a<=o||(i[o]+=0<s?n[e]:1)}return i}function T1(n,r,a,s=!1){var e=n.shape[0],i=n.shape[1];const o=ei([e,a],r.dtype);for(let t=0;t<e;t++)for(let e=0;e<i;e++){var u=n.get(t,e);if(u<0)throw new Error("Input x must be non-negative!");a<=u||(s?o.set(1,t,u):0<r.size?o.set(o.get(t,u)+r.get(t,e),t,u):o.set(o.get(t,u)+1,t,u))}return o}function C1(a){return(t,e,n)=>{const r=ee(e,t.length);for(let e=0;e<t.length;++e)r[e]=a(t[e],n);return r}}function E1(o,u,l){return({inputs:e,attrs:t,backend:n})=>{e=e.x;if(ie(e,o),"string"===e.dtype||"string"===l)throw new Error("unaryKernelFunc does not support string input/output");const r=n;var a=r.data.get(e.dataId).values,s=U(e.shape),n=l||e.dtype;const i=te(n,s);for(let e=0;e<s;++e)i[e]=u(a[e],t);return r.makeTensorInfo(e.shape,n,i)}}function _1(s,i,o){return({inputs:e,attrs:t,backend:n})=>{e=e.x;if(ie(e,s),"string"===e.dtype||"string"===o)throw new Error("unaryKernelFunc does not support string input/output");const r=n;var n=r.data.get(e.dataId).values,a=o||e.dtype,n=i(n,a,t);return r.makeTensorInfo(e.shape,a,n)}}bh=C1(e=>Math.ceil(e)),xh=_1(nt,bh),wh={kernelName:nt,backendName:"cpu",kernelFunc:xh};function A1(e,i,o,t){const u=te(o,U(i));if(t&&"string"!==o){let n=0;e.forEach(e=>{var t=U(e.shape);u.set(e.vals,n),n+=t})}else{let s=0;e.forEach(t=>{var n="string"===o?cd(t.vals):t.vals;let r=0;for(let e=0;e<t.shape[0];++e){var a=e*i[1]+s;for(let e=0;e<t.shape[1];++e)u[a+e]=n[r++]}s+=t.shape[1]})}return u}Nh=g1((e,t)=>e===t?1:0);const $1=k1(Rt,Nh,null,"bool");vh={kernelName:Rt,backendName:"cpu",kernelFunc:$1},Rh=C1(e=>Math.exp(e));const R1=_1(Ft,Rh,"float32");md={kernelName:Ft,backendName:"cpu",kernelFunc:R1},gd=C1(e=>Math.expm1(e)),yd=_1(Ot,gd),vd={kernelName:Ot,backendName:"cpu",kernelFunc:yd},bd=C1(e=>Math.floor(e)),lf=_1(Pt,bd),xd={kernelName:Pt,backendName:"cpu",kernelFunc:lf};function F1(r,a,e,t,s,i,o,u,l){const c=ei([t,i],e);for(let n=0;n<t;n++){const p=[];let t=0;for(let e=0;e<s;e++){var h=r[n*s+e];t+=h*o[e],p.push(h)}if(t<0||t>=l/i)throw new Error(`Invalid indices: ${p} does not index into `+u);for(let e=0;e<i;e++)c.values[n*i+e]=a.get(...a.indexToLoc(t*i+e))}return c}function D1(t,n,e){const r=ei(e,t.dtype);for(let e=0;e<r.size;++e){const i=r.indexToLoc(e),o=i.slice();var a=o[0],s=o[2],a=n.locToIndex([a,s]),s=(o[2]=n.values[a],t.locToIndex(o));0<=s&&s<t.values.length&&(r.values[e]=t.values[s])}return r}wd=g1((e,t)=>t<e?1:0),kd=k1(Gt,wd,null,"bool"),Nd={kernelName:Gt,backendName:"cpu",kernelFunc:kd},Id=g1((e,t)=>t<=e?1:0),Td=k1(jt,Id,null,"bool"),Sd={kernelName:jt,backendName:"cpu",kernelFunc:Td},Cd=g1((e,t)=>e<t?1:0),Ed=k1(Qt,Cd,null,"bool"),$d={kernelName:Qt,backendName:"cpu",kernelFunc:Ed},Rd=g1((e,t)=>e<=t?1:0),Fd=k1(en,Rd,null,"bool"),Dd={kernelName:en,backendName:"cpu",kernelFunc:Fd};function O1(e,t,n){var r=(t-e)/(n-1);const a=xe(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}Od=C1(e=>Math.log(e)),Md=_1(nn,Od),Ld={kernelName:nn,backendName:"cpu",kernelFunc:Md};function M1(n,r,e,t){const a=ee(t,U(e));for(let e=0;e<a.length;++e){var s=e*r;let t=n[s];for(let e=0;e<r;++e){var i=n[s+e];(Number.isNaN(i)||i>t)&&(t=i)}a[e]=t}return a}zd=g1((e,t)=>Math.max(e,t)),Pd=k1(pn,zd),Wd={kernelName:pn,backendName:"cpu",kernelFunc:Pd},Ud=g1((e,t)=>Math.min(e,t)),Gd=k1(xn,Ud),Hd={kernelName:xn,backendName:"cpu",kernelFunc:Gd};const L1=g1((e,t)=>e*t);Kd=N1((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}));const z1=k1(In,L1,Kd);Xd={kernelName:In,backendName:"cpu",kernelFunc:z1};function P1(e,t,n){var r=_a(-1,n);return L1([],t,r,e,n)}Yd={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;ie(e=t["x"],"neg");var[r,a]=P1(r=n.data.get(e.dataId).values,e.shape,e.dtype);return n.makeTensorInfo(a,e.dtype,r)}},Jd=g1((e,t)=>e!==t?1:0),Zd=k1(Tn,Jd,null,"bool"),Qd={kernelName:Tn,backendName:"cpu",kernelFunc:Zd};function B1(t,e,n,r,a){var s=e.length,i=U(e),o=se(e),u=se(a);const l=ee(n,U(a));for(let e=0;e<i;++e){var c=Ie(e,s,o);const p=new Array(c.length);for(let e=0;e<p.length;e++)p[e]=c[r[e]];var h=Ne(p,s,u);l[h]=t[e]}return l}function W1(e){const{inputs:t,attrs:n,backend:r}=e;var a=t["x"],s=n["perm"],e=(ie(a,"transpose"),a.shape.length);const i=new Array(e);for(let e=0;e<i.length;e++)i[e]=a.shape[s[e]];e=B1(r.data.get(a.dataId).values,a.shape,a.dtype,s,i);return{dataId:r.write(e,i,a.dtype),shape:i,dtype:a.dtype}}ef={kernelName:Cr,backendName:"cpu",kernelFunc:W1};function V1(e,t,n,r){var[e,r]=ul(e,r),t=Ya(t,"int32");const a=xe(U(e),t);var s=U(r);for(let e=0;e<a.length;++e){var i=e*s;let t=1;for(let e=0;e<s;++e)t*=n[i+e];a[e]=t}return{outVals:a,outShape:e,outDtype:t}}tf={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r,i=(ie(e,"prod"),e.shape.length),o=hl(a=Q(a,e.shape),i);let u=a,l=e;const c=[];null!=o&&(l=W1({inputs:{x:e},backend:n,attrs:{perm:o}}),c.push(l),u=dl(u.length,i));var e=n.data.get(l.dataId).values,{outVals:o,outShape:i,outDtype:e}=V1(l.shape,l.dtype,e,u);let h=i;return s&&(h=ll(i,a)),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,e,o)}};function U1(e,t,n,r){if(e===t||e<t&&n<0||t<e&&1<n)return xe(0,r);const a=xe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}nf=C1(e=>1/Math.sqrt(e)),rf=_1(Xn,nf),af={kernelName:Xn,backendName:"cpu",kernelFunc:rf},sf=C1(e=>1/(1+Math.exp(-e)));const G1=E1(rr,e=>1/(1+Math.exp(-e)));of={kernelName:rr,backendName:"cpu",kernelFunc:G1};function j1(e,n,t,r,a){var s=ji(r,n,t),i=U(t),o=se(r);if(s)return s=Hi(n,o),"string"===a?e.slice(s,s+i):e.subarray(s,s+i);const u=ei(r,a,"string"===a?cd(e):e),l=ei(t,a);for(let e=0;e<l.size;++e){const h=l.indexToLoc(e);var c=h.map((e,t)=>e+n[t]);l.set(u.get(...c),...h)}return"string"===a?hd(l.values):l.values}function H1(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{begin:a,size:s}=r,[a,s]=(ie(e,"slice"),qi(e,a,s)),i=(Oi(e,a,s),n.data.get(e.dataId).values),i=j1(i,a,s,e.shape,e.dtype);return n.makeTensorInfo(s,e.dtype,i)}uf={kernelName:Qn,backendName:"cpu",kernelFunc:H1};function q1(n,e,t,r,a,s,i){var o=e[0],u=s[0];const l=new Array(u),c=new Array(o);var h=e[1];if(0===u){if(0!==o)throw new Error(Xp(o));return[te(t,0),[0,h],te(a,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let e=0;e<o;++e){var m=n[e*h];if(m<0)throw new Error(Yp(e,m));if(u<=m)throw new Error(Jp(e,m,u));++f[m],p=p&&m>=d,d=m}let g=!0;for(let e=0;e<u;++e){var y=0===f[e];l[e]=y,g=g&&!y,f[e]=Math.max(f[e],1),0<e&&(f[e]+=f[e-1])}if(g&&p){s=n,e=r;for(let e=0;e<o;++e)c[e]=e;return[s,[o,h],e,l,c]}{s=f[u-1];const k=te(t,s*h),N=te(a,s),I=new Array(u).fill(0);for(let t=0;t<o;++t){var v=n[t*h],b=I[v],x=(0===v?0:f[v-1])+b;I[v]++;for(let e=0;e<h;++e)k[x*h+e]=n[t*h+e];N[x]=r[t],c[t]=x}for(let e=0;e<u;++e)if(0===I[e]){var w=0===e?0:f[e-1];k[w*h+0]=e;for(let e=1;e<h;++e)k[w*h+e]=0;N[w]=i}return[k,[s,h],N,l,c]}}function K1(r,e,t,n,a){var s=U(n),i=e[0],o=a.length;const u=[];let l=1,c=-1;for(let e=0;e<o;++e){var h=a[e];if(-1===h){if(-1!==c)throw new Error(Zp(c,e));c=e,u.push(1)}else{if(h<0)throw new Error(Qp(e,h));l*=h,u.push(h)}}if(-1!==c){if(l<=0)throw new Error(ed());e=Math.trunc(s/l);if(l*e!==s)throw new Error(td(n,u));u[c]=e}if(U(u)!==s)throw new Error(nd(n,u));var p=n.length;const d=[];if(0<p){d[p-1]=1;for(let e=p-2;0<=e;--e)d[e]=d[e+1]*n[e+1]}const f=[];if(0<o){f[o-1]=1;for(let e=o-2;0<=e;--e)f[e]=f[e+1]*u[e+1]}const m=te(t,i*o);for(let n=0;n<i;++n){let t=0;for(let e=0;e<p;++e)t+=r[n*p+e]*d[e];for(let e=0;e<o;++e)m[n*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,o],u]}function X1(t,e,n,r,a,s=!1,i=0){var o=r.length,u=[e[0],t.length/e[0]],l=u[1],c=0<o?a[o-1]+1:0;if(c<0)throw new Error(rd());const h=e.slice(),p=(h[0]=c,te(n,h.reduce((e,t)=>e*t,1)));if(0===o)return 0<c&&p.fill(i),[p,h];if(c<=0)throw new Error(rd());let d=0,f=1,m=0,g=a[d];for(;;){let e=0;if(f<o){if(e=a[f],g===e){++f;continue}if(g>=e)throw new Error(ad())}if(g<0||g>=c)throw new Error(sd(g,c));g>m&&p.fill(i,m*l,g*l);for(let e=d;e<f;++e){var y=r[e];if(y<0||u[0]<=y)throw new Error(id(e,r[e],u[0]));for(let e=0;e<l;e++)p[g*l+e]+=t[y*l+e]}if(s)for(let e=0;e<l;e++)p[g*l+e]/=f-d;if(d=f,++f,m=g+1,g=e,f>o)break}return m<c&&p.fill(i,m*l,c*l),[p,h]}cf=C1(e=>Math.sqrt(e)),hf=E1(sr,e=>Math.sqrt(e)),pf={kernelName:sr,backendName:"cpu",kernelFunc:hf},df=g1((e,t)=>{e-=t;return e*e}),ff=k1(mr,df),mf={kernelName:mr,backendName:"cpu",kernelFunc:ff};function Y1(e,t,n,r){const a=ei(e,t.dtype);for(let e=0;e<a.size;e++){var s=a.indexToLoc(e);const i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}class J1{constructor(e,t,n,r,a,s){this.separator=Fa(e),this.nGramWidths=t,this.leftPad=Fa(n),this.rightPad=Fa(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){var n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(r,a,s,i,o,u){for(let e=0;e<o;++e){var l=this.getPadWidth(u),c=Math.max(0,l-e),h=Math.max(0,l-(o-(e+1))),p=u-(c+h),d=a+(0<c?0:e-l);let t=0;t+=c*this.leftPad.length;for(let e=0;e<p;++e)t+=r[d+e].length;t=(t+=h*this.rightPad.length)+(c+h+p-1)*this.separator.length,s[i+e]=new Uint8Array(t);const m=s[i+e];let n=0;var f=e=>e.forEach(e=>m[n++]=e);for(let e=0;e<c;++e)f(this.leftPad),f(this.separator);for(let e=0;e<p-1;++e)f(r[d+e]),f(this.separator);if(0<p){f(r[d+p-1]);for(let e=0;e<h;++e)f(this.separator),f(this.rightPad)}else{for(let e=0;e<h-1;++e)f(this.rightPad),f(this.separator);f(this.rightPad)}}}compute(a,s){var n=a.length,r=s.length;if(0<r){let t=s[0];if(0!==t)throw new Error("First split value must be 0, got "+t);for(let e=1;e<r;++e){if(!(s[e]>=t&&s[e]<=n))throw new Error(`Invalid split value ${s[e]}, must be in [${t}, ${n}]`);t=s[e]}if(t!==n)throw new Error(`Last split value must be data size. Expected ${n}, got `+t)}var e,t=r-1;const i=te("int32",r);if(0===n||0===r){var o=new Array(n);for(let e=0;e<=t;++e)i[e]=0;return[o,i]}i[0]=0;for(let e=1;e<=t;++e){const l=s[e]-s[e-1];let t=0;this.nGramWidths.forEach(e=>{t+=this.getNumNGrams(l,e)}),this.preserveShort&&0<l&&0===t&&(t=1),i[e]=i[e-1]+t}const u=new Array(i[t]);for(let r=0;r<t;++r){const c=s[r];let n=i[r];this.nGramWidths.forEach(e=>{var t=s[r+1]-s[r],t=this.getNumNGrams(t,e);this.createNGrams(a,c,u,n,t,e),n+=t}),!this.preserveShort||n!==i[r]||0!=(e=s[r+1]-s[r])&&(e=e+2*this.padWidth,this.createNGrams(a,c,u,n,1,e))}return[u,i]}}function Z1(e,t,n,r,a,s,i,o){return new J1(n,r,a,s,i,o).compute(e,t)}function Q1(t,n,r){var a=t.length,s=[];let i=0,o=0;const u=new Array(a);for(let e=0;e<a;++e){var l,c=s.length,h=(l=g=m=f=d=p=h=void 0,t[e]),p=n,d=r,f=s;if(h.length)if(0===p.length)for(let e=0;e<h.length;++e)f.push(h.subarray(e,e+1));else if(1===p.length){var m=p[0];let e=h.indexOf(m);for(;-1!==e;){var g=h.subarray(0,e);d&&0===g.length||f.push(g),h=h.subarray(e+1),e=h.indexOf(m)}void(d&&0===h.length||f.push(h))}else{let t=0;for(let e=0;e<h.length+1;e++)e!==h.length&&-1===p.indexOf(h[e])||(l=h.subarray(t,e),d&&0===l.length||f.push(l),t=e+1)}c=s.length-c;u[e]=c,i+=c,o=Math.max(o,c)}const y=te("int32",2*i),v=new Array(i);var e=[a,o];let b=0;for(let t=0;t<a;++t)for(let e=0;e<u[t];++e)y[2*b]=t,y[2*b+1]=e,v[b]=s[b],++b;return[y,v,e]}function ew(t,n){const r=te("int32",t.length);for(let e=0;e<t.length;++e)r[e]=Ea(t[e]).modulo(n).getLowBitsUnsigned();return r}gf=g1((e,t)=>e-t),yf=N1((e,t,n,r)=>({real:e-n,imag:t-r}));const tw=k1(wr,gf,yf);vf={kernelName:wr,backendName:"cpu",kernelFunc:tw};function nw(t,n){const r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=t.shape[e]*n[e];const a=ei(r,t.dtype);for(let e=0;e<a.values.length;++e){var s=a.indexToLoc(e);const o=new Array(t.rank);for(let e=0;e<o.length;e++)o[e]=s[e]%t.shape[e];var i=t.locToIndex(o);a.values[e]=t.values[i]}return a}const rw=(e,t)=>{var n=t.value-e.value;return 0==n?e.index-t.index:n};function aw(t,e,n,r,a){var s=e[e.length-1],[i,o]=[t.length/s,s];const u=ee(n,i*r),l=ee("int32",i*r);for(let e=0;e<i;e++){var c=e*o;const p=t.subarray(c,c+o);let n=new Array(p.length);p.forEach((e,t)=>n[t]={value:e,index:t}),r<n.length&&(!function n(r,a,s=0,i=r.length-1){for(;s<i;){600<i-s&&(o=i-s+1,u=a-s+1,c=Math.log(o),l=.5*Math.exp(2*c/3),c=.5*Math.sqrt(c*l*(o-l)/o)*Math.sign(u-o/2),n(r,a,Math.max(s,Math.floor(a-u*l/o+c)),Math.min(i,Math.floor(a+(o-u)*l/o+c))));var o,u,l,c,h=r[a];let e=s,t=i;for(g(r,s,a),0<rw(r[i],h)&&g(r,s,i);e<t;){for(g(r,e,t),e++,t--;rw(r[e],h)<0;)e+=1;for(;0<rw(r[t],h);)--t}0===rw(r[s],h)?g(r,s,t):g(r,t+=1,i),t<=a&&(s=t+1),a<=t&&(i=t-1)}}(n,r),n=n.slice(0,r)),a&&n.sort(rw);c=e*r;const d=u.subarray(c,c+r),f=l.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=n[e].value,f[e]=n[e].index}const h=e.slice();return h[h.length-1]=r,[ei(h,n,u),ei(h,"int32",l)]}function sw(t,e,r,n){var a=Q(e,r)[0];const s=[1,r[0],1];for(let e=0;e<a;e++)s[0]*=r[e];s[1]=r[a];for(let e=a+1;e<r.length;e++)s[2]*=r[e];const i={},o=new Int32Array(r[a]),u=new ja(s,n,t),l=[];var c,h=1===s[0]&&1===s[2];for(let n=0;n<r[a];n++){let e;if(h)e=t[n].toString();else{const m=[];for(let t=0;t<s[0];t++)for(let e=0;e<s[2];e++)m.push(u.get(t,n,e));e=m.join(",")}void 0!==i[e]?o[n]=i[e]:(c=Object.keys(i).length,i[e]=c,o[n]=c,l.push(n))}const p=s.slice(),d=(p[1]=Object.keys(i).length,new ja(p,n)),f=(l.forEach((n,r)=>{for(let t=0;t<s[0];t++)for(let e=0;e<s[2];e++)d.set(u.get(t,n,e),t,r,e)}),r.slice());return f[a]=p[1],{outputValues:d.values,outputShape:f,indices:o}}bf=Object.freeze({__proto__:null,simpleAbsImpl:m1,addImpl:rp,bincountImpl:S1,bincountReduceImpl:T1,ceilImpl:bh,concatImpl:A1,equalImpl:Nh,expImpl:Rh,expm1Impl:gd,floorImpl:bd,gatherNdImpl:F1,gatherV2Impl:D1,greaterImpl:wd,greaterEqualImpl:Id,lessImpl:Cd,lessEqualImpl:Rd,linSpaceImpl:O1,logImpl:Od,maxImpl:M1,maximumImpl:zd,minimumImpl:Ud,multiplyImpl:L1,negImpl:P1,notEqualImpl:Jd,prodImpl:V1,rangeImpl:U1,rsqrtImpl:nf,sigmoidImpl:sf,sliceImpl:j1,sparseFillEmptyRowsImpl:q1,sparseReshapeImpl:K1,sparseSegmentReductionImpl:X1,sqrtImpl:cf,squaredDifferenceImpl:df,stridedSliceImpl:Y1,stringNGramsImpl:Z1,stringSplitImpl:Q1,stringToHashBucketFastImpl:ew,subImpl:gf,tileImpl:nw,topKImpl:aw,transposeImpl:B1,uniqueImpl:sw});lo("cpu",()=>new f1,1);const iw=E1(_t,e=>0<=e?e:Math.exp(e)-1);xf={kernelName:_t,backendName:"cpu",kernelFunc:iw};function ow(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["alpha"],s=(ie([e],"leakyRelu"),U(e.shape)),i=n.data.get(e.dataId).values;const o=ee("float32",s);for(let e=0;e<i.length;e++)o[e]=i[e]<0?a*i[e]:i[e];return n.makeTensorInfo(e.shape,"float32",o)}wf={kernelName:Zt,backendName:"cpu",kernelFunc:ow};const uw=g1((e,t)=>e<0?t*e:e);function lw(e){const{inputs:t,backend:n}=e;var{x:e,alpha:r}=t,a=(ie([e,r],"prelu"),n.data.get(e.dataId).values),s=n.data.get(r.dataId).values,[e,r]=uw(e.shape,r.shape,a,s,"float32");return n.makeTensorInfo(r,"float32",e)}kf={kernelName:On,backendName:"cpu",kernelFunc:lw};const cw=E1(Bn,e=>Math.max(0,e));Nf={kernelName:Bn,backendName:"cpu",kernelFunc:cw};const hw=E1(Hn,e=>Math.min(Math.max(0,e),6));If={kernelName:Hn,backendName:"cpu",kernelFunc:hw};function pw(e,t,n,r,a){if("linear"===n)return b1({inputs:{x:t},backend:e});if("relu"===n)return cw({inputs:{x:t},backend:e});if("elu"===n)return iw({inputs:{x:t},backend:e});if("relu6"===n)return hw({inputs:{x:t},backend:e});if("prelu"===n)return lw({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return ow({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return G1({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function dw(e){const{inputs:t,backend:n,attrs:r}=e,a=t["x"];e=r.shape;const s=U(a.shape),i=Z(e,s),o=U(i);z(s===o,()=>`The new shape (${i}) has ${o} elements and the old `+`shape (${a.shape}) has ${s} elements. The new shape and old `+"shape must have the same number of elements."),n.incRef(a.dataId);e=n.data.get(a.dataId);if(null!=e.complexTensorInfos){const u=e.complexTensorInfos.real,l=e.complexTensorInfos.imag;u.shape=i,l.shape=i}return{dataId:a.dataId,shape:i,dtype:a.dtype}}Sf={kernelName:Wn,backendName:"cpu",kernelFunc:dw};function fw(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ie([a,s],"matMul");var e=a.shape.length,u=s.shape.length;const l=i?a.shape[e-2]:a.shape[e-1],c=o?s.shape[u-1]:s.shape[u-2];var e=i?a.shape[e-1]:a.shape[e-2],u=o?s.shape[u-2]:s.shape[u-1],h=a.shape.slice(0,-2),p=s.shape.slice(0,-2),d=U(h),f=U(p);const m=L(a.shape.slice(0,-2),s.shape.slice(0,-2));var h=m.concat([e,u]),p=(z(l===c,()=>`Error in matMul: inner shapes (${l}) and (`+`${c}) of Tensors with shapes ${a.shape} and `+s.shape+" and transposeA="+i+` and transposeB=${o} must match.`),i?[d,l,e]:[d,e,l]),e=o?[f,u,c]:[f,c,u],u=dw({inputs:{x:a},backend:n,attrs:{shape:p}}),p=dw({inputs:{x:s},backend:n,attrs:{shape:e}}),g=i?u.shape[1]:u.shape[2],y=i?u.shape[2]:u.shape[1],v=o?p.shape[1]:p.shape[2],b=Math.max(d,f),x=n.data.get(u.dataId).values,w=n.data.get(p.dataId).values,e=se(u.shape),k=se(p.shape),[N,I,S]=i?[e[0],1,e[1]]:[e[0],e[1],1],[T,C,E]=o?[1,k[1],k[0]]:[k[1],1,k[0]],_=y*v,e=ei([b,y,v],u.dtype);const A=e.values;var $=n.blockSize;for(let s=0;s<b;s++)for(let t=0;t<y;t+=$)for(let e=0;e<v;e+=$)for(let a=0;a<g;a+=$){var R=Math.min(t+$,y),F=Math.min(e+$,v),M=Math.min(a+$,g);for(let r=t;r<R;r++)for(let n=e;n<F;n++){let t=0;for(let e=a;e<M;e++){var D=Math.min(s,d-1)*N,O=Math.min(s,f-1)*E,D=x[D+r*I+e*S],O=w[e*T+n*C+O];t+=D*O}A[s*_+(r*v+n)]+=t}}return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(h,e.dtype,e.values)}Tf={kernelName:Je,backendName:"cpu",kernelFunc:fw};Cf={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{a:e,b:a,bias:s,preluActivationWeights:i}=t,{transposeA:o,transposeB:u,activation:l,leakyreluAlpha:c}=r;let h;const p=[];e=fw({inputs:{a:e,b:a},attrs:{transposeA:o,transposeB:u},backend:n}),h=e,s&&(a=I1({inputs:{a:h,b:s},backend:n}),p.push(h),h=a),l&&(o=pw(n,h,l,i,c),p.push(h),h=o);for(const d of p)n.disposeIntermediateTensorInfo(d);return h}},Ef=E1(De,e=>Math.acos(e)),_f={kernelName:De,backendName:"cpu",kernelFunc:Ef},a=E1(Oe,e=>Math.acosh(e)),Xh={kernelName:Oe,backendName:"cpu",kernelFunc:a};Yh={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;ie(t,"addN");var a=r.map(e=>n.data.get(e.dataId).values);const s=(e=ei(r[0].shape,r[0].dtype)).values;for(let e=0;e<r.length;e++){var i=a[e];for(let e=0;e<s.length;e++)s[e]+=i[e]}return n.makeTensorInfo(e.shape,e.dtype,e.values)}};ap={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t.x,{axis:a,keepDims:s}=r;ie(e,"all");let i=a=Q(a,e.shape);var o=hl(i,e.shape.length);let u=e;null!=o&&(u=W1({inputs:{x:e},backend:n,attrs:{perm:o}}),i=dl(i.length,e.shape.length)),cl("all",i,u.shape.length);var[e,l]=ul(u.shape,i),c=U(l);const h=xe(U(e),u.dtype);var p=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){var d=e*c;let t=p[d];for(let e=0;e<c;++e){var f=p[d+e];t=t&&f}h[e]=t}return null!=o&&n.disposeIntermediateTensorInfo(u),l=n.makeTensorInfo(e,u.dtype,h),s?(o=ll(e,a),s=dw({inputs:{x:l},backend:n,attrs:{shape:o}}),n.disposeIntermediateTensorInfo(l),s):l}};xh={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t.x,{axis:a,keepDims:s}=r;ie(e,"any");let i=a=Q(a,e.shape);var o=hl(i,e.shape.length);let u=e;null!=o&&(u=W1({inputs:{x:e},backend:n,attrs:{perm:o}}),i=dl(i.length,e.shape.length)),cl("any",i,u.shape.length);var[e,l]=ul(u.shape,i),c=U(l);const h=xe(U(e),u.dtype);var p=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){var d=e*c;let t=p[d];for(let e=0;e<c;++e){var f=p[d+e];t=t||f}h[e]=t}return null!=o&&n.disposeIntermediateTensorInfo(u),l=n.makeTensorInfo(e,u.dtype,h),s?(o=ll(e,a),s=dw({inputs:{x:l},backend:n,attrs:{shape:o}}),n.disposeIntermediateTensorInfo(l),s):l}};yd={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["axis"];ie(e,"argMax");let s=Q(a,e.shape),i=(a=hl(s,e.shape.length),e);const o=[];null!=a&&(i=W1({inputs:{x:e},backend:n,attrs:{perm:a}}),o.push(i),s=dl(s.length,i.shape.length)),cl("argMax",s=[s[0]],i.shape.length);var[e,a]=ul(i.shape,s);const u=xe(U(e),"int32");var l=U(a),c=n.data.get(i.dataId).values;for(let e=0;e<u.length;++e){var h=e*l;let t=c[h],n=0;for(let e=0;e<l;++e){var p=c[h+e];p>t&&(t=p,n=e)}u[e]=n}return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(e,"int32",u)}};lf={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["axis"];ie(e,"argMin");let s=Q(a,e.shape),i=(a=hl(s,e.shape.length),e);const o=[];null!=a&&(i=W1({inputs:{x:e},backend:n,attrs:{perm:a}}),o.push(i),s=dl(s.length,i.shape.length)),cl("argMin",s=[s[0]],i.shape.length);var[e,a]=ul(i.shape,s);const u=xe(U(e),"int32");var l=U(a),c=n.data.get(i.dataId).values;for(let e=0;e<u.length;++e){var h=e*l;let t=c[h],n=0;for(let e=0;e<l;++e){var p=c[h+e];p<t&&(t=p,n=e)}u[e]=n}return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(e,"int32",u)}},kd=E1(Ve,e=>Math.asin(e)),Td={kernelName:Ve,backendName:"cpu",kernelFunc:kd},Ed=E1(Ue,e=>Math.asinh(e)),Fd={kernelName:Ue,backendName:"cpu",kernelFunc:Ed},Md=E1(Ge,e=>Math.atan(e)),Pd={kernelName:Ge,backendName:"cpu",kernelFunc:Md},Gd=g1((e,t)=>Math.atan2(e,t)),Kd=k1(He,Gd),Zd={kernelName:He,backendName:"cpu",kernelFunc:Kd},rf=E1(je,e=>Math.atanh(e)),hf={kernelName:je,backendName:"cpu",kernelFunc:rf};function mw(s,e,t,i,o,u){var n=o.strideHeight,l=o.strideWidth,c=o.dilationHeight,h=o.dilationWidth,r=o.effectiveFilterHeight,p=o.effectiveFilterWidth,d=o.padInfo.top,f=o.padInfo.left,m="max"===u?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,t=ei(o.outShape,t);const g=t.values;var a=o.outShape[1]*o.outShape[2]*o.outShape[3],y=o.outShape[2]*o.outShape[3],v=o.outShape[3];for(let e=0;e<o.batchSize;++e){var b=e*a,x=e*i[0];for(let a=0;a<o.inChannels;++a)for(let e=0;e<o.outHeight;++e){var w=e*n-d,k=Math.max(0,w),N=Math.min(o.inHeight,r+w),I=b+e*y;for(let e=0;e<o.outWidth;++e){var S=e*l-f,T=Math.max(0,S),C=Math.min(o.inWidth,p+S);let t=m,n=0,r=0;for(let e=k;e<N;e+=c){var E=x+e*i[1];for(let e=T;e<C;e+=h){var _=s[E+e*i[2]+a];"max"===u&&_>t?t=_:"avg"===u&&(n+=_,r++)}if(isNaN(t))break}S=I+e*v+a;g[S]="avg"===u?n/r:t}}}return t}function gw(e,t,n,u,l=!1,c=!1){const h=ei(u.outShape,"int32");var r=u.strideHeight,p=u.strideWidth,d=u.dilationHeight,f=u.dilationWidth,a=u.effectiveFilterHeight,m=u.effectiveFilterWidth,g=u.padInfo.top,y=u.padInfo.left;const v=ei(t,n,e);for(let o=0;o<u.batchSize;++o)for(let i=0;i<u.inChannels;++i)for(let t=0;t<u.outHeight;++t){var b=t*r-g;let s=b;for(;s<0;)s+=d;var x=Math.min(u.inHeight,a+b);for(let e=0;e<u.outWidth;++e){var w=e*p-y;let n=w;for(;n<0;)n+=f;var k=Math.min(u.inWidth,m+w);let r=Number.NEGATIVE_INFINITY,a=-1;for(let t=s;t<x;t+=d){var N=t-b;for(let e=n;e<k;e+=f){var I=e-w,S=v.get(o,t,e,i);S>r&&(r=S,a=l?c?((o*u.inHeight+t)*u.inWidth+e)*u.inChannels+i:(t*u.inWidth+e)*u.inChannels+i:N*m+I)}}h.set(a,o,t,e,i)}}return h}function yw(u,o,e,l,c,h){var t=c.strideDepth,n=c.strideHeight,p=c.strideWidth,d=c.dilationDepth,f=c.dilationHeight,m=c.dilationWidth,r=c.effectiveFilterDepth,a=c.effectiveFilterHeight,g=c.effectiveFilterWidth,s=c.padInfo.front,y=c.padInfo.top,v=c.padInfo.left,b="max"===h?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,e=ei(c.outShape,e);const x=e.values;var i=c.outShape[1]*c.outShape[2]*c.outShape[3]*c.outShape[4],w=c.outShape[2]*c.outShape[3]*c.outShape[4],k=c.outShape[3]*c.outShape[4],N=c.outShape[4];for(let e=0;e<c.batchSize;++e){var I=e*i,S=e*l[0];for(let o=0;o<c.inChannels;++o)for(let e=0;e<c.outDepth;++e){var T=e*t-s;let i=T;for(;i<0;)i+=d;var C=Math.min(c.inDepth,r+T),E=I+e*w;for(let e=0;e<c.outHeight;++e){var _=e*n-y;let s=_;for(;s<0;)s+=f;var A=Math.min(c.inHeight,a+_),$=E+e*k;for(let e=0;e<c.outWidth;++e){var R=e*p-v;let t=R;for(;t<0;)t+=m;var F=Math.min(c.inWidth,g+R),R=$+e*N;let n=b,r=0,a=0;for(let e=i;e<C;e+=d){var D=S+e*l[1];for(let e=s;e<A;e+=f){var O=D+e*l[2];for(let e=t;e<F;e+=m){var M=u[O+e*l[3]+o];if("max"===h&&M>n?n=M:"avg"===h&&(r+=M,a++),isNaN(n))break}if(isNaN(n))break}if(isNaN(n))break}R=R+o;x[R]="avg"===h?r/a:n}}}}return e}ff={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=(ie(e=t.x,"avgPool"),r);z(Lo(s,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '1'`);var u=Co(e.shape,a,s,1,i,o);let l;if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))l=b1({inputs:{x:e},backend:n});else{var c=n.data.get(e.dataId).values;const s=se(e.shape);c=mw(c,e.shape,e.dtype,s,u,"avg");l=n.makeTensorInfo(u.outShape,e.dtype,c.values)}return l}};yf={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{filterSize:a,strides:s,pad:i,dimRoundingMode:o,dataFormat:u}=r,a=(ie(e,"avgPool3d"),Eo(e.shape,a,s,1,i,o,u)),s=yw(n.data.get(e.dataId).values,e.shape,e.dtype,se(e.shape),a,"avg");return n.makeTensorInfo(s.shape,"float32",s.values)}};rp={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,l=(ie([e,a],"avgPool3DGrad"),Eo(a.shape,s,i,1,o,u)),c=l.strideDepth,h=l.strideHeight,p=l.strideWidth,s=l.filterDepth,i=l.filterHeight,o=l.filterWidth,d=l.dilationDepth,f=l.dilationHeight,m=l.dilationWidth,g=l.effectiveFilterDepth,y=l.effectiveFilterHeight,v=l.effectiveFilterWidth,b=g-1-l.padInfo.front,x=v-1-l.padInfo.left,w=y-1-l.padInfo.top;const k=ei(a.shape,"float32");var N=1/(s*i*o);const I=n.bufferSync(e);for(let s=0;s<l.batchSize;++s)for(let a=0;a<l.inChannels;++a)for(let r=0;r<l.inDepth;++r)for(let n=0;n<l.inHeight;++n)for(let e=0;e<l.inWidth;++e){var S=r-b,T=n-w,C=e-x;let t=0;for(let e=0;e<g;e+=d){var E=(S+e)/c;if(!(E<0||E>=l.outDepth||Math.floor(E)!==E))for(let e=0;e<y;e+=f){var _=(T+e)/h;if(!(_<0||_>=l.outHeight||Math.floor(_)!==_))for(let e=0;e<v;e+=m){var A=(C+e)/p;A<0||A>=l.outWidth||Math.floor(A)!==A||(A=I.get(s,E,_,A,a),t+=A)}}}k.set(t*N,s,r,n,e,a)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};bh={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a}=t,s=a,{filterSize:a,strides:i,pad:o}=(ie([e,a],"avgPoolGrad"),r),u=Co(s.shape,a,i,1,o),l=u.strideHeight,c=u.strideWidth,a=u.filterHeight,i=u.filterWidth,h=u.dilationHeight,p=u.dilationWidth,d=u.effectiveFilterHeight,f=u.effectiveFilterWidth,m=f-1-u.padInfo.left,g=d-1-u.padInfo.top;const y=ei(s.shape,"float32");var v=1/(a*i),o=n.data.get(e.dataId).values;const b=ei(e.shape,"float32",o);for(let a=0;a<u.batchSize;++a)for(let r=0;r<u.inChannels;++r)for(let n=0;n<u.inHeight;++n)for(let e=0;e<u.inWidth;++e){var x=n-g,w=e-m;let t=0;for(let e=0;e<d;e+=h){var k=(x+e)/l;if(!(k<0||k>=u.outHeight||Math.floor(k)!==k))for(let e=0;e<f;e+=p){var N=(w+e)/c;N<0||N>=u.outWidth||Math.floor(N)!==N||(N=b.get(a,k,N,r),t+=N)}}y.set(t*v,a,n,e,r)}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};Nh={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,scale:a,offset:s,mean:i,variance:o}=t;z(i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(null==s||i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(null==a||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ie([e,i,o,a,s],"batchNorm");let u=r["varianceEpsilon"];null==u&&(u=.001);var l=n.data.get(e.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(o.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),d=s?n.data.get(s.dataId).values:new Float32Array([0]);const f=new Float32Array(l.length);var m=d.length,g=p.length,y=h.length,v=c.length;let b=0,x=0,w=0,k=0;for(let e=0;e<l.length;++e)f[e]=d[b++]+(l[e]-c[x++])*p[w++]/Math.sqrt(h[k++]+u),b>=m&&(b=0),x>=v&&(x=0),w>=g&&(w=0),k>=y&&(k=0);return n.makeTensorInfo(e.shape,e.dtype,f)}};Rh={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{blockShape:a,crops:s}=(e=t.x,r);ie([e],"batchToSpaceND");var i=a.reduce((e,t)=>e*t),o=Ep((c=Cp(e.shape,a,i)).length,a.length),i=_p(e.shape,a,i),u=Ap(s,a.length),l=$p(i,s,a.length),c=W1({inputs:{x:e=dw({inputs:{x:e},backend:n,attrs:{shape:c}})},backend:n,attrs:{perm:o}}),i=H1({inputs:{x:o=dw({inputs:{x:c},backend:n,attrs:{shape:i}})},backend:n,attrs:{begin:u,size:l}});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(o),i}};gd={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,weights:a}=t,s=r["size"],e=S1(n.data.get(e.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,s);return n.makeTensorInfo([s],a.dtype,e)}};bd={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{s0:e,s1:r}=t,e=n.data.get(e.dataId).values,r=n.data.get(r.dataId).values,e=L(Array.from(e),Array.from(r));return n.makeTensorInfo([e.length],"int32",Int32Array.from(e))}},wd=E1(rt,(e,t)=>{return e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e}),Id={kernelName:rt,backendName:"cpu",kernelFunc:wd},Cd={kernelName:st,backendName:"cpu",kernelFunc:e=>{var t=e.inputs["x"];const n=e.backend,r=new Float32Array(U(t.shape));e=n.data.get(t.dataId);const a=e.complexTensorInfos.real,s=e.complexTensorInfos.imag;var i=n.data.get(a.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;e++){const a=i[e],s=o[e];r[e]=Math.hypot(a,s)}return n.makeOutput(r,t.shape,"float32")}};function vw(e){const{inputs:t,backend:n}=e;var e=t["input"],e=n.data.get(e.dataId).complexTensorInfos.imag,r=n.data.get(e.dataId).values;return n.makeTensorInfo(e.shape,e.dtype,r)}Rd={kernelName:Kt,backendName:"cpu",kernelFunc:vw};function bw(e){const{inputs:t,backend:n,attrs:r}=e;e=r.axis;const a=Q(e,t[0].shape)[0];let s=Ip(t.map(e=>e.shape),a);if(0===U(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter(e=>0<U(e.shape));if(1===i.length)return b1({inputs:{x:i[0]},backend:n});if(Np(i.map(e=>e.shape),a),"complex64"===i[0].dtype){const c=i.map(e=>x1({inputs:{input:e},backend:n})),h=i.map(e=>vw({inputs:{input:e},backend:n}));var e=bw({inputs:c,backend:n,attrs:{axis:a}}),o=bw({inputs:h,backend:n,attrs:{axis:a}}),u=y1({inputs:{real:e,imag:o},backend:n});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),u}const l=i.map(e=>{var t=[-1,U(e.shape.slice(a))];return dw({inputs:{x:e},backend:n,attrs:{shape:t}})});e=l.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape})),s=Ip(l.map(e=>e.shape),1),o=1===l[0].shape[0],u=A1(e,s,t[0].dtype,o),e=Ip(i.map(e=>e.shape),a),o=n.makeTensorInfo(e,t[0].dtype,u);return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),o}Od={kernelName:it,backendName:"cpu",kernelFunc:bw};function xw(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t,{strides:s,pad:i,dataFormat:o,dilations:u,dimRoundingMode:l}=r,o=(ie([e,a],"conv2d"),zo(o)),c=_o(e.shape,a.shape,s,u,i,l,!1,o),h=c.filterHeight,p=c.filterWidth,d=c.dilationHeight,f=c.dilationWidth,m=c.padInfo.left,g=c.padInfo.top,s="channelsLast"===c.dataFormat,u=new ja(c.outShape,e.dtype),i=se(e.shape),y=se(a.shape),v=i[0],b=s?i[1]:i[2],x=s?i[2]:1,w=s?1:i[1],k=u.strides[0],N=s?u.strides[1]:u.strides[2],I=s?u.strides[2]:1,S=s?1:u.strides[1],T=n.data.get(e.dataId).values,C=n.data.get(a.dataId).values;const E=u.values;for(let e=0;e<c.batchSize;++e){var _=e*v,A=e*k;for(let e=0;e<c.outHeight;++e){var $=A+e*N,R=e*c.strideHeight-g;for(let e=0;e<h;++e){var F=R+e*d;if(!(F<0||F>=c.inHeight)){var D=e*y[0],M=_+F*b;for(let e=0;e<c.outWidth;++e){var L=$+e*I,z=e*c.strideWidth-m;for(let e=0;e<p;++e){var O=z+e*f;if(!(O<0||O>=c.inWidth)){var P=M+O*x;let t=D+e*y[1];for(let e=0;e<c.inChannels;++e){var B=T[P+e*w];for(let e=0;e<c.outChannels;++e)E[L+e*S]+=B*C[t+e];t+=c.outChannels}}}}}}}}return n.makeTensorInfo(u.shape,u.dtype,E)}zd={kernelName:ot,backendName:"cpu",kernelFunc:xw};Ud={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,dy:a}=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u,filterShape:l}=r,o=(ie([e,a],"conv2dBackpropFilter"),zo(o)),c=_o(e.shape,l,s,1,i,u,!1,o),{strideHeight:h,strideWidth:p,filterHeight:d,filterWidth:f}=c,m="channelsLast"===c.dataFormat;const g=new ja(c.filterShape,"float32");var y=c.padInfo.left,v=c.padInfo.top,l=n.data.get(e.dataId).values,s=n.data.get(a.dataId).values;const b=new ja(e.shape,e.dtype,l),x=new ja(a.shape,a.dtype,s);for(let e=0;e<d;++e){var w=Math.max(0,Math.ceil((v-e)/h)),k=Math.min(c.outHeight,(c.inHeight+v-e)/h);for(let i=0;i<f;++i){var N=Math.max(0,Math.ceil((y-i)/p)),I=Math.min(c.outWidth,(c.inWidth+y-i)/p);for(let s=0;s<c.inChannels;++s)for(let a=0;a<c.outChannels;++a){let r=0;for(let n=0;n<c.batchSize;++n)for(let t=w;t<k;++t){var S=e+t*h-v;for(let e=N;e<I;++e){var T=i+e*p-y;r+=m?b.get(n,S,T,s)*x.get(n,t,e,a):b.get(n,s,S,T)*x.get(n,a,t,e)}}g.set(r,e,i,s,a)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};Jd={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,filter:a}=t,{inputShape:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=(ie([e,a],"conv2dBackpropInput"),se(a.shape)),h=se(e.shape),u=zo(u),s=_o(s,a.shape,i,1,o,l,!1,u);const p=(i=new ja(s.inShape,"float32")).values;var d=n.data.get(e.dataId).values,f=n.data.get(a.dataId).values,[m,g,y]=c,{batchSize:v,filterHeight:b,filterWidth:x,inChannels:w,inHeight:k,inWidth:N,outChannels:I,outHeight:S,outWidth:T,strideHeight:C,strideWidth:E}=s,u=s.dataFormat,_=b-1-s.padInfo.top,A=x-1-s.padInfo.left,o="channelsLast"===u,$=i.strides[0],R=o?i.strides[1]:i.strides[2],F=o?i.strides[2]:1,M=o?1:i.strides[1],L=h[0],z=o?h[1]:h[2],P=o?h[2]:1,B=o?1:h[1];for(let a=0;a<v;++a)for(let r=0;r<w;++r)for(let t=0;t<k;++t){var D=t-_,W=Math.max(0,Math.ceil(D/C)),V=Math.min(S,(b+D)/C);for(let e=0;e<N;++e){var O=e-A,U=Math.max(0,Math.ceil(O/E)),G=Math.min(T,(x+O)/E);let n=0;for(let t=W;t<V;++t){var j=t*C-D;for(let e=U;e<G;++e){var H=e*E-O,q=L*a+z*t+P*e,K=m*(b-1-j)+g*(x-1-H)+y*r;for(let e=0;e<I;++e){var X=d[q+B*e],Y=f[K+e];n+=X*Y}}}var J=$*a+R*t+F*e+M*r;p[J]=n}}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};nf={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t,{strides:s,pad:i,dilations:o}=r,u=(ie([e,a],"conv3d"),Ao(e.shape,a.shape,s,o,i)),{filterDepth:l,filterHeight:c,filterWidth:h,dilationDepth:p,dilationHeight:d,dilationWidth:f,padInfo:s}=u,m=s.front,g=s.left,y=s.top,v=new ja(u.outShape,e.dtype),b=n.data.get(e.dataId).values,x=n.data.get(a.dataId).values;const w=v.values;var k=se(e.shape),N=se(a.shape);for(let e=0;e<u.batchSize;++e){var I=e*k[0],S=e*v.strides[0];for(let e=0;e<u.outDepth;++e){var T=S+e*v.strides[1],C=e*u.strideDepth-m;for(let e=0;e<l;++e){var E=C+e*p;if(!(E<0||E>=u.inDepth)){var _=e*N[0],A=I+E*k[1];for(let e=0;e<u.outHeight;++e){var $=T+e*v.strides[2],R=e*u.strideHeight-y;for(let e=0;e<c;++e){var F=R+e*d;if(!(F<0||F>=u.inHeight)){var D=_+e*N[1],M=A+F*k[2];for(let e=0;e<u.outWidth;++e){var L=$+e*u.outChannels,z=e*u.strideWidth-g;for(let e=0;e<h;++e){var O=z+e*f;if(!(O<0||O>=u.inWidth)){var P=D+e*N[2],B=M+O*u.inChannels;let t=P;for(let e=0;e<u.inChannels;++e){var W=b[B+e];for(let e=0;e<u.outChannels;++e)w[L+e]+=W*x[t+e];t+=u.outChannels}}}}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};sf={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,dy:a}=t,{strides:s,pad:i,filterShape:o}=r,u=(ie([e,a],"conv3dBackpropFilterV2"),se(e.shape)),l=se(a.shape),c=Ao(e.shape,o,s,1,i),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth;const y=(o=new ja(c.filterShape,"float32")).values;var[v,b,x,w]=o.strides,k=n.data.get(a.dataId).values,[N,I,S,T]=l,C=n.data.get(e.dataId).values,[E,_,A,$]=u,R=c.padInfo.front,F=c.padInfo.left,D=c.padInfo.top;for(let i=0;i<f;++i){var O=Math.max(0,Math.ceil((R-i)/h)),M=Math.min(c.outDepth,(c.inDepth+R-i)/h),L=i*v;for(let s=0;s<m;++s){var z=Math.max(0,Math.ceil((D-s)/p)),P=Math.min(c.outHeight,(c.inHeight+D-s)/p),B=s*b+L;for(let a=0;a<g;++a){var W=Math.max(0,Math.ceil((F-a)/d)),V=Math.min(c.outWidth,(c.inWidth+F-a)/d),U=a*x+B;for(let r=0;r<c.inChannels;++r){var G=r*w+U;for(let n=0;n<c.outChannels;++n){let t=0;for(let e=0;e<c.batchSize;++e){var j=e*E,H=e*N;for(let e=O;e<M;++e){var q=(i+e*h-R)*_+j,K=e*I+H;for(let e=z;e<P;++e){var X=(s+e*p-D)*A+q,Y=e*S+K;for(let e=W;e<V;++e){var J=a+e*d-F,Z=e*T+Y;t+=C[J*$+X+r]*k[Z+n]}}}}y[G+n]=t}}}}}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};cf={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,filter:a}=t,{pad:s,strides:i,inputShape:o}=r,u=(ie([e],"conv3dBackpropInputV2"),se(e.shape)),l=se(a.shape),o=Ao(o,a.shape,i,1,s);const c=(i=new ja(o.inShape,"float32")).values;var[h,p,d,f]=i.strides,m=n.data.get(e.dataId).values,[g,y,v,b]=u,x=n.data.get(a.dataId).values,[w,k,N,I]=l,{batchSize:S,filterDepth:T,filterHeight:C,filterWidth:E,inChannels:_,inDepth:M,inHeight:L,inWidth:z,outChannels:P,outDepth:B,outHeight:W,outWidth:V,strideDepth:A,strideHeight:$,strideWidth:R}=o,U=T-1-o.padInfo.front,G=C-1-o.padInfo.top,j=E-1-o.padInfo.left;for(let s=0;s<S;++s)for(let a=0;a<_;++a)for(let n=0;n<M;++n){var F=n-U,H=Math.max(0,Math.ceil(F/A)),q=Math.min(B,(T+F)/A);for(let t=0;t<L;++t){var D=t-G,K=Math.max(0,Math.ceil(D/$)),X=Math.min(W,(C+D)/$);for(let e=0;e<z;++e){var O=e-j,Y=Math.max(0,Math.ceil(O/R)),J=Math.min(V,(E+O)/R);let r=0;for(let n=H;n<q;++n){var Z=n*A-F;for(let t=K;t<X;++t){var Q=t*$-D;for(let e=Y;e<J;++e){var ee=e*R-O,te=g*s+y*n+v*t+b*e,ne=w*(T-1-Z)+k*(C-1-Q)+N*(E-1-ee)+I*a;for(let e=0;e<P;++e){var re=m[te+e],ae=x[ne+e];r+=re*ae}}}}c[h*s+p*n+d*t+f*e+a]=r}}}return n.makeTensorInfo(i.shape,i.dtype,i.values)}},df=E1(dt,e=>Math.cos(e)),gf={kernelName:dt,backendName:"cpu",kernelFunc:df},Ef=E1(ft,e=>Math.cosh(e)),a={kernelName:ft,backendName:"cpu",kernelFunc:Ef};kd={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{image:e,boxes:a,boxInd:s}=t,{cropSize:M,method:L,extrapolationValue:i}=r,[z,o,u,l]=e.shape,c=a.shape[0],[h,p]=M;const d=ei([c,h,p,l],"float32");var f=n.data.get(a.dataId).values,P=n.data.get(s.dataId).values,m=n.data.get(e.dataId).values,g=se(e.shape),y=se(d.shape);for(let r=0;r<c;r++){var v=4*r,b=f[v],x=f[1+v],w=f[2+v],k=f[3+v],N=P[r];if(!(z<=N)){var B=1<h?(w-b)*(o-1)/(h-1):0,I=1<p?(k-x)*(u-1)/(p-1):0;for(let n=0;n<h;n++){var S=1<h?b*(o-1)+n*B:.5*(b+w)*(o-1);if(S<0||o-1<S)for(let t=0;t<p;t++)for(let e=0;e<l;e++){var W=e+t*y[2]+n*y[1]+r*y[0];d.values[W]=i}else if("bilinear"===L){var T=Math.floor(S),C=Math.ceil(S),V=S-T;for(let t=0;t<p;t++){var E=1<p?x*(u-1)+t*I:.5*(x+k)*(u-1);if(E<0||u-1<E)for(let e=0;e<l;e++){var U=e+t*y[2]+n*y[1]+r*y[0];d.values[U]=i}else{var _=Math.floor(E),A=Math.ceil(E),$=E-_;for(let e=0;e<l;e++){var R=m[e+_*g[2]+T*g[1]+N*g[0]],F=m[e+A*g[2]+T*g[1]+N*g[0]],D=m[e+_*g[2]+C*g[1]+N*g[0]],G=m[e+A*g[2]+C*g[1]+N*g[0]],F=R+(F-R)*$;R=e+t*y[2]+n*y[1]+r*y[0],d.values[R]=F+(D+(G-D)*$-F)*V}}}}else for(let t=0;t<p;++t){var O=1<p?x*(u-1)+t*I:.5*(x+k)*(u-1);if(O<0||u-1<O)for(let e=0;e<l;e++){var j=e+t*y[2]+n*y[1]+r*y[0];d.values[j]=i}else{var H=Math.round(O),q=Math.round(S);for(let e=0;e<l;e++){var K=e+H*g[2]+q*g[1]+N*g[0],X=e+t*y[2]+n*y[1]+r*y[0];d.values[X]=m[K]}}}}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}};Ed={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,exclusive:s,reverse:i}=r,a=(ie(e,"cumprod"),hl([a],e.shape.length));let o=e;if(null!=a&&(o=W1({inputs:{x:e},backend:n,attrs:{perm:a}})),(e=dl(1,e.shape.length)[0])!==o.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+`axis=${o.shape.length-1} but got axis=`+e);e=Ya(o.dtype,"int32");const u=be(U(o.shape),e);var l=n.data.get(o.dataId).values;const c=o.shape[o.shape.length-1],h=i?(e,t)=>e+c-t-1:(e,t)=>e+t;for(let t=0;t<l.length;t+=c)for(let e=0;e<c;e++){var p,d=h(t,e);0===e?u[d]=s?1:l[d]:(p=h(t,e-1),u[d]=s?l[p]*u[p]:l[d]*u[p])}return i=n.makeTensorInfo(o.shape,e,u),null!=a?(e=pl(a),a=W1({inputs:{x:i},backend:n,attrs:{perm:e}}),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),a):i}};Md={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,exclusive:s,reverse:i}=r,a=(ie(e,"cumsum"),hl([a],e.shape.length));let o=e;if(null!=a&&(o=W1({inputs:{x:e},backend:n,attrs:{perm:a}})),(e=dl(1,e.shape.length)[0])!==o.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+`axis=${o.shape.length-1} but got axis=`+e);e=Ya(o.dtype,"int32");const u=xe(U(o.shape),e);var l=n.data.get(o.dataId).values;const c=o.shape[o.shape.length-1],h=i?(e,t)=>e+c-t-1:(e,t)=>e+t;for(let t=0;t<l.length;t+=c)for(let e=0;e<c;e++){var p,d=h(t,e);0===e?u[d]=s?0:l[d]:(p=h(t,e-1),u[d]=s?l[p]+u[p]:l[d]+u[p])}return i=n.makeTensorInfo(o.shape,e,u),null!=a?(e=pl(a),a=W1({inputs:{x:i},backend:n,attrs:{perm:e}}),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),a):i}};Gd={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var a,{x:e,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===e.shape.length)return a=S1(n.data.get(e.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i),n.makeTensorInfo([i],s.dtype,a);if(2===e.shape.length)return a=T1(n.bufferSync(e),n.bufferSync(s),i,o),n.makeTensorInfo(a.shape,s.dtype,a.values);throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+e.shape.length+".")}};Kd={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{blockSize:a,dataFormat:s}=(e=t.x,r);z("NHWC"===s,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+s);var i=e.shape[0],o=e.shape[1],u=e.shape[2],l=e.shape[3],c=o*a,h=u*a,p=l/(a*a),d=n.data.get(e.dataId).values;const f=new Float32Array(i*c*h*p);let m=0;for(let t=0;t<i;++t)for(let e=0;e<c;++e){var g=Math.floor(e/a),y=e%a;for(let e=0;e<h;++e){var v=Math.floor(e/a),b=(y*a+e%a)*p;for(let e=0;e<p;++e){var x=e+b+l*(v+u*(g+o*t));f[m++]=d[x]}}}return n.makeTensorInfo([i,c,h,p],e.dtype,f)}};function ww(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t;const{strides:s,pad:i,dilations:o,dimRoundingMode:u}=r;ie([e,a],"depthwiseConv2DNative");var l=se(e.shape),c=se(a.shape);let h=o;null==h&&(h=[1,1]),z(Lo(s,h),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+`1. Got strides ${s} and dilations '${h}'`);var p=_o(e.shape,a.shape,s,h,i,u,!0),{filterHeight:d,filterWidth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=p,v=y.left,b=y.top,x=p.outChannels/p.inChannels,w=new ja(p.outShape,e.dtype),k=n.data.get(e.dataId).values,N=n.data.get(a.dataId).values;const I=w.values;for(let e=0;e<p.batchSize;++e){var S=e*l[0],T=e*w.strides[0];for(let e=0;e<p.outHeight;++e){var C=T+e*w.strides[1],E=e*p.strideHeight-b;for(let e=0;e<d;++e){var _=E+e*m;if(!(_<0||_>=p.inHeight)){var A=e*c[0],$=S+_*l[1];for(let e=0;e<p.outWidth;++e){var R=C+e*w.strides[2],F=e*p.strideWidth-v;for(let e=0;e<f;++e){var D=F+e*g;if(!(D<0||D>=p.inWidth)){var O=A+e*c[1],M=$+D*p.inChannels;let t=R,n=O;for(let e=0;e<p.inChannels;++e){var L=k[M+e];for(let e=0;e<x;++e)I[t+e]+=L*N[n+e];t+=x,n+=x}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}rf={kernelName:xt,backendName:"cpu",kernelFunc:ww};wd={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,dy:a}=t,{strides:s,dilations:i,pad:o,dimRoundingMode:u,filterShape:l}=r,c=(ie([e,a],"depthwiseConv2dNativeBackpropFilter"),_o(e.shape,l,s,i,o,u,!0)),{strideHeight:h,strideWidth:p,filterHeight:d,filterWidth:f}=c;const m=new ja(c.filterShape,"float32");var g=c.padInfo.left,y=c.padInfo.top,v=c.outChannels/c.inChannels,l=n.data.get(e.dataId).values;const b=new ja(e.shape,e.dtype,l),x=(s=n.data.get(a.dataId).values,new ja(a.shape,a.dtype,s));for(let e=0;e<d;++e){var w=Math.max(0,Math.ceil((y-e)/h)),k=Math.min(c.outHeight,(c.inHeight+y-e)/h);for(let s=0;s<f;++s){var N=Math.max(0,Math.ceil((g-s)/p)),I=Math.min(c.outWidth,(c.inWidth+g-s)/p);for(let a=0;a<c.outChannels;++a){var S=Math.trunc(a/v),T=a%v;let r=0;for(let n=0;n<c.batchSize;++n)for(let t=w;t<k;++t){var C=e+t*h-y;for(let e=N;e<I;++e){var E=s+e*p-g;r+=b.get(n,C,E,S)*x.get(n,t,e,a)}}m.set(r,e,s,S,T)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};df={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,filter:a}=t,{strides:s,dilations:i,pad:o,dimRoundingMode:u,inputShape:l}=r,c=(ie([e,a],"depthwiseConv2DNativeBackpropInput"),se(e.shape)),h=se(a.shape),l=_o(l,a.shape,s,i,o,u,!0);const p=(s=new ja(l.inShape,"float32")).values;var[d,f,m]=s.strides,g=n.data.get(e.dataId).values,[y,v,b]=c,x=n.data.get(a.dataId).values,[w,k,N]=h,{batchSize:I,filterHeight:S,filterWidth:T,inChannels:C,inHeight:E,inWidth:_,outChannels:i,outHeight:A,outWidth:M,strideHeight:$,strideWidth:R}=l,L=S-1-l.padInfo.top,z=T-1-l.padInfo.left,F=i/C;for(let a=0;a<I;++a)for(let r=0;r<C;++r)for(let t=0;t<E;++t){var D=t-L,P=Math.max(0,Math.ceil(D/$)),B=Math.min(A,(S+D)/$);for(let e=0;e<_;++e){var O=e-z,W=Math.max(0,Math.ceil(O/R)),V=Math.min(M,(T+O)/R);let n=0;for(let t=P;t<B;++t){var U=t*$-D;for(let e=W;e<V;++e){var G=e*R-O,j=y*a+v*t+b*e,H=w*(S-1-U)+k*(T-1-G)+N*r;for(let e=0;e<F;++e){var q=g[j+(r*F+e)],K=x[H+e];n+=q*K}}}p[d*a+f*t+m*e+r]=n}}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var Ef={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var r=U((e=t["x"]).shape),a=n.data.get(e.dataId).values,s=ei([r,r],e.dtype);const i=s.values;for(let e=0;e<a.length;e++)i[e*r+e]=a[e];return e=[...e.shape,...e.shape],n.makeTensorInfo(e,s.dtype,s.values)}},kw={kernelName:It,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{var{x:s,filter:i}=e,{strides:e,pad:n,dilations:r}=n;const a=t;var o=a.data.get(s.dataId).values,u=s.shape.length,l=a.data.get(i.dataId).values,c=i.shape.length,{batchSize:h,inHeight:p,inWidth:d,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:v,strideWidth:b,filterHeight:x,filterWidth:w,dilationHeight:k,dilationWidth:N,outShape:I}=To(s.shape,i.shape,e,n,"NHWC",r),t=U(I),S=I.length;const T=te(s.dtype,t);for(let a=0;a<h;++a)for(let t=0;t<m;++t){var C=t*v-y.top;for(let e=0;e<g;++e){var E=e*b-y.left;for(let r=0;r<f;++r){let n=Number.MIN_SAFE_INTEGER;for(let t=0;t<x;++t){var _=C+t*k;if(0<=_&&_<p)for(let e=0;e<w;++e){var A,$=E+e*N;0<=$&&$<d&&($=Ne([a,_,$,r],u,se(s.shape)),A=Ne([t,e,r],c,se(i.shape)),($=o[$]+l[A])>n&&(n=$))}}var R=Ne([a,t,e,r],S,se(I));T[R]=n}}}return{dataId:a.write(Aa(T,s.dtype),I,s.dtype),shape:I,dtype:s.dtype}}},Nw={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e;var{strides:e,pad:n,dilations:i}=n;const o=t;var u=ve(r.shape,o.data.get(r.dataId).values),l=ve(a.shape,o.data.get(a.dataId).values);const{batchSize:c,inHeight:h,inWidth:p,inChannels:d,outHeight:f,outWidth:m,padInfo:g,strideHeight:y,strideWidth:v,filterHeight:b,filterWidth:x,dilationHeight:w,dilationWidth:k,outShape:N}=To(r.shape,a.shape,e,n,"NHWC",i);z(s.rank===N.length,()=>`Error in ${Tt}, dy `+`must have the same rank as output ${N.length}, but got `+s.rank);var I=ve(N,o.data.get(s.dataId).values);const S=we(a.shape,a.dtype);for(let i=0;i<c;++i)for(let t=0;t<f;++t){var T=t*y-g.top;for(let e=0;e<m;++e){var C=e*v-g.left;for(let s=0;s<d;++s){let n=Number.MIN_SAFE_INTEGER,r=0,a=0;for(let t=0;t<b;++t){var E=T+t*w;if(0<=E&&E<h)for(let e=0;e<x;++e){var _=C+e*k;0<=_&&_<p&&((_=u[i][E][_][s]+l[t][e][s])>n&&(n=_,r=t,a=e))}}S[r][a][s]+=I[i][t][e][s]}}}return{dataId:o.write(Aa(S,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Iw={kernelName:St,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e;var{strides:e,pad:n,dilations:i}=n;const o=t;var u=ve(r.shape,o.data.get(r.dataId).values),l=ve(a.shape,o.data.get(a.dataId).values);const{batchSize:c,inHeight:h,inWidth:p,inChannels:d,outHeight:f,outWidth:m,padInfo:g,strideHeight:y,strideWidth:v,filterHeight:b,filterWidth:x,dilationHeight:w,dilationWidth:k,outShape:N}=To(r.shape,a.shape,e,n,"NHWC",i);z(s.rank===N.length,()=>`Error in ${St}, dy `+`must have the same rank as output ${N.length}, but got `+s.rank);var I=ve(N,o.data.get(s.dataId).values);const S=we(r.shape,r.dtype);for(let i=0;i<c;++i)for(let t=0;t<f;++t){var T=t*y-g.top;for(let e=0;e<m;++e){var C=e*v-g.left;for(let s=0;s<d;++s){let n=Number.MIN_SAFE_INTEGER,r=T<0?0:T,a=C<0?0:C;for(let t=0;t<b;++t){var E=T+t*w;if(0<=E&&E<h)for(let e=0;e<x;++e){var _,A=C+e*k;0<=A&&A<p&&((_=u[i][E][A][s]+l[t][e][s])>n&&(n=_,r=E,a=A))}}S[i][r][a][s]+=I[i][t][e][s]}}}return{dataId:o.write(Aa(S,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Sw(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r;ie(e,"sum");let i;var e=(i="bool"===e.dtype?w1({inputs:{x:e},backend:n,attrs:{dtype:"int32"}}):b1({inputs:{x:e},backend:n})).shape.length,a=Q(a,i.shape),o=hl(a,e);let u=a,l=i;null!=o&&(l=W1({inputs:{x:i},backend:n,attrs:{perm:o}}),u=dl(u.length,e)),cl("sum",u,l.shape.length);var[e,c]=ul(l.shape,u),h=Ya(l.dtype,"int32");let p=v1(n,e,h);var d=U(c);const f=n.data.get(p.dataId).values;var m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){var g=e*d;let t=0;for(let e=0;e<d;++e)t+=m[g+e];f[e]=t}return s&&(e=ll(p.shape,a),p=dw({inputs:{x:h=p},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(h)),n.disposeIntermediateTensorInfo(i),null!=o&&n.disposeIntermediateTensorInfo(l),p}var Tw={kernelName:ir,backendName:"cpu",kernelFunc:Sw};var Cw={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["equation"],a=t,{allDims:s,summedDims:e,idDims:i}=Up(e,a.length),{path:o,steps:u}=(jp(s.length,i,a),Hp(e,i)),l=u.length;let c=null,h=s.length;const p=[];for(let e=0;e<l;++e){for(const m of u[e]){var{permutationIndices:d,expandDims:f}=Gp(h,i[m]);let e;qp(d)?e=a[m]:(e=W1({inputs:{x:a[m]},backend:n,attrs:{perm:d}}),p.push(e));const g=e.shape.slice();for(let e=0;e<f.length;++e)g.splice(f[e],0,1);ce(e.shape,g)||(e=dw({inputs:{x:e},backend:n,attrs:{shape:g}}),p.push(e)),null===c?c=e:(c=z1({inputs:{a:e,b:c},backend:n}),p.push(c))}e<l-1&&(0<=o[e]&&(c=Sw({inputs:{x:c},backend:n,attrs:{axis:o[e]-(s.length-h),keepDims:!1}}),p.push(c)),h--)}for(const y of p)y!==c&&n.disposeIntermediateTensorInfo(y);return c}};var Ew={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{dy:e,y:r}=t;ie([e,r],"eluGrad");const a=new Float32Array(U(r.shape));var s=n.data.get(r.dataId).values,i=n.data.get(e.dataId).values;for(let e=0;e<s.length;++e){var o=s[e];a[e]=1<=o?i[e]:i[e]*(o+1)}return n.makeTensorInfo(r.shape,"float32",a)}};var _w=E1($t,e=>{var t=Math.sign(e),e=Math.abs(e),n=1/(1+.3275911*e);return t*(1-((((1.061405429*n-1.453152027)*n+1.421413741)*n-.284496736)*n+.254829592)*n*Math.exp(-e*e))}),_w={kernelName:$t,backendName:"cpu",kernelFunc:_w};function Aw(e){var{inputs:e,backend:t,attrs:n}=e;const r=e["input"];e=n.dim;const a=r.shape.length,s=r.shape.slice();let i=e;return e<0&&(z(-(a+1)<=e,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),i=a+e+1),s.splice(i,0,1),dw({inputs:{x:r},backend:t,attrs:{shape:s}})}var $w={kernelName:Dt,backendName:"cpu",kernelFunc:Aw},Rw=g1((e,t)=>e/t);const Fw=k1(Ct,Rw),Dw={kernelName:Ct,backendName:"cpu",kernelFunc:Fw};function Ow(e,n,r){var t=e.shape,a=t[0],s=t[1],t=r.data.get(e.dataId),i=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,e=[a,s],t=U(e);const u=ee("float32",t),l=ee("float32",t);for(let t=0;t<a;t++){var c=H1({inputs:{x:i},backend:r,attrs:{begin:[t,0],size:[1,s]}}),h=H1({inputs:{x:o},backend:r,attrs:{begin:[t,0],size:[1,s]}});const e=y1({inputs:{real:c,imag:h},backend:r});var{real:p,imag:d}=function(e,t,n){var r=U(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,a=n.data.get(a.complexTensorInfos.imag.dataId).values;{var i,o,u,l,c,h,p,d;return function(e){return 0==(e&e-1)}(r)?(i=function e(t,n,r,a,s){if(1===r)return{real:t,imag:n};const i=Dp(t,n);const o=r/2;const u=Mp(i);const l=u.real;const c=u.imag;const h=[l.length];const p=s.makeTensorInfo(h,"float32",l);const d=s.makeTensorInfo(h,"float32",c);const M=y1({inputs:{real:p,imag:d},backend:s});const f=Lp(i);const m=f.real;const g=f.imag;const y=[m.length];const v=s.makeTensorInfo(y,"float32",m);const b=s.makeTensorInfo(y,"float32",g);const L=y1({inputs:{real:v,imag:b},backend:s});const x=e(l,c,o,a,s);const w=x.real;const z=x.imag;const k=[w.length];const N=s.makeTensorInfo(k,"float32",w);const I=s.makeTensorInfo(k,"float32",z);const S=y1({inputs:{real:N,imag:I},backend:s});const T=e(m,g,o,a,s);const C=T.real;const P=T.imag;const E=[C.length];const _=s.makeTensorInfo(E,"float32",C);const A=s.makeTensorInfo(E,"float32",P);const $=y1({inputs:{real:_,imag:A},backend:s});const R=Bp(r,a);const B=[R.real.length];const W=s.makeTensorInfo(B,"float32",R.real);const V=s.makeTensorInfo(B,"float32",R.imag);const U=y1({inputs:{real:W,imag:V},backend:s});const F=z1({inputs:{a:U,b:$},backend:s});const D=I1({inputs:{a:S,b:F},backend:s});const O=tw({inputs:{a:S,b:F},backend:s});const G=x1({inputs:{input:D},backend:s});const j=x1({inputs:{input:O},backend:s});const H=vw({inputs:{input:D},backend:s});const q=vw({inputs:{input:O},backend:s});const K=bw({inputs:[G,j],backend:s,attrs:{axis:0}});const X=bw({inputs:[H,q],backend:s,attrs:{axis:0}});const Y=s.data.get(K.dataId).values;const J=s.data.get(X.dataId).values;s.disposeIntermediateTensorInfo(p);s.disposeIntermediateTensorInfo(d);s.disposeIntermediateTensorInfo(M);s.disposeIntermediateTensorInfo(v);s.disposeIntermediateTensorInfo(b);s.disposeIntermediateTensorInfo(L);s.disposeIntermediateTensorInfo(N);s.disposeIntermediateTensorInfo(I);s.disposeIntermediateTensorInfo(S);s.disposeIntermediateTensorInfo(_);s.disposeIntermediateTensorInfo(A);s.disposeIntermediateTensorInfo($);s.disposeIntermediateTensorInfo(W);s.disposeIntermediateTensorInfo(V);s.disposeIntermediateTensorInfo(U);s.disposeIntermediateTensorInfo(F);s.disposeIntermediateTensorInfo(D);s.disposeIntermediateTensorInfo(O);s.disposeIntermediateTensorInfo(G);s.disposeIntermediateTensorInfo(H);s.disposeIntermediateTensorInfo(j);s.disposeIntermediateTensorInfo(q);s.disposeIntermediateTensorInfo(K);s.disposeIntermediateTensorInfo(X);return{real:Y,imag:J}}(s,a,r,t,n),e=[e.shape[0],e.shape[1]],t?(o=n.makeTensorInfo(e,"float32",i.real),e=n.makeTensorInfo(e,"float32",i.imag),u=n.makeTensorInfo([],"float32",_a(r,"float32")),l=b1({inputs:{x:u},backend:n}),c=Dw.kernelFunc({inputs:{a:o,b:u},backend:n}),h=Dw.kernelFunc({inputs:{a:e,b:l},backend:n}),p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),{real:p,imag:d}):i):Op(function(a,s,i){var e=new Float32Array(2*s);for(let r=0;r<s;r++){let t=0,n=0;for(let e=0;e<s;e++){var o=Wp(r*e,s,i),u=zp(a,e);t+=u.real*o.real-u.imag*o.imag,n+=u.real*o.imag+u.imag*o.real}i&&(t/=s,n/=s),Pp(e,t,n,r)}return e}(Dp(s,a),r,t))}}(e,n,r),f=Dp(p,d);for(let e=0;e<s;e++){var m=zp(f,e);u[t*s+e]=m.real,l[t*s+e]=m.imag}r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(e)}var t=r.makeTensorInfo(e,"float32",u),e=r.makeTensorInfo(e,"float32",l),g=y1({inputs:{real:t,imag:e},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(e),g}Rw={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var r=U((e=t["input"]).shape),a=e.shape[e.shape.length-1],r=dw({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),e=dw({inputs:{x:a=Ow(r,!1,n)},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),e}};function Mw(e){const{backend:t,attrs:n}=e;var{shape:e,value:r,dtype:a}=n,a=a||me(r),s=te(a,U(e));return r=r,s.fill(r),t.makeTensorInfo(e,a,s)}var Lw={kernelName:Lt,backendName:"cpu",kernelFunc:Mw};var zw={kernelName:zt,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{e=e.image;const n=t,r=ee(e.dtype,U(e.shape));var[a,s,i,o]=e.shape,u=n.data.get(e.dataId).values;for(let e=0;e<a;e++){var l=e*i*s*o;for(let e=0;e<s;e++){var c=e*(i*o);for(let n=0;n<i;n++){var h=n*o;for(let t=0;t<o;t++){var p=Math.round(i-n-1),d=l+c+h+t;let e=u[d];0<=p&&p<i&&(p=l+c+p*o+t,e=u[p]),r[d]=e}}}}return{dataId:n.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},Pw=g1((e,t)=>Math.floor(e/t)),Pw=k1(Bt,Pw,null,"int32"),Pw={kernelName:Bt,backendName:"cpu",kernelFunc:Pw};var Bw={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a,bias:s,preluActivationWeights:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r;let f=xw({inputs:{x:e,filter:a},backend:n,attrs:{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}});return s&&(e=f,f=I1({inputs:{a:f,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)),p&&(a=f,f=pw(n,f,p,i,d),n.disposeIntermediateTensorInfo(a)),f}};var Ww={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a,bias:s,preluActivationWeights:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r;let f=ww({inputs:{x:e,filter:a},backend:n,attrs:{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}});return s&&(e=f,f=I1({inputs:{a:f,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)),p&&(a=f,f=pw(n,f,p,i,d),n.disposeIntermediateTensorInfo(a)),f}};var Vw={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{params:e,indices:r}=t,a=U(e.shape),s=(s=r.shape)[s.length-1],[i,o,u,l]=Ci(e,r);return 0===o?n.makeTensorInfo(i,e.dtype,[]):(r=F1(n.data.get(r.dataId).values,n.bufferSync(e),e.dtype,o,s,u,l,e.shape,a),n.makeTensorInfo(i,e.dtype,r.values))}};var Uw={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,indices:a}=t,{axis:s,batchDims:i}=r,s=(ie([e,a],"gatherV2"),Q(s,e.shape)[0]),o=n.data.get(a.dataId).values;const u=e.shape[s];for(let e=0;e<o.length;++e){const h=o[e];z(h<=u-1&&0<=h,()=>`GatherV2: the index value ${h} is not in [0, ${u-1}]`)}let l=i;null==i&&(l=0);var i=U(a.shape),s=ld(e,a,s,l),e=dw({inputs:{x:e},backend:n,attrs:{shape:[s.batchSize,s.outerSize,s.dimSize,s.sliceSize]}}),a=dw({inputs:{x:a},backend:n,attrs:{shape:[s.batchSize,i/s.batchSize]}}),i=[s.batchSize,s.outerSize,i/s.batchSize,s.sliceSize],c=n.bufferSync(a),c=D1(n.bufferSync(e),c,i);return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.makeTensorInfo(s.outputShape,c.dtype,c.values)}};var Gw={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var r=U((e=t["input"]).shape),a=e.shape[e.shape.length-1],r=dw({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),e=dw({inputs:{x:a=Ow(r,!0,n)},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),e}},jw=E1(Xt,e=>Number.isFinite(e)?1:0,"bool"),jw={kernelName:Xt,backendName:"cpu",kernelFunc:jw},Hw=E1(Yt,e=>Math.abs(e)===1/0?1:0,"bool"),Hw={kernelName:Yt,backendName:"cpu",kernelFunc:Hw},qw=E1(Jt,e=>Number.isNaN(e)?1:0,"bool"),qw={kernelName:Jt,backendName:"cpu",kernelFunc:qw};var Kw={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e;var{start:e,stop:r,num:a}=n,e=O1(e,r,a);return t.makeTensorInfo([e.length],"float32",e)}},Xw=E1(rn,e=>Math.log1p(e)),Xw={kernelName:rn,backendName:"cpu",kernelFunc:Xw},Yw=g1((e,t)=>e&&t),Yw=k1(an,Yw,null,"bool"),Yw={kernelName:an,backendName:"cpu",kernelFunc:Yw},Jw=E1(sn,e=>e?0:1,"bool"),Jw={kernelName:sn,backendName:"cpu",kernelFunc:Jw},Zw=g1((e,t)=>e||t),Zw=k1(on,Zw,null,"bool"),Zw={kernelName:on,backendName:"cpu",kernelFunc:Zw};var Qw={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{depthRadius:i,bias:a,alpha:s,beta:o}=(e=t.x,r),u=(ie(e,"LRN"),e.shape[3]),l=u-1,c=n.data.get(e.dataId).values;var h=U(e.shape);const p=new Float32Array(h);for(let e=0;e<h;e++){var d=function(e){var t=e%u;let n=e-t+Math.max(0,t-i);var r=e-t+Math.min(t+i,l);let a=0;for(;n<=r;n++){var s=c[n];a+=s*s}return a}(e),d=c[e]*Math.pow(a+s*d,-o);p[e]=d}return n.makeTensorInfo(e.shape,e.dtype,p)}};var ek={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,y:a,dy:s}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=r,c=(ie(s,"LRNGrad"),U(s.shape)),h=s.shape[3],p=n.data.get(s.dataId).values,d=n.data.get(e.dataId).values,f=n.data.get(a.dataId).values;const m=new Float32Array(c);var g=c;for(let r=0;r<g;r++){var y=r%h,v=r-y+Math.max(0,y-i),b=r-y+Math.min(h,y+i+1);let n=0;for(let e=v;e<b;e++)n+=Math.pow(d[e],2);n=u*n+o;for(let t=v;t<b;t++){let e=-2*u*l*d[t]*f[r]/n;r===t&&(e+=Math.pow(n,-l)),e*=p[r],m[t]+=e}}return n.makeTensorInfo(s.shape,e.dtype,m)}};function tk(e){var{inputs:e,backend:t,attrs:n}=e,e=e["x"],{reductionIndices:n,keepDims:r}=n;const a=t;let s=e.shape;t=s.length,n=Q(n,s);let i=n;var o=hl(i,t);let u=a.data.get(e.dataId).values;if(null!=o){const h=new Array(t);for(let e=0;e<h.length;e++)h[e]=s[o[e]];u=B1(u,s,e.dtype,o,h),i=dl(i.length,t),s=h}ie(e,"max"),cl("max",i,t);var[t,l]=ul(s,i),l=U(l),l=M1(u,l,t,e.dtype),l=a.write(l,t,e.dtype);let c=t;return r&&(r=ll(t,n),c=r),{dataId:l,shape:c,dtype:e.dtype}}var nk={kernelName:hn,backendName:"cpu",kernelFunc:tk};var rk={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=(ie(e=t.x,"maxPool"),r);z(Lo(s,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '1'`);var u=Co(e.shape,a,s,1,i,o);let l;if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))l=b1({inputs:{x:e},backend:n});else{var c=n.data.get(e.dataId).values;const s=se(e.shape);c=mw(c,e.shape,e.dtype,s,u,"max");l=n.makeTensorInfo(u.outShape,e.dtype,c.values)}return l}};var ak={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{filterSize:a,strides:s,pad:i,dimRoundingMode:o,dataFormat:u}=r,a=(ie(e,"maxPool3d"),Eo(e.shape,a,s,1,i,o,u)),s=yw(n.data.get(e.dataId).values,e.shape,e.dtype,se(e.shape),a,"max");return n.makeTensorInfo(s.shape,"float32",s.values)}};var sk={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,l=(ie([e,a],"maxPool3DGrad"),Eo(a.shape,s,i,1,o,u));const c=function(c,h){const p=ei(h.outShape,"int32");var e=h.strideDepth,r=h.strideHeight,d=h.strideWidth,f=h.dilationDepth,m=h.dilationHeight,g=h.dilationWidth,t=h.effectiveFilterDepth,y=h.effectiveFilterHeight,v=h.effectiveFilterWidth,a=h.padInfo.front,s=h.padInfo.top,b=h.padInfo.left;for(let l=0;l<h.batchSize;++l)for(let u=0;u<h.inChannels;++u)for(let n=0;n<h.outDepth;++n){var x=n*e-a;let o=x;for(;o<0;)o+=f;var w=Math.min(h.inDepth,t+x);for(let t=0;t<h.outHeight;++t){var k=t*r-s;let i=k;for(;i<0;)i+=m;var N=Math.min(h.inHeight,y+k);for(let e=0;e<h.outWidth;++e){var I=e*d-b;let r=I;for(;r<0;)r+=g;var S=Math.min(h.inWidth,v+I);let a=Number.NEGATIVE_INFINITY,s=-1;for(let n=o;n<w;n+=f){var T=n-x;for(let t=i;t<N;t+=m){var C=t-k;for(let e=r;e<S;e+=g){var E=e-I,_=c.get(l,n,t,e,u);_>=a&&(a=_,s=T*y*v+C*y+E)}}}p.set(s,l,n,t,e,u)}}}return p}(n.bufferSync(a),l);var h=l.strideDepth,p=l.strideHeight,d=l.strideWidth,f=l.dilationDepth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterDepth,v=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=y-1-l.padInfo.front,w=b-1-l.padInfo.left,k=v-1-l.padInfo.top;const N=ei(a.shape,"float32"),I=n.bufferSync(e);for(let s=0;s<l.batchSize;++s)for(let a=0;a<l.inChannels;++a)for(let n=0;n<l.inDepth;++n)for(let t=0;t<l.inHeight;++t)for(let e=0;e<l.inWidth;++e){var S=n-x,T=t-k,C=e-w;let r=0;for(let n=0;n<y;n+=f){var E=(S+n)/h;if(!(E<0||E>=l.outDepth||Math.floor(E)!==E))for(let t=0;t<v;t+=m){var _=(T+t)/p;if(!(_<0||_>=l.outHeight||Math.floor(_)!==_))for(let e=0;e<b;e+=g){var A,$=(C+e)/d;$<0||$>=l.outWidth||Math.floor($)!==$||0!=(A=y*v*b-1-c.get(s,E,_,$,a)===n*v*b+t*b+e?1:0)&&($=I.get(s,E,_,$,a),r+=$*A)}}}N.set(r,s,n,t,e,a)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};var ik={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a,output:s}=t,i=a,{filterSize:a,strides:s,pad:o,dimRoundingMode:u}=(ie([a,s],"maxPoolGrad"),r),l=Co(i.shape,a,s,1,o,u),a=n.data.get(i.dataId).values;const c=ei(l.outShape,i.dtype,gw(a,i.shape,i.dtype,l).values);var h=l.strideHeight,p=l.strideWidth,d=l.dilationHeight,f=l.dilationWidth,m=l.effectiveFilterHeight,g=l.effectiveFilterWidth,y=g-1-l.padInfo.left,v=m-1-l.padInfo.top;const b=ei(i.shape,"float32"),x=(s=n.data.get(e.dataId).values,ei(e.shape,"float32",s));for(let a=0;a<l.batchSize;++a)for(let r=0;r<l.inChannels;++r)for(let t=0;t<l.inHeight;++t)for(let e=0;e<l.inWidth;++e){var w=t-v,k=e-y;let n=0;for(let t=0;t<m;t+=d){var N=(w+t)/h;if(!(N<0||N>=l.outHeight||Math.floor(N)!==N))for(let e=0;e<g;e+=f){var I,S=(k+e)/p;S<0||S>=l.outWidth||Math.floor(S)!==S||0!=(I=m*g-1-c.get(a,N,S,r)===t*g+e?1:0)&&(S=x.get(a,N,S,r),n+=S*I)}}b.set(n,a,t,e,r)}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var ok={kernelName:yn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{var e=e["x"],{filterSize:t,strides:r,pad:a,includeBatchInIndex:s}=t;const i=n;ie(e,"MaxPoolWithArgmax");var o,n=i.data.get(e.dataId).values,t=Co(e.shape,t,r,[1,1],a),[a,n]=(r=n,a=e.shape,n=e.dtype,s=s,u=t,o=mw(r,0,n,se(a),u,"max"),r=gw(r,a,n,u,!0,s),[o.values,r.values]),u=i.write(a,t.outShape,e.dtype),s=i.write(n,t.outShape,e.dtype);return[{dataId:u,shape:t.outShape,dtype:e.dtype},{dataId:s,shape:t.outShape,dtype:"int32"}]}};var uk={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r,i=Q(a,e.shape),i=U(ul(e.shape,i)[1]);const o=[];return i=n.makeTensorInfo([],"float32",new Float32Array([i])),o.push(i),e=w1({inputs:{x:e},backend:n,attrs:{dtype:"float32"}}),o.push(e),e=Fw({inputs:{a:e,b:i},backend:n}),o.push(e),i=Sw({inputs:{x:e},backend:n,attrs:{axis:a,keepDims:s}}),o.forEach(e=>n.disposeIntermediateTensorInfo(e)),i}};var lk={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t.x,{axis:a,keepDims:s}=r;ie(e,"min");let i=a=Q(a,e.shape);var o=hl(i,e.shape.length);let u=e;null!=o&&(u=W1({inputs:{x:e},backend:n,attrs:{perm:o}}),i=dl(i.length,e.shape.length)),cl("min",i,u.shape.length);var[e,l]=ul(u.shape,i),c=U(l);const h=xe(U(e),u.dtype);var p=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){var d=e*c;let t=p[d];for(let e=0;e<c;++e){var f=p[d+e];(Number.isNaN(f)||f<t)&&(t=f)}h[e]=t}return null!=o&&n.disposeIntermediateTensorInfo(u),l=n.makeTensorInfo(e,u.dtype,h),s?(o=ll(e,a),s=dw({inputs:{x:l},backend:n,attrs:{shape:o}}),n.disposeIntermediateTensorInfo(l),s):l}};var ck={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=t["x"],{paddings:s,mode:i}=r,o=(ie(a,"mirrorPad"),e=s.map((e,t)=>e[0]+a.shape[t]+e[1]),s.map(e=>e[0]));var u=s.map((e,t)=>e[0]+a.shape[t]),l="reflect"===i?0:1,c=n.data.get(a.dataId).values,h=a.shape.length,p=se(a.shape),d=U(e),f=e.length,m=se(e);const g=ee(a.dtype,d);for(let e=0;e<d;e++){let t=Ie(e,f,m);for(let e=0;e<f;e++)t[e]<o[e]?t[e]=2*o[e]-t[e]-l:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+l);var y=Ne(t=t.map((e,t)=>e-o[t]),h,p);g[e]=c[y]}return{dataId:n.write(g,e,a.dtype),shape:e,dtype:a.dtype}}},hk=g1((e,t)=>{var n=e%t;return e<0&&t<0||0<=e&&0<=t?n:(n+t)%t}),hk=k1(kn,hk),hk={kernelName:kn,backendName:"cpu",kernelFunc:hk};function pk(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["logits"],a=r["dim"],s=e.shape.length;let i=a;if((i=-1===i?s-1:i)!==s-1)throw Error("Softmax along a non-last dimension is not yet supported. "+`Logits was rank ${s} and dim was `+i);var a=Q([i],e.shape),s=tk({inputs:{x:e},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),o=ll(s.shape,a),u=dw({inputs:{x:s},backend:n,attrs:{shape:o}}),e=tw({inputs:{a:e,b:u},backend:n}),l=R1({inputs:{x:e},backend:n}),a=Sw({inputs:{x:l},backend:n,attrs:{axis:a,keepDims:!1}}),o=dw({inputs:{x:a},backend:n,attrs:{shape:o}}),c=Fw({inputs:{a:l,b:o},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),c}var dk={kernelName:lr,backendName:"cpu",kernelFunc:pk};var fk={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numSamples:a,seed:s,normalized:i}=(e=t.logits,r);ie(e,"multinomial");var o=(e=i?e:pk({inputs:{logits:e},backend:n,attrs:{dim:-1}})).shape[0],u=e.shape[1],l=n.data.get(e.dataId).values,c=[o,a];const h=xe(U(c),"int32");for(let e=0;e<o;++e){var p=e*u;const m=new Float32Array(u-1);m[0]=l[p];for(let e=1;e<m.length;++e)m[e]=m[e-1]+l[p+e];const g=(void 0)(s.toString());var d=e*a;for(let t=0;t<a;++t){var f=g();h[d+t]=m.length;for(let e=0;e<m.length;e++)if(f<m[e]){h[d+t]=e;break}}}return i||n.disposeIntermediateTensorInfo(e),n.makeTensorInfo(c,"int32",h)}};const mk=Th;var gk={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{boxes:e,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=r,e=(ie(e,"NonMaxSuppression"),n.data.get(e.dataId).values),a=n.data.get(a.dataId).values,e=mk(e,a,s,i,o)["selectedIndices"];return n.makeTensorInfo([e.length],"int32",new Int32Array(e))}};const yk=Ch;var vk={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{boxes:e,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=r,e=(ie(e,"NonMaxSuppressionPadded"),n.data.get(e.dataId).values),a=n.data.get(a.dataId).values,{selectedIndices:e,validOutputs:a}=yk(e,a,s,i,o,u);return[n.makeTensorInfo([e.length],"int32",new Int32Array(e)),n.makeTensorInfo([],"int32",new Int32Array([a]))]}};const bk=Eh;var xk={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{boxes:e,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=r,e=(ie(e,"NonMaxSuppressionWithScore"),n.data.get(e.dataId).values),a=n.data.get(a.dataId).values,{selectedIndices:e,selectedScores:a}=bk(e,a,s,i,o,u);return[n.makeTensorInfo([e.length],"int32",new Int32Array(e)),n.makeTensorInfo([a.length],"float32",new Float32Array(a))]}};var wk={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["indices"],{depth:a,onValue:s,offValue:i}=r,o=(ie(e,"oneHot"),U(e.shape));const u=new Float32Array(o*a);u.fill(i);var l=n.data.get(e.dataId).values;for(let e=0;e<o;++e)0<=l[e]&&l[e]<a&&(u[e*a+l[e]]=s);return n.makeTensorInfo([...e.shape,a],"int32",u)}};function kk(e){const{inputs:t,backend:n}=e;var r,a,s,i,o,e=t["x"];if("string"===e.dtype)throw new Error("zerosLike is not supported for string tensors");return"complex64"===e.dtype?(o=y1({inputs:{real:a=kk({inputs:{x:r=x1({inputs:{input:e},backend:n})},backend:n}),imag:i=kk({inputs:{x:s=vw({inputs:{input:e},backend:n})},backend:n})},backend:n}),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o):Mw({backend:n,attrs:{shape:e.shape,value:0,dtype:e.dtype}})}var Nk={kernelName:$r,backendName:"cpu",kernelFunc:kk};var Ik={kernelName:An,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t;var a,s,i,o,u,t=n.x;if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return"complex64"===t.dtype?(u=y1({inputs:{real:s=e({inputs:{x:a=x1({inputs:{input:t},backend:r})},backend:r}),imag:o=kk({inputs:{x:i=vw({inputs:{input:t},backend:r})},backend:r})},backend:r}),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u):Mw({backend:r,attrs:{shape:t.shape,value:1,dtype:t.dtype}})}};function Sk(e){const{inputs:t,backend:n,attrs:r}=e,a=r["axis"];if(1===t.length)return Aw({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype,o=(t.forEach(e=>{G(s,e.shape,"All tensors passed to stack must have matching shapes"),z(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")}),[]);e=bw({inputs:t.map(e=>{e=Aw({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(e),e}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),e}var Tk={kernelName:Rn,backendName:"cpu",kernelFunc:Sk};const Ck={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=t["x"],{paddings:s,constantValue:i}=r,o=(ie(a,"pad"),e=s.map((e,t)=>e[0]+a.shape[t]+e[1]),s.map(e=>e[0]));var u=n.data.get(a.dataId).values,l=U(a.shape),c=a.shape.length,h=se(a.shape),p=U(e),d=e.length,f=se(e);const m=ee(a.dtype,p);0!==i&&m.fill(i);for(let e=0;e<l;e++){const y=Ie(e,c,h);var g=Ne(y.map((e,t)=>e+o[t]),d,f);m[g]=u[e]}return{dataId:n.write(m,e,a.dtype),shape:e,dtype:a.dtype}}};var Ek=g1((e,t)=>Math.pow(e,t)),Ek=k1(Dn,Ek),Ek={kernelName:Dn,backendName:"cpu",kernelFunc:Ek};var _k={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e;var{start:e,stop:r,dtype:a,step:s}=n,e=U1(e,r,s,a);return t.makeTensorInfo([e.length],a,e)}},Ak=E1(Pn,e=>1/e),Ak={kernelName:Pn,backendName:"cpu",kernelFunc:Ak};var $k={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["images"],{alignCorners:a,halfPixelCenters:s,size:i}=r,o=(ie(e,"resizeBilinear"),se(e.shape)),[u,l]=i,[c,h,p,d]=e.shape,f=n.data.get(e.dataId).values;const m=new Float32Array(U([c,u,l,d]));let g=0;var y=(i=[a&&1<u?h-1:h,a&&1<l?p-1:p])[0]/(e=[a&&1<u?u-1:u,a&&1<l?l-1:l])[0],v=i[1]/e[1];for(let n=0;n<c;n++)for(let t=0;t<u;t++){let e;e=s?y*(t+.5)-.5:y*t;var b=Math.max(0,Math.floor(e)),x=e-b,w=Math.min(h-1,Math.ceil(e)),k=n*o[0]+b*o[1],N=n*o[0]+w*o[1];for(let t=0;t<l;t++){let e;e=s?v*(t+.5)-.5:v*t;var I=Math.max(0,Math.floor(e)),S=e-I,T=Math.min(p-1,Math.ceil(e)),C=k+I*o[2],E=N+I*o[2],_=k+T*o[2],A=N+T*o[2];for(let e=0;e<d;e++){var $=f[C+e],R=f[E+e],F=f[_+e],D=f[A+e],F=$+(F-$)*S;m[g++]=F+(R+(D-R)*S-F)*x}}}return n.makeTensorInfo([c,u,l,d],"float32",m)}};var Rk={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{images:e,dy:a}=t,s=r["alignCorners"],i=(ie([a,e],"resizeBilinearGrad"),se(e.shape)),[o,u,l,c]=e.shape,[,h,p]=a.shape;const d=new Float32Array(o*u*l*c);var f=(e=[s&&1<h?u-1:u,s&&1<p?l-1:l])[0]/(s=[s&&1<h?h-1:h,s&&1<p?p-1:p])[0],m=e[1]/s[1],g=n.data.get(a.dataId).values;let y=0;for(let e=0;e<o;e++){var v=e*i[0];for(let e=0;e<h;e++){var b=e*f,x=Math.floor(b),w=Math.min(Math.ceil(b),u-1),k=v+x*i[1],N=v+w*i[1],I=b-x,S=1-I;for(let e=0;e<p;e++){var T=e*m,C=Math.floor(T),E=Math.min(Math.ceil(T),l-1),T=T-C,_=1-T,A=k+C*i[2],$=k+E*i[2],R=N+C*i[2],F=N+E*i[2],D=S*_,M=S*T,L=I*_,z=I*T;for(let e=0;e<c;e++){var O=g[y++];d[A+e]+=O*D,d[$+e]+=O*M,d[R+e]+=O*L,d[F+e]+=O*z}}}}return n.makeTensorInfo([o,l,u,c],"float32",d)}};var Fk={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["images"],{alignCorners:a,halfPixelCenters:s,size:i}=r,o=(ie(e,"resizeNearestNeighbor"),se(e.shape)),[u,l]=i,[c,h,p,d]=e.shape,f=n.data.get(e.dataId).values;const m=new Float32Array(c*u*l*d);var g=[a&&1<u?u-1:u,a&&1<l?l-1:l],y=(i=[a&&1<u?h-1:h,a&&1<l?p-1:p])[0]/g[0],v=i[1]/g[1];let b=0;for(let e=0;e<c;e++){var x=e*o[0];for(let t=0;t<u;t++){var w=s?y*(t+.5):y*t;let e=Math.min(h-1,a?Math.round(w):Math.floor(w));var k=x+(e=s?Math.max(0,e):e)*o[1];for(let t=0;t<l;t++){var N=s?v*(t+.5):v*t;let e=Math.min(p-1,a?Math.round(N):Math.floor(N));var I=k+(e=s?Math.max(0,e):e)*o[2];for(let e=0;e<d;e++){var S=f[I+e];m[b++]=S}}}}return n.makeTensorInfo([c,u,l,d],e.dtype,m)}};var Dk={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{images:e,dy:a}=t,s=r["alignCorners"],i=(ie([a,e],"resizeNearestNeighborGrad"),se(e.shape)),o=se(a.shape),[u,l,c,h]=e.shape,[,p,d]=a.shape;const f=new Float32Array(u*l*c*h);var m=n.data.get(a.dataId).values,g=[s&&1<p?p-1:p,s&&1<d?d-1:d],y=(a=[s&&1<p?l-1:l,s&&1<d?c-1:c])[0]/g[0],v=a[1]/g[1],b=1/y,x=1/v,w=2*Math.ceil(b)+2,k=2*Math.ceil(x)+2;for(let e=0;e<u;e++){var N=e*i[0];for(let a=0;a<l;a++){var I=N+a*i[1],S=Math.floor(a*b),T=Math.floor(S-w/2);for(let r=0;r<c;r++){var C=I+r*i[2],E=Math.floor(r*x),_=Math.floor(E-k/2);for(let n=0;n<h;n++){let t=0;for(let e=0;e<w;e++){var A=e+T;if(!(A<0||p<=A)){var $=N+A*o[1],A=A*y,A=Math.min(l-1,s?Math.round(A):Math.floor(A));if(a===A)for(let e=0;e<k;e++){var R,F=e+_;F<0||d<=F||(R=$+F*o[2],F=F*v,F=Math.min(c-1,s?Math.round(F):Math.floor(F)),r===F&&(t+=m[R+n]))}}}f[C+n]=t}}}}return n.makeTensorInfo(e.shape,e.dtype,f)}};var Ok={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=t["x"];var e=r["dims"],s=(ie(a,"reverse"),a.shape.length);const i=Q(e,a.shape);if(0===s)return b1({inputs:{x:a},backend:n});const o=new ja(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<o.size;e++){const l=o.indexToLoc(e),c=l.slice();i.forEach(e=>c[e]=a.shape[e]-1-c[e]),o.set(u.get(...c),...l)}return n.makeTensorInfo(o.shape,o.dtype,o.values)}},Mk={kernelName:Dr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{var e=e["image"],{radians:t,fillValue:a,center:r}=t;const s=n,i=ee(e.dtype,U(e.shape));var[o,u,l,c]=e.shape,[h,p]=Tp(r,u,l),d=Math.sin(t),f=Math.cos(t),m=s.data.get(e.dataId).values;for(let e=0;e<o;e++){var g=e*l*u*c;for(let r=0;r<u;r++){var y=r*(l*c);for(let n=0;n<l;n++){var v=n*c;for(let t=0;t<c;t++){var b=[o,r,n,t],x=b[2],b=b[1],w=(x-h)*f-(b-p)*d,x=(x-h)*d+(b-p)*f,w=Math.round(w+h),x=Math.round(x+p);let e=a;"number"!=typeof a&&(e=3===t?255:a[t]),0<=w&&w<l&&0<=x&&x<u&&(b=g+x*(l*c)+w*c+t,e=m[b]);x=g+y+v+t;i[x]=e}}}}return{dataId:s.write(i,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},Lk=E1(Kn,e=>{var t=Math.floor(e);return e-t<.5?Math.floor(e):.5<e-t?Math.ceil(e):t%2==0?t:t+1}),Lk={kernelName:Kn,backendName:"cpu",kernelFunc:Lk};function zk(e,r,a,s,i,t,o,u,n,l){var c=[s/i,i],h=e.values,p=r.values;if(0===s)return ei(a,r.dtype);const d=ei(c,r.dtype);d.values.fill(n);for(let n=0;n<t;n++){const m=[];let t=0;for(let e=0;e<o;e++){var f=h[n*o+e];m.push(f),t+=f*u[e]}if(t<0||t>=s/i)throw new Error(`Invalid indices: ${m} does not index into `+a);for(let e=0;e<i;e++)l?d.values[t*i+e]+=p[n*i+e]:d.values[t*i+e]=0===r.rank?p[0]:p[n*i+e]}return d}var Pk={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{indices:e,updates:a}=t,s=r["shape"],{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=$i(0,e,s),e=zk(n.bufferSync(e),n.bufferSync(a),s,c,u,o,i,l,0,!0);return n.makeTensorInfo(s,e.dtype,e.values)}};var Bk={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ie([r,a,s],"select");var e=r.shape.length,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,l=Ya(a.dtype,s.dtype);const c=xe(U(a.shape),l);let h=0;var p=0===e||1<e||1===a.shape.length?1:U(a.shape.slice(1));for(let t=0;t<i.length;t++)for(let e=0;e<p;e++)1===i[t]?c[h++]=o[t]:c[h++]=u[t];return n.makeTensorInfo(a.shape,l,c)}};Rp,Fp;var Wk=E1(Zn,e=>0<=e?1.0507009873554805*e:1.7580993408473768*(Math.exp(e)-1)),Wk={kernelName:Zn,backendName:"cpu",kernelFunc:Wk},Vk=E1(nr,e=>e<0?-1:0<e?1:0),Vk={kernelName:nr,backendName:"cpu",kernelFunc:Vk},Uk=E1(er,e=>Math.sin(e)),Uk={kernelName:er,backendName:"cpu",kernelFunc:Uk},Gk=E1(tr,e=>Math.sinh(e)),Gk={kernelName:tr,backendName:"cpu",kernelFunc:Gk};const jk=Math.log(1.1920928955078125e-7)+2;var Hk=E1(ar,e=>{var t=e>-jk,n=e<jk,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r)}),Hk={kernelName:ar,backendName:"cpu",kernelFunc:Hk};var qk={kernelName:or,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;var a=e["x"],{blockShape:t,paddings:s}=r,i=(ie([a],"spaceToBatchND"),U(t));const o=[[0,0]];o.push(...s);for(let e=1+t.length;e<a.shape.length;++e)o.push([0,0]);var u=Cp((s=Ck.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:o,constantValue:0}})).shape,t,i,!1),l=Ep(u.length,t.length,!1),t=_p(s.shape,t,i,!1),i=dw({inputs:{x:s},backend:n,attrs:{shape:u}}),l=dw({inputs:{x:u=W1({inputs:{x:i},backend:n,attrs:{perm:l}})},backend:n,attrs:{shape:t}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};var Kk={kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{indices:e,values:r,denseShape:a,defaultValue:s}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:
        `+a.shape);if(2!==e.shape.length)throw new Error(`Indices must be a matrix, saw:
        `+e.shape);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:
        `+r.shape);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:
        `+s.shape);var i=n.data.get(e.dataId).values,o=n.data.get(r.dataId).values,a=n.data.get(a.dataId).values,s=n.data.get(s.dataId).values[0];const[u,l,c,h,p]=q1(i,e.shape,e.dtype,o,r.dtype,a,s);return[n.makeTensorInfo(l,e.dtype,u),n.makeTensorInfo([l[0]],r.dtype,c),n.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(e=>Number(e)))),n.makeTensorInfo([p.length],e.dtype,new Int32Array(p))]}};var Xk={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{inputIndices:e,inputShape:r,newShape:a}=t;if(2!==e.shape.length)throw new Error(`Input indices should be a matrix but received shape
        `+e.shape);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape
        `+r.shape);if(1!==a.shape.length)throw new Error("Target shape should be a vector but received shape "+a.shape);var r=Array.from(n.data.get(r.dataId).values),s=n.data.get(e.dataId).values,i=Array.from(n.data.get(a.dataId).values),[s,r,i]=K1(s,e.shape,e.dtype,r,i);return[n.makeTensorInfo(r,e.dtype,s),n.makeTensorInfo([i.length],a.dtype,new Int32Array(i))]}};var Yk={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{data:e,indices:r,segmentIds:a}=t;if(e.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape
          `+r.shape);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape
          `+a.shape);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");var s=n.data.get(e.dataId).values,r=n.data.get(r.dataId).values,a=n.data.get(a.dataId).values,[s,r]=X1(s,e.shape,e.dtype,r,a,!0);return n.makeTensorInfo(r,e.dtype,s)}};var Jk={kernelName:dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{data:e,indices:r,segmentIds:a}=t;if(e.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape
         `+r.shape);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape
         `+a.shape);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");var s=n.data.get(e.dataId).values,r=n.data.get(r.dataId).values,a=n.data.get(a.dataId).values,[s,r]=X1(s,e.shape,e.dtype,r,a);return n.makeTensorInfo(r,e.dtype,s)}};var Zk={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{sparseIndices:e,sparseValues:a,defaultValue:s}=t,i=r["outputShape"],{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=$i(0,e,i),e=zk(n.bufferSync(e),n.bufferSync(a),i,h,l,u,o,c,n.data.get(s.dataId).values[0],!1);return n.makeTensorInfo(i,e.dtype,e.values)}};var Qk={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:r,attrs:n}=e,a=t["x"];var{numOrSizeSplits:e,axis:s}=n;const i=Q(s,a.shape)[0],o=Kp(a,e,i),u=new Array(a.shape.length).fill(0),l=a.shape.slice();return o.map(e=>{const t=[...l];t[i]=e;var n=H1({inputs:{x:a},backend:r,attrs:{begin:u,size:t}});return u[i]+=e,n})}},e2=E1(Rr,(e,t)=>{return isNaN(e)?NaN:0<e?1:t.alpha}),e2={kernelName:Rr,backendName:"cpu",kernelFunc:e2};var t2={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=t["x"];var{begin:e,end:s,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h}=r,{finalShapeSparse:e,finalShape:s,isIdentity:i,sliceDim0:o,isSimpleSlice:u,begin:l,end:c,strides:h}=(ie(a,"stridedSlice"),Ki(a.shape,e,s,i,o,u,l,c,h));let p;return i?p=dw({inputs:{x:a},backend:n,attrs:{shape:s}}):o||u?(z(1<=a.shape.length,()=>"Input must have rank at least 1, got: "+a.shape.length),i=Mi(l,c,h),o=H1({inputs:{x:a},backend:n,attrs:{begin:l,size:i}}),p=dw({inputs:{x:o},backend:n,attrs:{shape:s}}),n.disposeIntermediateTensorInfo(o)):(u=Y1(e,n.bufferSync(a),h,l),p=n.makeTensorInfo(s,u.dtype,u.values)),p}};var n2={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{separator:e,nGramWidths:a,leftPad:s,rightPad:i,padWidth:o,preserveShortSequences:u}=r,{data:l,dataSplits:c}=t,[l,e]=Z1(n.data.get(l.dataId).values,n.data.get(c.dataId).values,e,a,s,i,o,u);return[n.makeTensorInfo([l.length],"string",l),n.makeTensorInfo(c.shape,"int32",e)]}};var r2={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["skipEmpty"],{input:a,delimiter:s}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error("Input must be a vector, got shape: "+a.shape);if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+s.shape);var[a,s,e]=Q1(n.data.get(a.dataId).values,n.data.get(s.dataId).values[0],e),i=s.length;return[n.makeTensorInfo([i,2],"int32",a),n.makeTensorInfo([i],"string",s),n.makeTensorInfo([2],"int32",new Int32Array(e))]}};var a2={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["numBuckets"],a=t["input"];if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(e<=0)throw new Error("Number of buckets must be at least 1");return e=ew(n.data.get(a.dataId).values,e),n.makeTensorInfo(a.shape,"int32",e)}},s2=E1(kr,e=>Math.tan(e)),s2={kernelName:kr,backendName:"cpu",kernelFunc:s2},i2=E1(Nr,e=>Math.tanh(e)),i2={kernelName:Nr,backendName:"cpu",kernelFunc:i2};var o2={kernelName:Ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["reps"],e=(ie(e,"tile"),nw(n.bufferSync(e),a));return n.makeTensorInfo(e.shape,e.dtype,e.values)}};var u2={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t.x,{k:a,sorted:s}=r;ie(e,"topk");var[i,e]=aw(i=n.data.get(e.dataId).values,e.shape,e.dtype,a,s);return[n.makeTensorInfo(i.shape,i.dtype,i.values),n.makeTensorInfo(e.shape,e.dtype,e.values)]}};var l2={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:a,attrs:L,backend:t}=e;var{image:n,transforms:r}=a,{interpolation:s,fillMode:i,fillValue:o,outputShape:e}=L,[u,l,c,h]=n.shape,[p,z]=null!=e?e:[l,c],d=[u,p,z,h],f=(e=se(n.shape))[0],m=e[1],g=e[2];const y=ee(n.dtype,U(d));y.fill(o);var v,b,x,w,k,N,I,S,T,C,E,_,A,$,R,F,P=t.data.get(n.dataId).values;const B=t.data.get(r.dataId).values;for(let a=0;a<u;++a){var D=1===r.shape[0]?B:B.subarray(8*a,8*a+8);for(let r=0;r<p;++r)for(let n=0;n<z;++n)for(let t=0;t<h;++t){let e;var O=D[6]*n+D[7]*r+1;if(0!=O){var M=(D[0]*n+D[1]*r+D[2])/O,O=(D[3]*n+D[4]*r+D[5])/O,W=c2(M,c,i),V=c2(O,l,i);switch(s){case"nearest":e=function(e,t,n,r,a,s,i,o,u,l,c){o=Math.round(o),u=Math.round(u);return h2(e,t,n,r,a,s,i,o,u,l,c)}(P,l,c,f,m,g,a,V,W,t,o);break;case"bilinear":e=(v=P,b=l,x=c,w=f,k=m,N=g,I=a,S=V,T=W,C=t,E=o,F=R=$=A=_=void 0,_=Math.floor(S),A=Math.floor(T),$=_+1,F=((R=A+1)-T)*h2(v,b,x,w,k,N,I,_,A,C,E)+(T-A)*h2(v,b,x,w,k,N,I,_,R,C,E),T=(R-T)*h2(v,b,x,w,k,N,I,$,A,C,E)+(T-A)*h2(v,b,x,w,k,N,I,$,R,C,E),($-S)*F+(S-_)*T);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+s)}M=a*f+r*m+n*g+t;y[M]=e}}return t.makeTensorInfo(d,n.dtype,y)}return{dataId:t.write(y,d,n.dtype),shape:n.shape,dtype:n.dtype}}};function c2(t,n,e){switch(e){case"reflect":{var r=t;var a=n;let e=r;e<0?e=a<=1?0:(r=2*a,(e=e<r?r*Math.trunc(-e/r)+e:e)<-a?e+r:-e-1):e>a-1&&(a<=1?e=0:(r=2*a,(e-=r*Math.trunc(e/r))>=a&&(e=r-e-1)));return m(0,e,a-1);return}case"wrap":{r=t;a=n;let e=r;e<0?a<=1?e=0:(r=a-1,e+=a*(Math.trunc(-e/r)+1)):e>a-1&&(a<=1?e=0:(r=a-1,e-=a*Math.trunc(e/r)));return m(0,e,a-1);return}case"nearest":return m(0,t,n-1);default:return t}}function h2(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}var p2={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e;var e=n.axis,a=t.x;ie(a,"unique");var{outputValues:s,outputShape:e,indices:i}=sw(s=r.data.get(a.dataId).values,e,a.shape,a.dtype);return[r.makeTensorInfo(e,a.dtype,s),r.makeTensorInfo([i.length],"int32",i)]}};var d2={kernelName:_r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=t["value"];let s=r["axis"];s<0&&(s+=a.shape.length);var i=a.shape.length,e=a.shape[s];const o=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==s&&(o[u++]=a.shape[e]);const l=new Array(i).fill(0),c=a.shape.slice(),h=(c[s]=1,new Array(e));for(let e=0;e<h.length;e++){l[s]=e;var p=H1({inputs:{x:a},backend:n,attrs:{begin:l,size:c}});h[e]=dw({inputs:{x:p},backend:n,attrs:{shape:o}}),n.disposeIntermediateTensorInfo(p)}return h}};var f2,m2,g2,y2={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:a,segmentIds:e}=t,s=r["numSegments"],i=(ie(a,"unsortedSegmentSum"),a.shape.length);const o=[],u=[];var l=i-e.shape.length;let c=e;for(let e=0;e<l;++e){var h=Aw({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=h,u.push(h)}for(let e=0;e<s;++e){var p=_a(e,"int32"),p=n.makeTensorInfo([],"int32",p),d=$1({inputs:{a:p,b:c},backend:n}),f=w1({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),m=z1({inputs:{a:f,b:a},backend:n}),g=Sw({inputs:{x:m},backend:n,attrs:{axis:0,keepDims:!1}});o.push(g),u.push(p),u.push(d),u.push(f),u.push(m),u.push(g)}return i=Sk({inputs:o,backend:n,attrs:{axis:0}}),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),i}};for(const rR of[Cf,Zh,_f,Xh,sp,Yh,ap,xh,yd,lf,Td,Fd,Pd,Zd,hf,ff,yf,rp,bh,Tf,Nh,Rh,gd,bd,np,wh,Id,Qh,Cd,Od,zd,Ud,Jd,nf,sf,cf,gf,a,kd,Ed,Md,Gd,Kd,rf,wd,df,Ef,kw,Nw,Iw,Cw,xf,Ew,vh,_w,md,$w,vd,Rw,Lw,zw,xd,Pw,Bw,Ww,Vw,Uw,Nd,Sd,ep,Gw,Rd,jw,Hw,qw,wf,$d,Dd,Kw,Ld,Xw,Yw,Jw,Zw,Qw,ek,nk,Wd,rk,ak,sk,ik,ok,uk,lk,Hd,ck,hk,fk,Xd,Yd,gk,vk,xk,Qd,wk,Ik,Tk,Ck,Ek,kf,tf,_k,tp,Dw,Ak,Nf,If,Sf,$k,Rk,Fk,Dk,Ok,Mk,Lk,af,Pk,Bk,Wk,of,Vk,Uk,Gk,uf,dk,Hk,qk,Kk,Xk,Yk,Jk,Zk,Qk,pf,{kernelName:gr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{e=e.x;const n=t;ie(e,"square");var r=n.data.get(e.dataId).values;const a=new Float32Array(r.length);for(let e=0;e<r.length;++e){var s=r[e];a[e]=s*s}return{dataId:n.write(a,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},mf,e2,t2,n2,r2,a2,vf,Tw,s2,i2,o2,u2,l2,ef,p2,d2,y2,Nk])Gr(rR);const v2={},b2={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function x2(e,t){if(!(e in v2)||null!=t){t=function(t,e){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==e?function(e){{if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}}(t):e;return n.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete v2[t]},!1),1!==t?n.getContext("webgl2",b2):n.getContext("webgl",b2)||n.getContext("experimental-webgl",b2)}(e,t);if(null===t)return console.log("Could not get context for WebGL version",e),null;v2[e]=t}const n=v2[e];return null==n||n.isContextLost()?(delete v2[e],x2(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),v2[e])}function w2(e,t){return[t,e]}function k2(e){e=U(e);return X(Math.ceil(e/4))}function N2(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function I2(e,t){var n=e;let r,a,s,i,o,u,l,c,h,p;return u=2===N.getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function d(e,t){t=t();if(N.getBool("DEBUG")){var n=e.getError();if(n!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,n))}return t}(Cf=f2=f2||{})[Cf.DENSE=0]="DENSE",Cf[Cf.SHARED_BATCH=1]="SHARED_BATCH",(Zh=m2=m2||{})[Zh.RENDER=0]="RENDER",Zh[Zh.UPLOAD=1]="UPLOAD",Zh[Zh.PIXELS=2]="PIXELS",Zh[Zh.DOWNLOAD=3]="DOWNLOAD",(_f=g2=g2||{})[_f.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",_f[_f.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",_f[_f.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",_f[_f.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",_f[_f.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";function S2(e,t){return D2(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}const T2=/ERROR: [0-9]+:([0-9]+):/g;function C2(e,t){var n=T2.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);n=+n[1];const r=e.split("\n"),a=r.length.toString().length+2,s=r.map((e,t)=>Y((t+1).toString(),a)+e);let i=0;for(let e=0;e<s.length;e++)i=Math.max(s[e].length,i);const o=s.slice(0,n-1);e=s.slice(n-1,n);const u=s.slice(n);console.log(o.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+Y(e[0],i),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function E2(e,t){if(d(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function _2(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(d(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),d(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),d(e,()=>e.enableVertexAttribArray(o)),!0)}function A2(e,t,n){var r=e,a=n,s=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1;if((a=a+r.TEXTURE0)<r.TEXTURE0||s<a)throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${s}]`}.`);d(e,()=>e.activeTexture(e.TEXTURE0+n)),d(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function $2(e,t,n){d(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),d(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function R2(e,t){d(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),d(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function F2(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function D2(e,t,n){e=d(e,()=>t());if(null==e)throw new Error(n);return e}function O2(e,t=2){return U(e.slice(0,e.length-t))}function M2(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[1<e.length?e[e.length-2]:1,e[e.length-1]]}function L2(e){let t=[1,1,1];var n=0===e.length||1===e.length&&1===e[0];return t=n?t:[O2(e),...M2(e)]}function z2(e){return e%2==0}function P2(e,t){if(ce(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(z2(n)&&z2(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&z2(e[0])&&z2(t[0])}let B2,W2;function V2(e,t){return null!=e.getExtension(t)}function U2(e){try{if(null!=x2(e))return 1}catch(e){return void console.log("Error when getting WebGL context: ",e)}}function G2(e){if(0===e)return!1;const t=x2(e);if(1===e)return!!V2(t,"OES_texture_float")&&(!!V2(t,"WEBGL_color_buffer_float")&&j2(t));if(V2(t,"EXT_color_buffer_float"))return j2(t);var n,r,a,e="EXT_color_buffer_half_float";return!!V2(t,e)&&(e=t.getExtension(e),n=t,e=I2(n,e=e),r=n.createTexture(),n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null),e=n.createFramebuffer(),n.bindFramebuffer(n.FRAMEBUFFER,e),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0),a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE,n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(e),a)}function j2(e){var t=I2(e),n=e.createTexture(),t=(e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null),e.createFramebuffer()),r=(e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE);return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(t),r}function H2(e,t){(e=Array.isArray(e)?e:[e]).forEach(e=>{null!=e&&z("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}const s=N;function q2(){let e,t,n,r,a,s,i,o,u,l;return l=2===N.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function K2(n,e,r="index"){const a=se(e);return a.map((e,t)=>{return`int ${n[t]} = ${r} / `+e+`; ${t===a.length-1?`int ${n[t+1]} = ${r} - ${n[t]} * `+e:`index -= ${n[t]} * `+e};`}).join("")}function X2(n,e,r="index"){const a=se(e);return a.map((e,t)=>{return`int ${n[t]} = ${r} / outShapeStrides[${t}]`+`; ${t===a.length-1?`int ${n[t+1]} = ${r} - ${n[t]} * outShapeStrides[${t}]`:`index -= ${n[t]} * outShapeStrides[${t}]`};`}).join("")}function Y2(n,e,r="index"){const a=function(e,t){var n=e.length,r=e.map(e=>t+`[${e}]`);const a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;0<=e;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(n.map((e,t)=>t),e);return a.map((e,t)=>{return`int ${n[t]} = ${r} / `+a[t]+`; ${t===a.length-1?`int ${n[t+1]} = ${r} - ${n[t]} * `+a[t]:`index -= ${n[t]} * `+a[t]};`}).join("")}function J2(e){e=se(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Z2(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}s.registerFlag("HAS_WEBGL",()=>0<s.getNumber("WEBGL_VERSION")),s.registerFlag("WEBGL_VERSION",()=>U2(2)?2:U2(1)?1:0),s.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),s.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===s.get("WEBGL_VERSION")),s.registerFlag("WEBGL_CPU_FORWARD",()=>!0),s.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),s.registerFlag("WEBGL_PACK",()=>s.getBool("HAS_WEBGL")),s.registerFlag("WEBGL_PACK_NORMALIZATION",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_CLIP",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_PACK_REDUCE",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_LAZILY_UNPACK",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_CONV_IM2COL",()=>s.getBool("WEBGL_PACK")),s.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>{var e=s.getNumber("WEBGL_VERSION");if(null==B2){const t=x2(e);B2=t.getParameter(t.MAX_TEXTURE_SIZE)}return B2}),s.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>{var e=s.getNumber("WEBGL_VERSION");if(null==W2){const t=x2(e);W2=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,W2)}),s.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{var t=s.getNumber("WEBGL_VERSION");if(0===t)return 0;{if(0===t)return 0;let e;var n=x2(t);return e=V2(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:V2(n,"EXT_disjoint_timer_query")?1:0}}),s.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>0<s.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")&&!ls()),s.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>{var e=s.getNumber("WEBGL_VERSION");if(0===e)return!1;var t=x2(e);if(1===e){if(!V2(t,"OES_texture_float"))return!1}else if(!V2(t,"EXT_color_buffer_float"))return!1;return j2(t)}),s.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!s.getBool("WEBGL_FORCE_F16_TEXTURES")&&s.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),s.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>G2(s.getNumber("WEBGL_VERSION"))),s.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{var e=s.getNumber("WEBGL_VERSION");return 2===e&&null!=x2(e).fenceSync}),s.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{return s.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0}),s.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+`delete) or at least 0, but got ${e}.`)}),s.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ls()?1:-1,e=>{if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+`manual flush) or at least 0, but got ${e}.`)}),s.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),s.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),s.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),s.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const Q2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,eN=Dh["getBroadcastDims"];function tN(e,i,o){const n=[];if(e.forEach(e=>{var t=U(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?n.push(`uniform float ${e.name}${1<t?`[${t}]`:""};`):(n.push(`uniform sampler2D ${e.name};`),n.push(`uniform int offset${e.name};`)),o.enableShapeUniforms){t=pN(o.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape)["uniformShape"];switch(t.length){case 1:n.push(`uniform int ${e.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${e.name}Shape;`)}n.push(`uniform ivec2 ${e.name}TexShape;`)}}),o.enableShapeUniforms){switch(i.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;")}n.push("uniform ivec2 outTexShape;")}o.customUniforms&&o.customUniforms.forEach(e=>{n.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const t=n.join("\n"),r=e.map(t=>{{var[t,n,r=!1,a]=[t,i,o.packedInputs,o.enableShapeUniforms];let e="";e+=(r?rN:nN)(t,a);var a=t.shapeInfo.logicalShape,s=n.logicalShape;return a.length<=s.length&&(e+=(r?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=eN(e.shapeInfo.logicalShape,t.logicalShape),u=hN(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&1<=o.length?"coords = 0;":o.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let p="";p=i<2&&0<s?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+l]).join(", ");let d="return outputValue;";e=U(e.shapeInfo.logicalShape),e=1===e,t=U(t.logicalShape),t=1===t;1!==s||e||t?e&&!t?d=1===i?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `:o.length&&(e=s-2,t=s-1,-1<o.indexOf(e)&&-1<o.indexOf(t)?d="return vec4(outputValue.x);":-1<o.indexOf(e)?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":-1<o.indexOf(t)&&(d="return vec4(outputValue.xx, outputValue.zz);")):d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${r}(${p});
      ${d}
    }
  `}:function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&ce(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const l=hN(u),c=eN(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&1<=c.length?"coords = 0;":c.map(e=>`coords.${d[e+h]} = 0;`).join("\n");let f="";f=u<2&&0<o?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+d[t+h]).join(", ");return`
    float ${a}() {
      ${l} coords = getOutputCoords();
      ${p}
      return get${r}(${f});
    }
  `})(t,n)),e}}).join("\n");var e=i.texShape,a=q2();const s=`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${a.texture2D}(textureSampler, uv).r;
    }
  `;let u,l,c=function(e){e=`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${aN}
    ${sN}
    ${iN}
  `;return e}(a);return l=i.isPacked?(u=function(e,t,n){switch(e.length){case 0:return uN();case 1:return function(e,t){e=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===e[0])return t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${e[1]}.0);
      }
    `;if(1===e[1])return t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${e[0]}.0);
      }
    `;if(t)return`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `;return`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return 2 * (resTexRC.x * ${e[1]} + resTexRC.y);
    }
  `}(t,n);case 2:return function(e,t,n){var r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ce(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;t=Math.ceil(e[1]/2);if(n)return`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `;return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${t});
      int c = imod(index, ${t}) * 2;

      return ivec2(r, c);
    }
  `}(e,t,n);case 3:return function(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],t=Math.ceil(e[2]/2),e=t*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${e};
      index -= b * ${e};

      int r = 2 * (index / ${t});
      int c = imod(index, ${t}) * 2;

      return ivec3(b, r, c);
    }
  `}(e,t,n);default:return function(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],e=Math.ceil(t[t.length-1]/2),r=e*Math.ceil(t[t.length-2]/2);let a=r,s="",i="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],s=`
      int b${e} = index / ${a};
      index -= b${e} * ${a};
    `+s,i=`b${e}, `+i;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${s}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${e});
      int c = imod(index, ${e}) * 2;

      return ivec${t.length}(${i});
    }
  `}(e,t,n)}}(i.logicalShape,e,o.enableShapeUniforms),`
    void setOutput(vec4 val) {
      ${a.output} = val;
    }
  `):(u=function(e,t,n){switch(e.length){case 0:return uN();case 1:return function(e,t){if(1===e[0])return t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `;if(1===e[1])return t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `;if(t)return`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `;return`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}(t,n);case 2:return function(e,t,n){if(ce(e,t))return n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;if(1===e[1])return n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `;if(1===e[0])return n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `;if(n)return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `;return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}(e,t,n);case 3:return function(e,t,n){if(n){const r=X2(["r","c","d"],e);return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${r}
    return ivec3(r, c, d);
  }
`}const r=K2(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}(e,t,n);case 4:return function(e,t,n){if(n){const r=X2(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}const r=K2(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}(e,t,n);case 5:return function(e,t){e=K2(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(e,t);case 6:return function(e,t){e=K2(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}(i.logicalShape,e,o.enableShapeUniforms),`
    void setOutput(float val) {
      ${a.output} = vec4(val, 0, 0, 0);
    }
  `),o.packedInputs&&(c+=oN),[c,s,l,t,u,r,o.userCode].join("\n")}function nN(e,M=!1){var L=e.shapeInfo.logicalShape;switch(L.length){case 0:{var t=e;var n=M;const g=t.name,U="get"+g.charAt(0).toUpperCase()+g.slice(1);if(t.shapeInfo.isUniform)return`float ${U}() {return ${g};}`;var[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`
      float ${U}() {
        return sampleTexture(${g}, halfCR);
      }
    `;r=lN(g);if(n)return`
    float ${U}() {
      vec2 uv = uvFromFlat(${g}TexShape[0], ${g}TexShape[1], ${r});
      return sampleTexture(${g}, uv);
    }
  `;var[a,n]=t.shapeInfo.texShape;return`
    float ${U}() {
      vec2 uv = uvFromFlat(${a}, ${n}, ${r});
      return sampleTexture(${g}, uv);
    }
  `;return}case 1:{t=e;a=M;const y=t.name,v="get"+y.charAt(0).toUpperCase()+y.slice(1);if(t.shapeInfo.isUniform)return`
      float ${v}(int index) {
        ${cN(t)}
      }
    `;t=t.shapeInfo.texShape,n=t[0],t=t[1];if(1===t&&1===n)return`
      float ${v}(int index) {
        return sampleTexture(${y}, halfCR);
      }
    `;r=lN(y);if(1===t)return a?`
      float ${v}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${r}) + 0.5) / float(${y}TexShape[0]));
        return sampleTexture(${y}, uv);
      }
    `:`
      float ${v}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${r}) + 0.5) / ${n}.0);
        return sampleTexture(${y}, uv);
      }
    `;if(1===n)return a?`
      float ${v}(int index) {
        vec2 uv = vec2((float(index + ${r}) + 0.5) / float(${y}TexShape[1]), 0.5);
        return sampleTexture(${y}, uv);
      }
    `:`
      float ${v}(int index) {
        vec2 uv = vec2((float(index + ${r}) + 0.5) / ${t}.0, 0.5);
        return sampleTexture(${y}, uv);
      }
    `;if(a)return`
    float ${v}(int index) {
      vec2 uv = uvFromFlat(${y}TexShape[0], ${y}TexShape[1], index + ${r});
      return sampleTexture(${y}, uv);
    }
  `;return`
    float ${v}(int index) {
      vec2 uv = uvFromFlat(${n}, ${t}, index + ${r});
      return sampleTexture(${y}, uv);
    }
  `;return}case 2:{var s=e;var i=M;const b=s.shapeInfo.logicalShape,x=s.name,w="get"+x.charAt(0).toUpperCase()+x.slice(1),k=s.shapeInfo.texShape;if(null!=k&&ce(b,k)){if(i)return`
      float ${w}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${x}TexShape[1], ${x}TexShape[0]);
        return sampleTexture(${x}, uv);
      }
    `;const G=k[0],j=k[1];return`
    float ${w}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${j}.0, ${G}.0);
      return sampleTexture(${x}, uv);
    }
  `}var{newShape:o,keptDims:u}=he(b);if(o.length<b.length)return o=dN(s,o),z=["row","col"],`
      ${nN(o,i)}
      float ${w}(int row, int col) {
        return ${w}(${fN(z,u)});
      }
    `;if(s.shapeInfo.isUniform)return`
      float ${w}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${b[1]}, 1)));
        ${cN(s)}
      }
    `;const G=k[0],j=k[1],N=lN(x);if(1===j)return i?`
      float ${w}(int row, int col) {
        float index = dot(vec3(row, col, ${N}), vec3(${x}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${x}TexShape[0]));
        return sampleTexture(${x}, uv);
      }
    `:`
    float ${w}(int row, int col) {
      float index = dot(vec3(row, col, ${N}), vec3(${b[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${G}.0);
      return sampleTexture(${x}, uv);
    }
  `;if(1===G)return i?`
      float ${w}(int row, int col) {
        float index = dot(vec3(row, col, ${N}), vec3(${x}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${x}TexShape[1]), 0.5);
        return sampleTexture(${x}, uv);
      }
    `:`
    float ${w}(int row, int col) {
      float index = dot(vec3(row, col, ${N}), vec3(${b[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${j}.0, 0.5);
      return sampleTexture(${x}, uv);
    }
  `;if(i)return`
      float ${w}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${x}Shape[1] + col + ${N};
        vec2 uv = uvFromFlat(${x}TexShape[0], ${x}TexShape[1], index);
        return sampleTexture(${x}, uv);
      }
    `;return`
  float ${w}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${b[1]} + col + ${N};
    vec2 uv = uvFromFlat(${G}, ${j}, index);
    return sampleTexture(${x}, uv);
  }
`;return}case 3:{o=e;var z=M;const I=o.shapeInfo.logicalShape,S=o.name,T="get"+S.charAt(0).toUpperCase()+S.slice(1),H=I[1]*I[2],q=I[2],{newShape:K,keptDims:X}=he(I),Y=K;if(Y.length<I.length)return l=dN(o,Y),c=["row","col","depth"],`
        ${nN(l,z)}
        float ${T}(int row, int col, int depth) {
          return ${T}(${fN(c,X)});
        }
      `;if(o.shapeInfo.isUniform)return`
      float ${T}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${H}, ${q}, 1)));
        ${cN(o)}
      }
    `;var l=o.shapeInfo.texShape,c=l[0],l=l[1],o=o.shapeInfo.flatOffset;if(l===H&&null==o)return z?`
      float ${T}(int row, int col, int depth) {
        int stride1 = ${S}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${S}TexShape[1], ${S}TexShape[0]);
        return sampleTexture(${S}, uv);
      }
    `:`
        float ${T}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${q}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${l}.0, ${c}.0);
          return sampleTexture(${S}, uv);
        }
      `;if(l===q&&null==o)return z?`
      float ${T}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${S}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${S}TexShape[1], ${S}TexShape[0]);
        return sampleTexture(${S}, uv);
      }
    `:`
    float ${T}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${I[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}.0, ${c}.0);
      return sampleTexture(${S}, uv);
    }
  `;o=lN(S);if(z)return`
    float ${T}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${S}Shape[1] * ${S}Shape[2];
      int stride1 = ${S}Shape[2];
      int index = row * ${H} + col * ${q} + depth + ${o};
      vec2 uv = uvFromFlat(${S}TexShape[0], ${S}TexShape[1], index);
      return sampleTexture(${S}, uv);
    }
    `;return`
      float ${T}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${H} + col * ${q} + depth + ${o};
        vec2 uv = uvFromFlat(${c}, ${l}, index);
        return sampleTexture(${S}, uv);
      }
  `;return}case 4:{u=e;s=M;const C=u.shapeInfo.logicalShape,E=u.name,_="get"+E.charAt(0).toUpperCase()+E.slice(1),J=C[3],Z=C[2]*J,Q=C[1]*Z,{newShape:ee,keptDims:te}=he(C);if(ee.length<C.length)return h=dN(u,ee),p=["row","col","depth","depth2"],`
      ${nN(h,s)}
      float ${_}(int row, int col, int depth, int depth2) {
        return ${_}(${fN(p,te)});
      }
    `;if(u.shapeInfo.isUniform)return`
      float ${_}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${Q}, ${Z}, ${J}, 1)));
        ${cN(u)}
      }
    `;var h=u.shapeInfo.flatOffset,p=u.shapeInfo.texShape,u=p[0],p=p[1],i=`int stride2 = ${E}Shape[3];`,c=`int stride1 = ${E}Shape[2] * stride2;`,l=`int stride0 = ${E}Shape[1] * stride1;`;if(p===Q&&null==h)return s?`
      float ${_}(int row, int col, int depth, int depth2) {
        ${i}
        ${c}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${E}TexShape[1], ${E}TexShape[0]);
        return sampleTexture(${E}, uv);
      }
    `:`
      float ${_}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${Z}, ${J}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${u}.0);
        return sampleTexture(${E}, uv);
      }
    `;if(p===J&&null==h)return s?`
      float ${_}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${E}Shape[1] * ${E}Shape[2], ${E}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${E}TexShape[1], ${E}TexShape[0]);
        return sampleTexture(${E}, uv);
      }
    `:`
      float ${_}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${C[1]*C[2]}, ${C[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${u}.0);
        return sampleTexture(${E}, uv);
      }
    `;h=lN(E);if(s)return`
    float ${_}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${i}
      ${c}
      ${l}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${E}TexShape[0], ${E}TexShape[1], index + ${h});
      return sampleTexture(${E}, uv);
    }
  `;return`
    float ${_}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${Q} + col * ${Z} +
          depth * ${J} + depth2;
      vec2 uv = uvFromFlat(${u}, ${p}, index + ${h});
      return sampleTexture(${E}, uv);
    }
  `;return}case 5:{p=e;const A=p.shapeInfo.logicalShape,$=p.name,R="get"+$.charAt(0).toUpperCase()+$.slice(1),ne=A[4],re=A[3]*ne,ae=A[2]*re,se=A[1]*ae,{newShape:ie,keptDims:oe}=he(A);if(ie.length<A.length)return d=dN(p,ie),f=["row","col","depth","depth2","depth3"],`
      ${nN(d)}
      float ${R}(int row, int col, int depth, int depth2, int depth3) {
        return ${R}(${fN(f,oe)});
      }
    `;if(p.shapeInfo.isUniform)return`
      float ${R}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${se}, ${ae}, ${re}, ${ne})) +
          depth3;
        ${cN(p)}
      }
    `;var d=p.shapeInfo.flatOffset,f=p.shapeInfo.texShape,p=f[0],f=f[1];if(f===se&&null==d)return`
      float ${R}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${ae}, ${re}, ${ne}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${$}, uv);
      }
    `;if(f===ne&&null==d)return`
      float ${R}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${A[1]*A[2]*A[3]},
               ${A[2]*A[3]}, ${A[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${$}, uv);
      }
    `;d=lN($);return`
    float ${R}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${se} + col * ${ae} + depth * ${re} +
          depth2 * ${ne} + depth3 + ${d};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${$}, uv);
    }
  `;return}case 6:{h=e;const F=h.shapeInfo.logicalShape,D=h.name,O="get"+D.charAt(0).toUpperCase()+D.slice(1),{newShape:ue,keptDims:le}=he(F);if(ue.length<F.length)return m=dN(h,ue),P=["row","col","depth","depth2","depth3","depth4"],`
      ${nN(m)}
      float ${O}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${O}(${fN(P,le)});
      }
    `;var m=F[5],P=F[4]*m,d=F[3]*P,f=F[2]*d,B=F[1]*f;if(h.shapeInfo.isUniform)return`
      float ${O}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${B}, ${f}, ${d}, ${P})) +
          dot(
            vec2(depth3, depth4),
            vec2(${m}, 1)));
        ${cN(h)}
      }
    `;var W=h.shapeInfo.flatOffset,h=h.shapeInfo.texShape,V=h[0],h=h[1];if(h===B&&null==W)return`
      float ${O}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${f}, ${d}, ${P}, ${m})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${V}.0);
        return sampleTexture(${D}, uv);
      }
    `;if(h===m&&null==W)return`
      float ${O}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${F[1]*F[2]*F[3]*F[4]},
               ${F[2]*F[3]*F[4]},
               ${F[3]*F[4]},
               ${F[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${V}.0);
        return sampleTexture(${D}, uv);
      }
    `;W=lN(D);return`
    float ${O}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${B} + col * ${f} + depth * ${d} +
          depth2 * ${P} + depth3 * ${m} + depth4 + ${W};
      vec2 uv = uvFromFlat(${V}, ${h}, index);
      return sampleTexture(${D}, uv);
    }
  `;return}default:throw new Error(L.length+"-D input sampling is not yet supported")}}function rN(e,a){switch(e.shapeInfo.logicalShape.length){case 0:{var t=e;const h=t.name,p="get"+h.charAt(0).toUpperCase()+h.slice(1),d=q2();return`
    vec4 ${p}() {
      return ${d.texture2D}(${h}, halfCR);
    }
  `;return}case 1:{t=e;var n=a;const f=t.name,m="get"+f.charAt(0).toUpperCase()+f.slice(1),g=t.shapeInfo.texShape,y=q2();if(n)return`
    vec4 ${m}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${f}TexShape[0]) / 2.0), ceil(float(${f}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${y.texture2D}(${f}, uv);
    }
  `;t=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)];return`
    vec4 ${m}(int index) {
      vec2 uv = packedUVfrom1D(
        ${t[0]}, ${t[1]}, index);
      return ${y.texture2D}(${f}, uv);
    }
  `;return}case 2:{n=e;var r=a;const v=n.shapeInfo.logicalShape,b=n.name,x="get"+b.charAt(0).toUpperCase()+b.slice(1),w=n.shapeInfo.texShape,k=w[0],N=w[1],I=q2();if(null!=w&&ce(v,w))return r?`
      vec4 ${x}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${b}TexShape[1], ${b}TexShape[0]);

        return ${I.texture2D}(${b}, uv);
      }
    `:`
      vec4 ${x}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${N}.0, ${k}.0);

        return ${I.texture2D}(${b}, uv);
      }
    `;if(r)return`
    vec4 ${x}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${b}TexShape[0]) / 2.0), ceil(float(${b}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${b}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${I.texture2D}(${b}, uv);
    }
  `;n=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)],r=Math.ceil(v[1]/2);return`
    vec4 ${x}(int row, int col) {
      vec2 uv = packedUVfrom2D(${r}, ${n[0]}, ${n[1]}, row, col);
      return ${I.texture2D}(${b}, uv);
    }
  `;return}case 3:{r=e;var s=a;const S=r.shapeInfo.logicalShape,T=r.name,C="get"+T.charAt(0).toUpperCase()+T.slice(1),E=r.shapeInfo.texShape,_=[Math.ceil(E[0]/2),Math.ceil(E[1]/2)];if(1===S[0])return i=S.slice(1),o=[1,2],r=dN(r,i),i=["b","row","col"],`
        ${rN(r,s)}
        vec4 ${C}(int b, int row, int col) {
          return ${C}(${fN(i,o)});
        }
      `;r=q2();if(s)return`
    vec4 ${C}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${T}TexShape[0]) / 2.0), ceil(float(${T}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${T}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${T}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${r.texture2D}(${T}, uv);
    }
  `;var i=_[0],o=_[1],s=Math.ceil(S[2]/2),u=s*Math.ceil(S[1]/2);return`
    vec4 ${C}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${i}, ${o}, ${u}, ${s}, b, row, col);
      return ${r.texture2D}(${T}, uv);
    }
  `;return}default:{i=e;o=a;const A=i.name,$="get"+A.charAt(0).toUpperCase()+A.slice(1),R=q2();if(o)return`
    vec4 ${$}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${A}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${A}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${A}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${A}TexShape[0]) / 2.0), ceil(float(${A}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${R.texture2D}(${A}, uv);
    }
  `;var l=i.shapeInfo.logicalShape,c=l.length,o=i.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],o=i[0],i=i[1],u=Math.ceil(l[c-1]/2);let t=u*Math.ceil(l[c-2]/2),n="int b, int row, int col",r=`b * ${t} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<c-1;e++)n=`int b${e}, `+n,t*=l[c-e-1],r=`b${e} * ${t} + `+r;return`
    vec4 ${$}(${n}) {
      int index = ${r};
      int texR = index / ${i};
      int texC = index - texR * ${i};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}, ${o});
      return ${R.texture2D}(${A}, uv);
    }
  `;return}}}const aN=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,sN=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,iN=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,oN=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function uN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function lN(e){return"offset"+e}function cN(e){var t=e.name,e=U(e.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function hN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function pN(e,t,n){var{newShape:r,keptDims:a}=he(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,e=!e&&1<s&&!ce(t,n)&&r.length<s||i;return{useSqueezeShape:e,uniformShape:e?o:t,keptDims:a}}function dN(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function fN(t,e){return e.map(e=>t[e]).join(", ")}function mN(e,r,t,n){const a=t.map((e,t)=>{const n={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&0<e.texData.slice.flatOffset&&(n.flatOffset=e.texData.slice.flatOffset),{name:r.variableNames[t],shapeInfo:n}});var t=a.map(e=>e.shapeInfo),n={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},s=tN(a,n,r),i=function(e,t){const n=D2(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(d(e,()=>e.shaderSource(n,t)),d(e,()=>e.compileShader(n)),N.get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw C2(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,s),o=e.createProgram(i);return N.get("ENGINE_COMPILE_ONLY")?{program:r,fragmentShader:i,source:s,webGLProgram:o,inShapeInfos:t,outShapeInfo:n,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:r,fragmentShader:i,source:s,webGLProgram:o,inShapeInfos:t,outShapeInfo:n},gN(e,r,o))}function gN(n,t,r){const a={},s={},i={},o=[];let e,u,l,c=null;var h=n.getUniformLocation(r,"NAN",!1);1===N.getNumber("WEBGL_VERSION")&&(c=n.getUniformLocation(r,"INFINITY",!1));for(let e=0;e<t.variableNames.length;e++){var p=t.variableNames[e];a[p]=n.getUniformLocation(r,p,!1),a["offset"+p]=n.getUniformLocation(r,"offset"+p,!1),t.enableShapeUniforms&&(s[p+"Shape"]=n.getUniformLocation(r,p+"Shape",!1),i[p+"TexShape"]=n.getUniformLocation(r,p+"TexShape",!1))}return t.enableShapeUniforms&&(e=n.getUniformLocation(r,"outShape",!1),l=n.getUniformLocation(r,"outShapeStrides",!1),u=n.getUniformLocation(r,"outTexShape",!1)),t.customUniforms&&t.customUniforms.forEach((e,t)=>{o[t]=n.getUniformLocation(r,e.name,!1)}),{uniformLocations:a,customUniformLocations:o,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:e,outShapeStridesLocation:l,outTexShapeLocation:u}}function yN(e,a){if(e.length!==a.length)throw Error(`Binary was compiled with ${e.length} inputs, but `+`was executed with ${a.length} inputs`);e.forEach((e,t)=>{var n=e.logicalShape,t=a[t],r=t.shape;if(!ce(n,r))throw Error("Binary was compiled with different shapes than "+`the current args. Shapes ${n} and ${r} must match`);if(!e.isUniform||!t.isUniform){n=e.texShape,r=t.isUniform?null:t.texData.texShape;if(!ce(n,r))throw Error("Binary was compiled with different texture shapes than the"+` current args. Shape ${n} and ${r} must match`)}})}function vN(e){return N.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class bN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=f2.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];var t=q2();this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${(this.enableShapeUniforms?X2:K2)(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}class xN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=f2.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];var t=q2();this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${(this.enableShapeUniforms?X2:K2)(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}class wN{constructor(e){this.variableNames=["A"],this.outTexUsage=m2.DOWNLOAD;var t=q2();this.outputShape=e,this.userCode=`
      ${Q2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}class kN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=m2.DOWNLOAD;var t=q2();this.outputShape=e,this.userCode=`
      ${Q2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}class NN{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];var n=q2();this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length);let r=t?"floor(result * 255. + 0.5)":"result";this.userCode=`
      ${this.enableShapeUniforms?Z2():J2(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}class IN{constructor(n,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];var r=q2();this.outputShape=n,this.enableShapeUniforms=vN(this.outputShape.length);let a="",t="result";e&&(t="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let e=0;e<=1;e++){var s=2*t+e;a+=`
          localCoords = coords;
          if(localCoords[2] + ${e} < ${this.enableShapeUniforms?"outShape[2]":""+n[2]}) {
          localCoords[2] += ${e};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":""+n[1]}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${s}] = values[0];
            } else if (offset == 1) {
              result[${s}] = values[1];
            } else if (offset == 2) {
              result[${s}] = values[2];
            } else {
              result[${s}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Z2():J2(n)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${r.output} = ${t};
        }
    `}}function SN(e){var t=q2(),t=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;{var n=e,r=t;const a=D2(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(d(n,()=>n.shaderSource(a,r)),d(n,()=>n.compileShader(a)),!1===n.getShaderParameter(a,n.COMPILE_STATUS))throw console.log(n.getShaderInfoLog(a)),new Error("Failed to compile vertex shader.");return a}}function TN(e){var t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);{var n=e,r=t;const a=D2(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return d(n,()=>n.bindBuffer(n.ARRAY_BUFFER,a)),d(n,()=>n.bufferData(n.ARRAY_BUFFER,r,n.STATIC_DRAW)),a}}function CN(e){var t=new Uint16Array([0,1,2,2,1,3]);{var n=e,r=t;const a=D2(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return d(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a)),d(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,r,n.STATIC_DRAW)),a}}function EN(e,t,n,r,a,s){var i,o=t,u=n,l=N.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(o<=0||u<=0)throw new Error("Requested texture size "+`[${o}x${u}]`+" is invalid.");if(l<o||l<u)throw new Error("Requested texture size "+`[${o}x${u}]`+" greater than WebGL maximum on this browser / GPU "+`[${l}x${l}]`+".");const c=D2(i=e,()=>i.createTexture(),"Unable to create WebGLTexture."),h=e.TEXTURE_2D;return d(e,()=>e.bindTexture(h,c)),d(e,()=>e.texParameteri(h,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),d(e,()=>e.texParameteri(h,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),d(e,()=>e.texParameteri(h,e.TEXTURE_MIN_FILTER,e.NEAREST)),d(e,()=>e.texParameteri(h,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===N.getNumber("WEBGL_VERSION")?d(e,()=>e.texImage2D(h,0,r,t,n,0,a,s,null)):d(e,()=>e.texStorage2D(h,1,r,t,n)),d(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:c,texShape:[n,t]}}function _N(e){return e.internalFormatFloat}function AN(e){return e.internalFormatHalfFloat}function $N(e){return e.downloadTextureFormat}function RN(e){return e.internalFormatPackedFloat}function FN(e){return e.internalFormatPackedHalfFloat}function DN(e,t,n,r,a,s,i){const o=e;e=new Float32Array(function(e,t){var[e,t]=N2(e,t);return e*t*4}(s,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,e),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),e}class ON{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=N.getNumber("WEBGL_VERSION");null!=e?(this.gl=e,a=t,e=e,v2[a]=e):this.gl=x2(t);let n="WEBGL_color_buffer_float";var r,a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===N.getNumber("WEBGL_VERSION")){e="OES_texture_half_float";if(this.textureFloatExtension=S2(this.gl,"OES_texture_float"),V2(this.gl,e))this.textureHalfFloatExtension=S2(this.gl,e);else if(N.get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),V2(this.gl,a))this.colorBufferHalfFloatExtension=S2(this.gl,a);else if(N.get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",V2(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!V2(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=TN(this.gl),this.indexBuffer=CN(this.gl),this.framebuffer=D2(r=this.gl,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer."),this.textureConfig=I2(this.gl,this.textureHalfFloatExtension)}get debug(){return N.getBool("DEBUG")}dispose(){if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;d(e,()=>e.finish()),d(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),d(e,()=>e.deleteFramebuffer(this.framebuffer)),d(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),d(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),d(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}}createFloat32MatrixTexture(e,t){this.throwIfDisposed();var n=this.gl,r=this.textureConfig,[t,e]=[t,e];return EN(n,t,e,_N(r),r.textureFormatFloat,n.FLOAT)}createFloat16MatrixTexture(e,t){this.throwIfDisposed();var n=this.gl,r=this.textureConfig,[t,e]=[t,e];return EN(n,t,e,AN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}createUnsignedBytesMatrixTexture(e,t){this.throwIfDisposed();var n=this.gl,r=this.textureConfig,[t,e]=[t,e];return EN(n,t,e,$N(r),n.RGBA,n.UNSIGNED_BYTE)}uploadPixelDataToTexture(e,t){var n,r,a;this.throwIfDisposed(),n=this.gl,r=e,a=t,d(n,()=>n.bindTexture(n.TEXTURE_2D,r)),a.data instanceof Uint8Array?2===N.getNumber("WEBGL_VERSION")?d(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,a.width,a.height,n.RGBA,n.UNSIGNED_BYTE,a.data)):d(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,a.width,a.height,0,n.RGBA,n.UNSIGNED_BYTE,a.data)):2===N.getNumber("WEBGL_VERSION")?d(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,a)):d(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,a)),d(n,()=>n.bindTexture(n.TEXTURE_2D,null))}uploadDenseMatrixToTexture(r,a,s,i){this.throwIfDisposed();{var o=this.gl,u=r,l=a,c=s;r=i,a=this.textureConfig,d(o,()=>o.bindTexture(o.TEXTURE_2D,u));let e,t,n;return n=r instanceof Uint8Array?(e=new Uint8Array(l*c*4),t=o.UNSIGNED_BYTE,o.RGBA):(e=new Float32Array(l*c*4),t=o.FLOAT,a.internalFormatPackedFloat),e.set(r),2===N.getNumber("WEBGL_VERSION")?d(o,()=>o.texSubImage2D(o.TEXTURE_2D,0,0,0,l,c,o.RGBA,t,e)):d(o,()=>o.texImage2D(o.TEXTURE_2D,0,n,l,c,0,o.RGBA,t,e)),void d(o,()=>o.bindTexture(o.TEXTURE_2D,null))}}createFloat16PackedMatrixTexture(e,t){this.throwIfDisposed();var n=this.gl,r=this.textureConfig,[e,t]=N2(e,t);return EN(n,e,t,FN(r),n.RGBA,r.textureTypeHalfFloat)}createPackedMatrixTexture(e,t){this.throwIfDisposed();var n=this.gl,r=this.textureConfig,[e,t]=N2(e,t);return EN(n,e,t,RN(r),n.RGBA,n.FLOAT)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(R2(this.gl,this.framebuffer),this.outputTexture=null),d(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,o,u){return this.downloadMatrixDriver(e,()=>{{var e=this.gl,t=o,n=u,r=this.textureConfig;const[a,s]=[n,t],i=new Uint8Array(t*n*4);return d(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}})}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return DN(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){{var n=this.gl;const r=n;return n=new Float32Array(t),r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,n),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),n}}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);e=function(e,t,n){const r=e.createBuffer(),a=(d(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)),16*t*n);return d(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),d(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),d(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),e}createAndWaitForFence(){var e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(N.getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{var e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else n=0<N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?(t=this.beginQuery(),this.endQuery(),()=>this.isQueryAvailable(t,N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,a,s){return this.downloadMatrixDriver(e,()=>{{var e=this.gl,t=a,n=s;const r=new Float32Array(t*n*4);return d(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}})}createProgram(e){this.throwIfDisposed();const t=this.gl,n=(null==this.vertexShader&&(this.vertexShader=SN(t)),D2(r=t,()=>r.createProgram(),"Unable to create WebGLProgram."));d(t,()=>t.attachShader(n,this.vertexShader)),d(t,()=>t.attachShader(n,e));var r,a,s,i,o=t,u=n;if(d(o,()=>o.linkProgram(u)),N.get("ENGINE_COMPILE_ONLY")||!1!==o.getProgramParameter(u,o.LINK_STATUS))return this.debug&&E2(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=(a=t,s=this.program,i=this.vertexBuffer,d(a,()=>a.bindBuffer(a.ARRAY_BUFFER,i)),_2(a,s,"clipSpacePos",i,3,20,0)&&_2(a,s,"uv",i,2,20,12))),n;throw console.log(o.getProgramInfoLog(u)),new Error("Failed to link vertex and fragment shaders.")}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&d(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&E2(this.gl,this.program),d(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?(r=this.gl,a=e,D2(r,()=>r.getUniformLocation(a,s),'uniform "'+(s=t)+'" not present in program.')):this.gl.getUniformLocation(e,t);var r,a,s}getAttributeLocation(e,t){return this.throwIfDisposed(),d(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){var r,a,s,i;this.throwIfDisposed(),this.throwIfNoProgram(),r=this.gl,a=e,s=t,i=n,d(r,()=>A2(r,a,i)),d(r,()=>r.uniform1i(s,i))}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();var[t,n]=N2(t,n);this.setOutputMatrixTextureDriver(e,t,n)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&E2(this.gl,this.program),F2(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),d(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),d(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=S2(this.gl,2===N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const n=this.gl,e=this.getQueryTimerExtensionWebGL2(),t=n.createQuery();return n.beginQuery(e.TIME_ELAPSED_EXT,t),t}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();void e.endQuery(t.TIME_ELAPSED_EXT)}else{const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}}async waitForQueryAndGetTime(e){return await J(()=>this.disposed||this.isQueryAvailable(e,N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const r=this.gl;var t=this.getQueryTimerExtensionWebGL2(),n=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}{const a=this.getQueryTimerExtensionWebGL1();t=a.getQueryObjectEXT(e,a.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),t&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){var t=function(e){let t=0;for(;t<e.length;++t)if(!e[t]())break;return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const n=this.itemsToPoll[e]["resolveFn"];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),1<this.itemsToPoll.length||J(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),$2(this.gl,e,this.framebuffer),this.debug&&F2(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?($2(this.gl,this.outputTexture,this.framebuffer),this.debug&&F2(this.gl)):R2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);e=t();return this.unbindTextureToFrameBuffer(),e}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;$2(r,e,this.framebuffer),this.debug&&F2(r),this.outputTexture=e,d(r,()=>r.viewport(0,0,t,n)),d(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),d(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:MN,bincountImpl:LN,bincountReduceImpl:zN,ceilImpl:PN,concatImpl:BN,equalImpl:WN,expImpl:VN,expm1Impl:UN,floorImpl:GN,gatherNdImpl:jN,gatherV2Impl:HN,greaterImpl:qN,greaterEqualImpl:KN,lessImpl:XN,lessEqualImpl:YN,linSpaceImpl:JN,logImpl:ZN,maxImpl:QN,maximumImpl:eI,minimumImpl:tI,multiplyImpl:nI,negImpl:rI,notEqualImpl:aI,prodImpl:sI,rangeImpl:iI,rsqrtImpl:oI,sigmoidImpl:uI,simpleAbsImpl:lI,sliceImpl:cI,sparseFillEmptyRowsImpl:hI,sparseReshapeImpl:pI,sparseSegmentReductionImpl:dI,sqrtImpl:fI,stridedSliceImpl:mI,stringNGramsImpl:gI,stringSplitImpl:yI,stringToHashBucketFastImpl:vI,subImpl:bI,tileImpl:xI,topKImpl:wI,transposeImpl:kI,uniqueImpl:NI}=bf;function II(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>t+"."+e)}function SI(e,t){return 1===t?[e]:II(e,t)}class TI{constructor(e){var t,n,r;this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=vN(this.outputShape.length),0===this.rank?this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `:(e=SI("rc",this.rank),t=hN(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),e=this.getOutput(e),this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${e}));
          }
        }
      `)}getSourceCoordsArr(r){const a=[];for(let n=0;n<=1;n++)for(let e=0;e<=1;e++){let t=`${0===n?"r":"rp1"}, `+(0===e?"c":"cp1");for(let e=2;e<this.rank;e++)t=r[r.length-1-e]+","+t;a.push(t)}return a}getOutOfBoundsCondition(t){if(1===this.rank)return"rc > "+(this.enableShapeUniforms?"outShape":this.outputShape[0]);let n="";for(let e=this.rank-2;e<this.rank;e++)n+=t[e]+" >= "+(this.enableShapeUniforms?`outShape[${e}]`:this.outputShape[e]),e<this.rank-1&&(n+="||");return n}getSetup(e){if(1===this.rank)return"";var e=e.slice(-2),t=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${t};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){e=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}class CI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length);let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),1<t&&(e+="thisRC.y += 1;"),n+=`
        ${e}
        ${0<t?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${t}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${0<t?"}":""}
      `}this.userCode=`
      ${function(e,t){t=t?Y2(["r","c","d"],"inputShape"):K2(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Z2():J2(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}}class EI{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){var t=AI(t,n),r=$I(e,t,n),n=(r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]),_I(e,t,this.gpgpu.gl,this.gpgpu.textureConfig,n));if(0<this.freeTextures[r].length){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=n,this.log();const a=this.freeTextures[r].shift();return this.usedTextures[r].push(a),a}let a;return t===g2.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):t===g2.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):t===g2.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):t===g2.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):t===g2.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=n,this.log(),a}releaseTexture(e,t,n,r){if(null!=this.freeTextures){var n=AI(n,r),a=$I(t,n,r),t=(a in this.freeTextures||(this.freeTextures[a]=[]),_I(t,n,this.gpgpu.gl,this.gpgpu.textureConfig,r)),n=N.get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==n&&this._numBytesAllocated>n?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=t):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=t),this.numUsedTextures--;const s=this.usedTextures[a];r=s.indexOf(e);if(r<0)throw new Error("Cannot release a texture that was never provided by this texture manager");s.splice(r,1),this.log()}}log(){var e;this.logEnabled&&(e=this.numFreeTextures+this.numUsedTextures,console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,`(${e})`),e=this._numBytesFree/this._numBytesAllocated,console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function _I(e,t,n,r,a){t=function(e,t){switch(e){case g2.PACKED_2X2_FLOAT32:return RN(t);case g2.PACKED_2X2_FLOAT16:return FN(t);case g2.UNPACKED_FLOAT32:return _N(t);case g2.UNPACKED_FLOAT16:return AN(t);case g2.PACKED_4X1_UNSIGNED_BYTE:return $N(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let s;s=a?([r,a]=N2(e[0],e[1]),r*a):([r,a]=w2(e[0],e[1]),r*a);e=function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error("Unknown internal format "+t)}(n,t);return s*e}function AI(e,t){if(e===m2.UPLOAD)return g2.PACKED_2X2_FLOAT32;if(e===m2.RENDER||null==e)return t=t,N.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?g2.PACKED_2X2_FLOAT32:g2.UNPACKED_FLOAT32:t?g2.PACKED_2X2_FLOAT16:g2.UNPACKED_FLOAT16;if(e===m2.DOWNLOAD||e===m2.PIXELS)return g2.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function $I(e,t,n){return`${e[0]}_${e[1]}_${t}_`+n}class RI{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const FI="if (isnan(x)) return x;",DI="return x;",OI="return abs(x);",MI="return (x >= 0.0) ? x : (exp(x) - 1.0);",LI=FI+`
  return (x < 0.0) ? 0.0 : x;
`,zI=FI+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,PI="return x;",BI="return 1.0 / (1.0 + exp(-1.0 * x));",WI="return x;",VI=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,UI=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GI=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,jI="return 1.0 / (1.0 + exp(-1.0 * x));";class HI{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}class qI{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length);e=e.length;const t=SI("rc",e);var n=hN(e),r=function(t,n){if(1===t)return"rc";let r="";for(let e=0;e<t;e++)r+=n[e],e<t-1&&(r+=",");return r}(e,t);const a=t.slice(-2);e=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${e}));
      }
    `}}const KI=qc,XI={};const YI=N.getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class JI extends p{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!N.getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;null!=e?(t=e instanceof ON?e:(e=x2(N.getNumber("WEBGL_VERSION"),e),new ON(e)),this.binaryCache={},this.gpgpuCreatedLocally=!1):(e=x2(N.getNumber("WEBGL_VERSION")),t=new ON(e),this.binaryCache=((e=N.getNumber("WEBGL_VERSION"))in XI||(XI[e]={}),XI[e]),this.gpgpuCreatedLocally=!0),this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new EI(this.gpgpu),this.numMBBeforeWarning=null==N.global.screen?1024:N.global.screen.height*N.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new h(this,I)}nextDataId(){return JI.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((N.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||N.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:m2.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(N.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:m2.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(t){var{values:e,dtype:n,complexTensorInfos:r,slice:a,shape:s,isPacked:i}=this.texData.get(t);if(null!=a){let e;e=new(i?HI:RI)(s,PI);a=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:n}],n),i=this.readSync(a.dataId);return this.disposeIntermediateTensorInfo(a),i}if(null!=e)return this.convertAndCacheOnCPU(t);if("string"===n)return e;s=null!=this.activeTimers;let o;s&&(o=$a());let u;return u="complex64"===n?Dp(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(t),s&&(this.downloadWaitMs+=$a()-o),this.convertAndCacheOnCPU(t,u)}async read(t){if(this.pendingRead.has(t)){const h=this.pendingRead.get(t);return new Promise(e=>h.push(e))}var{values:e,shape:n,slice:r,dtype:a,complexTensorInfos:s,isPacked:i}=this.texData.get(t);if(null!=r){let e;e=new(i?HI:RI)(n,PI);var r=this.runWebGLProgram(e,[{dataId:t,shape:n,dtype:a}],a),i=this.read(r.dataId);return this.disposeIntermediateTensorInfo(r),i}if(null!=e)return this.convertAndCacheOnCPU(t);if(N.getBool("DEBUG")&&!N.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===N.getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let o=null,u;"complex64"!==a&&N.get("WEBGL_BUFFER_SUPPORTED")&&(u=this.decode(t),r=this.texData.get(u.dataId),o=this.gpgpu.createBufferFromTexture(r.texture.texture,...k2(n))),this.pendingRead.set(t,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence();let l;if(l="complex64"===a?Dp((i=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]))[0],i[1]):null==o?this.getValuesFromTexture(t):(e=U(n),this.gpgpu.downloadFloat32MatrixFromBuffer(o,e)),null!=u&&this.disposeIntermediateTensorInfo(u),null!=o){const p=this.gpgpu.gl;d(p,()=>p.deleteBuffer(o))}const c=this.convertAndCacheOnCPU(t,l),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach(e=>e(c)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&I.removeDataId(t,this),this.pendingDeletes--),c}readToGPU(t,n={}){var{values:e,shape:r,slice:a,dtype:s,isPacked:i,texture:o}=this.texData.get(t);if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let e;e=new(i?HI:RI)(r,PI);a=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),i=this.readToGPU(a,n);return this.disposeIntermediateTensorInfo(a),i}if(null==o)throw null!=e?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");r=this.decode(t,n.customTexShape),s=I.makeTensorFromDataId(r.dataId,r.shape,r.dtype),a=this.texData.get(r.dataId);return Object.assign({tensorRef:s},a.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>Da(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return ei(e.shape,e.dtype,n)}checkNumericalProblems(t){var n;if(null!=t)for(let e=0;e<t.length;e++){var r=t[e];if(n=r,!(N.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504)){if(N.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${r} cannot be represented with your `+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error(`The value ${r} cannot be represented on this device.`)}}}getValuesFromTexture(e){var{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=U(t);if(N.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var s=this.decode(e);const i=this.texData.get(s.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(i.texture.texture,...k2(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(s),o}s=N.getBool("WEBGL_PACK")&&!0===r,r=s?L2(t):t,t=new(s?kN:wN)(r),s=this.runWebGLProgram(t,[{shape:r,dtype:n,dataId:e}],"float32");const i=this.texData.get(s.dataId),o=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(i.texture.texture,i.texShape[0],i.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(s),o}timerAvailable(){return 0<N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")}time(e){var t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=q(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=q(this.activeTimers.map(e=>e.name)).filter(e=>null!=e),i=(this.activeTimers=t,r&&(this.programTimersStack=null),{uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null});return(async()=>{if(0<N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")){const e=await Promise.all(a);i.kernelMs=V(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>e.name+": "+e.ms).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return 0<N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")?this.gpgpu.beginQuery():{startMs:$a(),endMs:null}}endTimer(e){return 0<N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")?this.gpgpu.endQuery():e.endMs=$a(),e}async getQueryTime(e){return 0<N.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&0<this.texData.get(e).refCount)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);var n=this.texData.get(e)["complexTensorInfos"];return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){var{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),i=i&&i.origDataId||e,o=this.dataRefCount.get(i);1<o?this.dataRefCount.set(i,o-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=YI){return N.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&U(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){zr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return KI(e.shape,t)}packedUnaryOp(e,t,n){t=new HI(e.shape,t),t=this.compileAndRun(t,[e],n);return I.makeTensorFromDataId(t.dataId,t.shape,t.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype)return t=lI(this.texData.get(e.dataId).values),this.makeOutput(e.shape,e.dtype,t);if(N.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,OI,e.dtype);var t=new RI(e.shape,OI),t=this.compileAndRun(t,[e]);return I.makeTensorFromDataId(t.dataId,t.shape,t.dtype)}makeTensorInfo(e,t,n){let r;var a;return r="string"===t&&null!=n&&0<n.length&&pe(n[0])?(a=n.map(e=>Fa(e)),this.write(a,e,t)):this.write(n,e,t),this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){n=this.makeTensorInfo(e,t,n).dataId;return I.makeTensorFromDataId(n,e,t,this)}unpackTensor(e){var t=new qI(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){var t=new TI(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){var n=[O2(e.shape),...M2(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[O2(t),...M2(t)],a=new CI(a,n),a=this.runWebGLProgram(a,[r],e.dtype,[n],!0);return{dataId:a.dataId,shape:t,dtype:a.dtype}}decode(e,t){var{isPacked:n,shape:r,dtype:a}=this.texData.get(e),s=(null!=t&&z(U(r)<=t[0]*t[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."),L2(r));let i;i=new(n?xN:bN)(s);n=[null!=t?t:k2(s)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,n,!0,t).dataId}}runWebGLProgram(a,e,t,n,r=!1,s){t=this.makeTensorInfo(a.outputShape,t);const i=this.texData.get(t.dataId);if(a.packedOutput&&(i.isPacked=!0),a.outPackingScheme===f2.DENSE){const v=null!=s?s:k2(a.outputShape);i.texShape=v.map(e=>2*e)}if(null!=a.outTexUsage&&(i.usage=a.outTexUsage),0===U(t.shape))return i.values=ee(t.dtype,0),t;const o=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let t=this.texData.get(e.dataId);if(null==t.texture){if(!a.packedInputs&&U(e.shape)<=N.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:t.values};a.packedInputs&&(t.isPacked=!0,t.shape=e.shape)}if(this.uploadToGPU(e.dataId),!!t.isPacked!=!!a.packedInputs)e=t.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),t=this.texData.get(e.dataId);else if(t.isPacked&&!P2(t.shape,e.shape)){const r=e;var n=e.shape;e.shape=t.shape,e=this.packedReshape(e,n),o.push(e),t=this.texData.get(e.dataId),r.shape=n}return{shape:e.shape,texData:t,isUniform:!1}}),l=(this.uploadToGPU(t.dataId),{shape:t.shape,texData:i,isUniform:!1});s=function(f,e,m){let g="";e.concat(m).forEach(r=>{var a=null!=r.texData&&null!=r.texData.slice&&0<r.texData.slice.flatOffset;if(f.enableShapeUniforms&&!r.isUniform){var s=r.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=pN(f.packedInputs,r.shape,s);let e="",t="",n="";1===o.length&&f.packedInputs?(l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],e=`${1<l[0]}_`+(1<l[1])):2!==o.length||f.packedInputs?2<o.length&&!f.packedInputs&&(l=se(o),n=`${l[0]===s[1]}_`+(l[l.length-1]===s[1])):t=`${1<o[0]}_`+(1<o[1]);var l=r.shape.length,c=2===o.length&&ce(r.shape,s),h=1===U(r.shape),p=bi(r.shape,m.shape),d=!f.packedInputs&&l===m.shape.length&&ce(s,m.texData.texShape),s=f.packedInputs||2<o.length?"":`${1<s[0]}_`+(1<s[1]);g+=`${l}_${d}_${i?u:""}_${o.length}_${h}_${p}_${c}_${e}_${t}_${n}_${s}_`+a}else{l=r.isUniform?"uniform":r.texData.texShape;g+=r.shape+`_${l}_`+a}});var e=f.userCode,t=f.constructor.name;return t+="_"+g+"_"+e+N.getNumber("WEBGL_VERSION")}(a,u,l),e=this.getAndSaveBinary(s,()=>mN(this.gpgpu,a,u,l)),s=null!=this.activeTimers;let c;if(s&&(c=this.startTimer()),!N.get("ENGINE_COMPILE_ONLY")){var h=this.gpgpu,p=e,e=u,d=l,f=n,n=(p.program.enableShapeUniforms||(yN(p.inShapeInfos,e),yN([p.outShapeInfo],[d])),d.texData.texture),m=d.texData.texShape,g=(d.texData.isPacked?h.setOutputPackedMatrixTexture(n.texture,m[0],m[1]):h.setOutputMatrixTexture(n.texture,m[0],m[1]),h.setProgram(p.webGLProgram),1===N.getNumber("WEBGL_VERSION")&&null!==p.infLoc&&h.gl.uniform1f(p.infLoc,1/0),null!==p.nanLoc&&h.gl.uniform1f(p.nanLoc,NaN),e.forEach((t,e)=>{var n=p.program.variableNames[e],r=p.uniformLocations[n],a=p.uniformLocations["offset"+n],s=p.inShapesLocations[n+"Shape"],n=p.inTexShapesLocations[n+"TexShape"];if(s){var i=pN(p.program.packedInputs,t.shape,t.texData.texShape)["uniformShape"];switch(i.length){case 1:h.gl.uniform1iv(s,new Int32Array(i));break;case 2:h.gl.uniform2iv(s,new Int32Array(i));break;case 3:h.gl.uniform3iv(s,new Int32Array(i));break;case 4:h.gl.uniform4iv(s,new Int32Array(i))}}if(n&&h.gl.uniform2i(n,t.texData.texShape[0],t.texData.texShape[1]),null!=r)if(t.isUniform)if(U(t.shape)<2)h.gl.uniform1f(r,t.uniformValues[0]);else{let e=t.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),h.gl.uniform1fv(r,e)}else null!=t.texData.slice&&null!=a&&h.gl.uniform1i(a,t.texData.slice.flatOffset),h.setInputMatrixTexture(t.texData.texture.texture,r,e)}),p.outShapeLocation);if(g)switch(d.shape.length){case 1:h.gl.uniform1iv(g,new Int32Array(d.shape));break;case 2:h.gl.uniform2iv(g,new Int32Array(d.shape));break;case 3:h.gl.uniform3iv(g,new Int32Array(d.shape));break;case 4:h.gl.uniform4iv(g,new Int32Array(d.shape))}if(p.outShapeStridesLocation){var y=se(d.shape);switch(d.shape.length){case 2:h.gl.uniform1iv(p.outShapeStridesLocation,new Int32Array(y));break;case 3:h.gl.uniform2iv(p.outShapeStridesLocation,new Int32Array(y));break;case 4:h.gl.uniform3iv(p.outShapeStridesLocation,new Int32Array(y))}}p.outTexShapeLocation&&h.gl.uniform2i(p.outTexShapeLocation,d.texData.texShape[0],d.texData.texShape[1]),p.program.customUniforms&&f&&p.program.customUniforms.forEach((e,t)=>{var n=p.customUniformLocations[t],t=f[t];if("float"===e.type)h.gl.uniform1fv(n,t);else if("vec2"===e.type)h.gl.uniform2fv(n,t);else if("vec3"===e.type)h.gl.uniform3fv(n,t);else if("vec4"===e.type)h.gl.uniform4fv(n,t);else if("int"===e.type)h.gl.uniform1iv(n,t);else if("ivec2"===e.type)h.gl.uniform2iv(n,t);else if("ivec3"===e.type)h.gl.uniform3iv(n,t);else{if("ivec4"!==e.type)throw Error(`uniform type ${e.type} is not supported yet.`);h.gl.uniform4iv(n,t)}}),h.executeProgram()}o.forEach(e=>this.disposeIntermediateTensorInfo(e)),s&&(c=this.endTimer(c),this.activeTimers.push({name:a.constructor.name,query:this.getQueryTime(c)}));n=N.get("WEBGL_FLUSH_THRESHOLD");return 0<n&&((m=$a())-this.lastGlFlushTime>n&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=m)),!N.getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r?(e=this.unpackTensor(t),this.disposeIntermediateTensorInfo(t),e):t}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!N.getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=O(()=>{if(!N.get("WEBGL_RENDER_FLOAT32_ENABLED")){var e=N.getBool("DEBUG"),t=(N.set("DEBUG",!1),this.abs(P(1e-8)).dataSync()[0]);if(N.set("DEBUG",e),0<t)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(s){const i=this.texData.get(s);var{shape:s,dtype:o,values:u,texture:l,usage:e,isPacked:c}=i;if(null==l){l=null!=this.activeTimers;let r,a=(l&&(r=$a()),i.texShape);if(null==a&&(a=function(n,e=!1){let t=N.getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(e&&(t*=2,1===(n=n.map((e,t)=>t>=n.length-2?W(n[t]):n[t])).length&&(n=[2,n[0]])),2!==n.length&&(a=he(n),n=a.newShape),U(n));if(n.length<=1&&r<=t)return[1,r];if(2===n.length&&n[0]<=t&&n[1]<=t)return n;if(3===n.length&&n[0]*n[1]<=t&&n[2]<=t)return[n[0]*n[1],n[2]];if(3===n.length&&n[0]<=t&&n[1]*n[2]<=t)return[n[0],n[1]*n[2]];if(4===n.length&&n[0]*n[1]*n[2]<=t&&n[3]<=t)return[n[0]*n[1]*n[2],n[3]];if(4===n.length&&n[0]<=t&&n[1]*n[2]*n[3]<=t)return[n[0],n[1]*n[2]*n[3]];if(e){var a=O2(n);let e=2,t=2;return n.length&&([e,t]=M2(n)),X(r=a*(e/2)*(t/2)).map(e=>2*e)}return X(r)}(s,c),i.texShape=a),null!=u){s=L2(s);let e,t=a[1],n=a[0];var h=u instanceof Uint8Array||u instanceof Uint8ClampedArray,s=(!c&&h||([t,n]=N2(a[0],a[1])),e=new(c?IN:NN)(s,h),h?[n,t]:a),p=this.makeTensorInfo(s,o);const d=this.texData.get(p.dataId);d.usage=h?m2.PIXELS:m2.UPLOAD,d.texShape=s,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),t,n,u);h=[[n,t]],s=this.runWebGLProgram(e,[p],o,h,!0),u=this.texData.get(s.dataId);i.texShape=u.texShape,i.isPacked=u.isPacked,i.usage=u.usage,N.get("ENGINE_COMPILE_ONLY")?this.disposeData(s.dataId):(i.texture=u.texture,i.values=null,this.texData.delete(s.dataId)),this.disposeIntermediateTensorInfo(p),l&&(this.uploadWaitMs+=$a()-r)}else{h=this.acquireTexture(a,e,o,c);i.texture=h}}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e);var r=n["dtype"];return this.releaseGPUData(e),null!=t&&(n.values=function(t,e){{if("float32"===e||"complex64"===e)return t;if("int32"!==e&&"bool"!==e)throw new Error("Unknown dtype "+e);{const n=new("int32"===e?Int32Array:Uint8Array)(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}}}(t,r)),n.values}acquireTexture(e,t,n,r){return this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024&&(n=(this.numBytesInGPU/1024/1024).toFixed(2),this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${n} MB, `+"most likely due to a memory leak")),this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ue(t)}checkCompileCompletion(){for(var[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(var[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,r]of Object.entries(this.binaryCache)){var n=new Promise(e=>{try{this.checkCompletion_(r),e(!0)}catch(e){throw e}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await kp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1!==this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))return!0;if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw C2(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}getUniformLocations(){for(var[,e]of Object.entries(this.binaryCache)){var{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=gN(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}}JI.nextDataId=0;cs()&&lo("webgl",()=>new JI,2);class ZI{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=L(t,n),this.enableShapeUniforms=vN(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}class QI{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=L(t,n);t=this.outputShape.length;this.enableShapeUniforms=vN(t);let a="";r&&(0===t||1===U(this.outputShape)?a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `:(n=hN(t),a=`
          ${n} coords = getOutputCoords();
        `,1===t?this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:(r=SI("coords",t),this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${r[t-2]} + 1) >= outShape[${t} - 2];
            bool nextColOutOfBounds =
              (${r[t-1]} + 1) >= outShape[${t} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${r[t-2]} + 1) >= ${this.outputShape[t-2]};
            bool nextColOutOfBounds =
              (${r[t-1]} + 1) >= ${this.outputShape[t-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `))),this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}function eS(e){const{inputs:t,backend:n}=e;e=t.x;return n.incRef(e.dataId),{dataId:e.dataId,shape:e.shape,dtype:e.dtype}}Xh={kernelName:Ht,backendName:"webgl",kernelFunc:eS};function tS(e){const{inputs:t,backend:n}=e;var{real:e,imag:r}=t,a=n.makeTensorInfo(e.shape,"complex64");const s=n.texData.get(a.dataId);e=eS({inputs:{x:e},backend:n}),r=eS({inputs:{x:r},backend:n});return s.complexTensorInfos={real:e,imag:r},a}sp={kernelName:at,backendName:"webgl",kernelFunc:tS};const nS="return (a < 0.) ? b * a : a;",rS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;Yh={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["alpha"],a=n.makeTensorInfo([],"float32",_a(a,"float32")),s=N.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QI(rS,e.shape,a.shape):new ZI(nS,e.shape,a.shape),s=n.runWebGLProgram(s,[e,a],"float32");return n.disposeIntermediateTensorInfo(a),s}};const aS="return (a < 0.) ? b * a : a;",sS=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;ap={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{x:e,alpha:r}=t,a=N.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QI(sS,e.shape,r.shape):new ZI(aS,e.shape,r.shape);return n.runWebGLProgram(a,[e,r],"float32")}};function iS({opSnippet:s,packedOpSnippet:i,cpuKernelImpl:o,dtype:u}){return({inputs:e,backend:t})=>{e=e.x;const n=t;t=u||e.dtype;if(n.shouldExecuteOnCPU([e])&&null!=o)return r=n.texData.get(e.dataId),r=o(r.values,t),n.makeTensorInfo(e.shape,t,r);var r=N.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=i;let a;return a=r?new HI(e.shape,i):new RI(e.shape,s),n.runWebGLProgram(a,[e],t)}}function oS({opSnippet:c,packedOpSnippet:h,checkOutOfBounds:p=!1,supportsComplex:d=!1,cpuKernelImpl:f,dtype:m}){return({inputs:e,backend:t})=>{const{a:s,b:i}=e,o=t;if(d&&"complex64"===s.dtype){const a=o.texData.get(s.dataId),u=o.texData.get(i.dataId);var[e,t]=[[a.complexTensorInfos.real,u.complexTensorInfos.real],[a.complexTensorInfos.imag,u.complexTensorInfos.imag]].map(e=>{var[e,t]=e,n={dataId:e.dataId,dtype:e.dtype,shape:s.shape},r={dataId:t.dataId,dtype:t.dtype,shape:i.shape},a=new ZI(c,s.shape,i.shape);return o.runWebGLProgram(a,[n,r],Ya(e.dtype,t.dtype))}),n=tS({inputs:{real:e,imag:t},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(t),n}e=m||Ya(s.dtype,i.dtype);if(("string"===s.dtype||"string"===i.dtype||o.shouldExecuteOnCPU([s,i]))&&null!=f){var t=o.texData.get(s.dataId).values,n=o.texData.get(i.dataId).values,t="string"===s.dtype?cd(t):t,n="string"===s.dtype?cd(n):n,[t,n]=f(s.shape,i.shape,t,n,e),n=o.makeTensorInfo(n,e);const l=o.texData.get(n.dataId);return l.values=t,n}t=N.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=h;let r;return r=t?new QI(h,s.shape,i.shape,p):new ZI(c,s.shape,i.shape),o.runWebGLProgram(r,[s,i],e)}}function uS(e,t=!1){if("linear"===e)return t?WI:DI;if("relu"===e)return t?UI:LI;if("elu"===e)return t?VI:MI;if("relu6"===e)return t?GI:zI;if("prelu"===e)return t?sS:aS;if("leakyrelu"===e)return t?rS:nS;if("sigmoid"===e)return t?jI:BI;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class lS{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=vN(this.outputShape.length);var n=r?e[1]:e[2],n=Math.ceil(n/2),l=r?"i * 2, rc.y":"rc.y, i * 2",c=a?"rc.z, i * 2":"i * 2, rc.z",r=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],a=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let h="",p="";i&&(h=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,p="result = activation(result);");i=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let d="rc.x",f="rc.x";e[0]<t[0]?d=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(f=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${h}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${n}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${n}; i++) {
          int batchA = ${d};
          int batchB = ${f};
          vec4 a = getMatrixA(batchA, ${l});
          vec4 b = getMatrixB(batchB, ${c});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${r[0]} * ${a[0]});
          result += (${r[1]} * ${a[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${i}

        ${p}

        setOutput(result);
      }
    `}}const cS={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class hS{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=L(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}const pS="return a * b;";function dS(e){const{inputs:t,backend:n}=e;var{a:e,b:r}=t,a=Ya(e.dtype,r.dtype);if("complex64"===e.dtype){var s=n.texData.get(e.dataId),i=n.texData.get(r.dataId),o=new hS(cS.REAL,e.shape,r.shape),u=new hS(cS.IMAG,e.shape,r.shape);const t=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:e.shape},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:e.shape},{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape}];s=n.runWebGLProgram(o,t,"float32"),i=n.runWebGLProgram(u,t,"float32"),o=tS({inputs:{real:s,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if(n.shouldExecuteOnCPU([e,r])){var u=n.texData.get(e.dataId),s=n.texData.get(r.dataId),[i,o]=nI(e.shape,r.shape,u.values,s.values,a),u=n.makeTensorInfo(o,a);const c=n.texData.get(u.dataId);return c.values=i,u}let l;return l=new(N.getBool("WEBGL_PACK_BINARY_OPERATIONS")?QI:ZI)(pS,e.shape,r.shape),n.runWebGLProgram(l,[e,r],a)}xh={kernelName:In,backendName:"webgl",kernelFunc:dS};function $(e){var{inputs:e,backend:t,attrs:n}=e;const r=e["x"];e=n.shape;const a=t,s=U(r.shape),i=Z(e,s),o=U(i);z(s===o,()=>`The new shape (${i}) has ${o} elements and the old `+`shape (${r.shape}) has ${s} elements. The new shape and old `+"shape must have the same number of elements.");var u,l,c,n=a.texData.get(r.dataId);return!n.isPacked||P2(r.shape,i)||null!==n.texture&&P2(n.shape,i)?(a.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}):(t=r,e=i,n=a,u=[O2(t.shape),...M2(t.shape)],l={dtype:t.dtype,shape:u,dataId:t.dataId},c=[O2(e),...M2(e)],c=new CI(c,u),{dataId:(n=n.runWebGLProgram(c,[l],t.dtype,[u],!0)).dataId,shape:e,dtype:n.dtype})}yd={kernelName:Wn,backendName:"webgl",kernelFunc:$};class fS{constructor(e,t){this.variableNames=["x"];var{windowSize:e,batchSize:n,inSize:r,outSize:a}=e,n=(this.outputShape=[n,a],4*Math.floor(e/4)),a=e%4;let s="sumValue += dot(values, ones);";if(null!=t){const o=1/t;s=`sumValue += dot(values * ${K(o)?o.toPrecision(2):o}, ones);`}let i=0<r%e?`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `:"";this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${i}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${e};

        float sumValue = 0.0;

        for (int i = 0; i < ${n}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${s}
        }

        int inIdx = inOffset + ${n};
        if (${1==a}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${s}
        } else if (${2==a}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${s}
        } else if (${3==a}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${s}
        }
        setOutput(sumValue);
      }
    `}}class mS{constructor(e,t){this.variableNames=["x"];var{windowSize:e,batchSize:n,inSize:r,outSize:a}=e;this.outputShape=[n,a];let s="0.0",i="",o=("prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max"),t+`(${t}(${t}(`+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])");"sum"===t?o="sumValue":"prod"===t?o="prodValue":"all"===t?o="allValue":"any"===t&&(o="anyValue");n=4*Math.floor(e/4),a=e%4;let u=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${i}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${i}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,l="vec4",c=("all"===t?(s="1.0",u=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,l="bvec4"):"any"===t&&(s="0.0",u=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,l="bvec4"),"");0<r%e&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${s};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${e};

        vec4 minMaxValue = vec4(${s});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${n}; i += 4) {
          int inIdx = inOffset + i;
          ${l} values = ${l}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${n};
        if (${1==a}) {
          ${l} values = ${l}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${u}
        } else if (${2==a}) {
          ${l} values = ${l}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${u}
        } else if (${3==a}) {
          ${l} values = ${l}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${u}
        }
        setOutput(${o});
      }
    `}}function gS(n,r,a,s){var i=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){var n=t.length?t[t.length-1].outSize:e[1],r=Sp(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(n.shape);let o=n;for(let t=0;t<i.length;t++){var{inSize:u,windowSize:l,outSize:c}=i[t];let e;e="mean"===a?0===t?new fS({windowSize:l,inSize:u,batchSize:n.shape[0],outSize:c},u):new fS({windowSize:l,inSize:u,batchSize:n.shape[0],outSize:c}):new mS({windowSize:l,inSize:u,batchSize:n.shape[0],outSize:c},a),l=o,o=s.runWebGLProgram(e,[o],r),l.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(l)}return o}class yS{constructor(t,n){this.variableNames=["A"];const r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[n[e]];this.outputShape=r,this.rank=r.length;var e=hN(this.rank),a=function(t){var e=t.length;if(6<e)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(n);this.userCode=`
    void main() {
      ${e} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}class vS{constructor(t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[n[e]];if(this.outputShape=r,this.rank=r.length,6<this.rank)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);var e=hN(this.rank),a=II("rc",this.rank);const s=new Array(this.rank);for(let e=0;e<n.length;e++)s[n[e]]=a[e];var i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < `+r[this.rank-1],i=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${e} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${i};
      if(${o}) {
        result[1] = ${i};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${i};
        if(${o}) {
          result[3] = ${i};
        }
      }
      setOutput(result);
    }
    `}}function bS(e,t,n){t=new(N.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?vS:yS)(e.shape,t);return n.runWebGLProgram(t,[e],e.dtype)}function xS(r){var{inputs:r,backend:a,attrs:s}=r,r=r["x"],{axis:s,keepDims:i}=s;{var o=r.shape.length;let e=s=Q(s,r.shape);var u=null!=(l=hl(e,o));let t=r;u&&(t=bS(r,l,a),e=dl(e.length,o)),cl("sum",e,o);var[l,o]=ul(t.shape,e);let n=l;return i&&(n=ll(l,s)),i=U(o),l=U(r.shape),s=$({inputs:{x:t},attrs:{shape:[l/i,i]},backend:a}),o=gS(s,Ja(r.dtype),"sum",a),l=$({inputs:{x:o},attrs:{shape:n},backend:a}),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),u&&a.disposeIntermediateTensorInfo(t),l}}lf={kernelName:ir,backendName:"webgl",kernelFunc:xS};function wS(e){var{inputs:e,backend:t,attrs:n}=e,r=e["x"],a=n["perm"];const s=t;e=r.shape.length;const i=new Array(e);for(let e=0;e<i.length;e++)i[e]=r.shape[a[e]];let o;if(s.shouldExecuteOnCPU([r])){n=s.texData.get(r.dataId).values,t=kI(n,r.shape,r.dtype,a,i);o=s.makeTensorInfo(i,r.dtype);const u=s.texData.get(o.dataId);u.values=t}else o=bS(r,a,s);return o}Td={kernelName:Cr,backendName:"webgl",kernelFunc:wS};const kS=1e3;function NS({a:e,b:t,transposeA:a,transposeB:s,backend:i,bias:n=null,preluActivationWeights:r=null,leakyreluAlpha:o=0,activation:u=null}){var l=e.shape.length,c=t.shape.length;const h=a?e.shape[l-2]:e.shape[l-1],p=s?t.shape[c-1]:t.shape[c-2];var l=a?e.shape[l-1]:e.shape[l-2],c=s?t.shape[c-2]:t.shape[c-1],d=e.shape.slice(0,-2),f=t.shape.slice(0,-2),d=U(d),f=U(f);const m=L(e.shape.slice(0,-2),t.shape.slice(0,-2));var g=m.concat([l,c]),y=(z(h===p,()=>`Error in matMul: inner shapes (${h}) and (`+`${p}) of Tensors with shapes ${e.shape} and `+t.shape+" and transposeA="+a+` and transposeB=${s} must match.`),a?[d,h,l]:[d,l,h]),v=s?[f,c,p]:[f,p,c],b=$({inputs:{x:e},backend:i,attrs:{shape:y}}),x=$({inputs:{x:t},backend:i,attrs:{shape:v}});const w=[b,x];var d=Math.max(d,f),f=a?b.shape[1]:b.shape[2],k=null!=n,N=null!=r,I="leakyrelu"===u,u=null!=u?uS(u,!0):null,S=k||N||I||null!=u;let T;if((1===l||1===c)&&f>kS&&!1==S){let e=b,t=x;a&&(e=wS({inputs:{x:b},backend:i,attrs:{perm:[0,2,1]}}),w.push(e)),s&&(t=wS({inputs:{x:x},backend:i,attrs:{perm:[0,2,1]}}),w.push(t));S=1===c;let n=e;1!==c&&(n=$({inputs:{x:e},backend:i,attrs:{shape:[d,f,1]}}),w.push(n));var C=1===c?2:1;let r=t;S&&(r=$({inputs:{x:t},backend:i,attrs:{shape:[d,1,f]}}),w.push(r));S=dS({inputs:{a:n,b:r},backend:i});T=xS({inputs:{x:S},backend:i,attrs:{axis:C,keepDims:!0}}),w.push(S)}else{f=Ya(e.dtype,t.dtype),C=new lS(y,v,[d,l,c],a,s,k,u,N,I);const E=[b,x];null!=n&&E.push(n),N&&E.push(r),I&&(S=i.makeTensorInfo([],"float32",_a(o,"float32")),E.push(S),w.push(S)),T=i.runWebGLProgram(C,E,f)}y=$({inputs:{x:T},backend:i,attrs:{shape:g}});w.push(T);for(const _ of w)i.disposeIntermediateTensorInfo(_);return y}Fd={kernelName:Or,backendName:"webgl",kernelFunc:function(e){var{inputs:e,backend:t,attrs:n}=e,{a:e,b:r,bias:a,preluActivationWeights:s}=e,{transposeA:n,transposeB:i,activation:o,leakyreluAlpha:u}=n;return NS({a:e,b:r,transposeA:n,transposeB:i,backend:t,bias:a,preluActivationWeights:s,leakyreluAlpha:u,activation:o})}};const IS="return abs(x);";Pd={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var r,e=t["x"];if(n.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype)return r=n.texData.get(e.dataId),r=lI(r.values),n.makeTensorInfo(e.shape,e.dtype,r);let a;return a=new(N.getBool("WEBGL_PACK_UNARY_OPERATIONS")?HI:RI)(e.shape,IS),n.runWebGLProgram(a,[e],e.dtype)}},FI,Zd=iS({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),hf={kernelName:De,backendName:"webgl",kernelFunc:Zd},FI,ff=iS({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),yf={kernelName:Oe,backendName:"webgl",kernelFunc:ff},rp="return a + b;",bh=oS({opSnippet:rp,packedOpSnippet:rp,supportsComplex:!0,cpuKernelImpl:MN}),Tf={kernelName:Me,backendName:"webgl",kernelFunc:bh};class SS{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});e=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`
      void main() {
        ${n.join("\n        ")}

        float result = ${e};
        setOutput(result);
      }
    `}}class TS{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});e=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`
      void main() {
        ${n.join("\n        ")}

        vec4 result = ${e};
        setOutput(result);
      }
    `}}Nh={kernelName:Le,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return eS({inputs:{x:a[0]},backend:r});if(a.length>N.get("WEBGL_MAX_TEXTURES_IN_SHADER"))return t=Math.floor(a.length/2),s=e({inputs:a.slice(0,t),backend:r}),t=e({inputs:a.slice(t),backend:r}),e({inputs:[s,t],backend:r});var s=a.map(e=>e.dtype).reduce((e,t)=>Ya(e,t)),t=a.map(e=>e.shape),t=new(N.getBool("WEBGL_PACK")?TS:SS)(a[0].shape,t);return r.runWebGLProgram(t,a,s)}};Rh={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r,i=e.shape.length;let o=a=Q(a,e.shape);var u=hl(o,i);let l=e;null!=u&&(l=wS({inputs:{x:e},backend:n,attrs:{perm:u}}),o=dl(o.length,i)),cl("all",o,i);var[e,i]=ul(l.shape,o),i=U(i),c=gS(i=$({inputs:{x:l},backend:n,attrs:{shape:[-1,i]}}),i.dtype,"all",n);let h;return h=s?(s=ll(e,a),$({inputs:{x:c},backend:n,attrs:{shape:s}})):$({inputs:{x:c},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),null!=u&&n.disposeIntermediateTensorInfo(l),h}};gd={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r,i=e.shape.length;let o=a=Q(a,e.shape);var u=hl(o,i);let l=e;null!=u&&(l=wS({inputs:{x:e},backend:n,attrs:{perm:u}}),o=dl(o.length,i)),cl("any",o,i);var[e,i]=ul(l.shape,o),i=U(i),c=gS(i=$({inputs:{x:l},backend:n,attrs:{shape:[-1,i]}}),i.dtype,"any",n);let h;return h=s?(s=ll(e,a),$({inputs:{x:c},backend:n,attrs:{shape:s}})):$({inputs:{x:c},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),null!=u&&n.disposeIntermediateTensorInfo(l),h}};class CS{constructor(e,t,n){this.variableNames=["A"];var{windowSize:e,batchSize:r,outSize:a}=e,r=(n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a],"max"===t?">":"<");this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${e};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${e}; i++) {
          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${r} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}class ES{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,z(2<e.length,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);var a=e[e.length-1],a=Math.ceil(a/t),e=(this.outputShape=e.slice(0,-1),1<a&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA"),this.outputShape),s=e.length,i=hN(s);const o=SI("coords",s);let u,l;u=1===a?`
        ${a=hN(l=s+1)} sourceLocR = ${a}(${o.join()}, 0);
        ++${o[s-1]};
        ${a} sourceLocG = ${a}(${o.join()}, 0);
        ++${o[s-2]};
        ${a} sourceLocA = ${a}(${o.join()}, 0);
        --${o[s-1]};
        ${a} sourceLocB = ${a}(${o.join()}, 0);
        --${o[s-2]};`:(l=s,`
        ${i} sourceLocR = coords;
        ++${o[s-1]};
        ${i} sourceLocG = coords;
        ++${o[s-2]};
        ${i} sourceLocA = coords;
        --${o[s-1]};
        ${i} sourceLocB = coords;
        --${o[s-2]};`);const c=["x","y","z","w","u","v"].slice(0,l);a="."+c[l-1];const h=c.map(e=>"int "+e),p=SI("sourceLocR",l-1).concat("inIdx.r"),d=SI("sourceLocG",l-1).concat("inIdx.g"),f=SI("sourceLocB",l-1).concat("inIdx.b"),m=SI("sourceLocA",l-1).concat("inIdx.a");var g="max"===n?"greaterThan":"lessThan",y=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${p.join()}),
                             getBestIndicesAChannel(${d.join()}),
                             getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${m.join()})));`,v=`vec4(
            getAChannel(${p.join()}),
            hasNextCol ? getAChannel(${d.join()}) : 0.,
            hasNextRow ? getAChannel(${f.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${m.join()}) : 0.)`,r=r?"":`
      float getBestIndicesAChannel(${h.join()}) {
        return getChannel(getBestIndicesA(${c.join()}),
                                          vec2(${c.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${h.join()}) {
        return getChannel(getA(${c.join()}),
                               vec2(${c.slice(-2).join()}));
      }
      ${r}
      void main() {
        ${i} coords = getOutputCoords();
        bool hasNextCol = ${o[s-1]} < ${e[s-1]-1};
        bool hasNextRow = ${o[s-2]} < ${e[s-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${a}, sourceLocG${a},
          sourceLocB${a}, sourceLocA${a}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${v};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${y}
          vec4 candidate = ${v};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${g}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function _S(t,n,r,a){r=[r];if(cl("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,n.shape.length),!N.getBool("WEBGL_PACK_REDUCE")||n.shape.length<=2){const i=[];var s=t.texData.get(n.dataId);let e=n;null!==s&&s.isPacked&&(e=t.unpackTensor(n),i.push(e));var[s,r]=ul(e.shape,r),r=U(r),r=$({inputs:{x:e},backend:t,attrs:{shape:[-1,r]}}),r=(i.push(r),function e(t,n,r,a=null){let s=n.shape[0],i=n.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);var o=Sp(i),o={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},o=new CS(o,r,null==a);const u=[n];null!=a&&u.push(a);a=t.runWebGLProgram(o,u,"int32");if(1===a.shape[1])return a;o=e(t,n,r,a);return t.disposeIntermediateTensorInfo(a),o}(t,r,a)),r=(i.push(r),$({inputs:{x:r},backend:t,attrs:{shape:s}}));return i.forEach(e=>t.disposeIntermediateTensorInfo(e)),r}return function e(t,n,r,a=null){var s=(null!=a?a:n).shape,i=Sp(s[s.length-1]),s=new ES(s,i,r,null==a),i=t.runWebGLProgram(s,null==a?[n]:[n,a],"int32");return i.shape.length===n.shape.length?(s=e(t,n,r,i),t.disposeIntermediateTensorInfo(i),s):i}(t,n,a)}bd={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var a,e=t["x"];let s=Q(a=r["axis"],e.shape),i=(a=hl(s,e.shape.length),e);const o=[];return null!=a&&(i=wS({inputs:{x:e},backend:n,attrs:{perm:a}}),o.push(i),s=dl(s.length,i.shape.length)),cl("argMax",[s[0]],i.shape.length),e=_S(n,i,s[0],"max"),o.forEach(e=>n.disposeIntermediateTensorInfo(e)),e}};np={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var a,e=t["x"];let s=Q(a=r["axis"],e.shape),i=(a=hl(s,e.shape.length),e);const o=[];return null!=a&&(i=wS({inputs:{x:e},backend:n,attrs:{perm:a}}),o.push(i),s=dl(s.length,i.shape.length)),cl("argMin",[s[0]],i.shape.length),e=_S(n,i,s[0],"min"),o.forEach(e=>n.disposeIntermediateTensorInfo(e)),e}},FI,wh=iS({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Id={kernelName:Ve,backendName:"webgl",kernelFunc:wh},FI,Qh=iS({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Cd={kernelName:Ue,backendName:"webgl",kernelFunc:Qh},FI,Od=iS({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),zd={kernelName:Ge,backendName:"webgl",kernelFunc:Od},Ud=oS({opSnippet:`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`+`
  return result;
`}),Jd={kernelName:He,backendName:"webgl",kernelFunc:Ud},FI,nf=iS({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),sf={kernelName:je,backendName:"webgl",kernelFunc:nf};class AS{constructor(t,n,r,a=!1,s=!1){if(this.variableNames=["x"],"avg"===n&&r)throw new Error("Cannot compute positions for average pool.");var i=t.filterWidth,o=t.strideHeight,u=t.strideWidth,l=t.dilationHeight,c=t.dilationWidth,h=t.effectiveFilterHeight,e=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left,f=(this.outputShape=t.outShape,"avg"===n),m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y=f?"0.0":"-1.0 / 1e-20";if(r){const v=">=";void(this.userCode=`
        const ivec2 strides = ivec2(${o}, ${u});
        const ivec2 pads = ivec2(${p}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${e};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?s?m:g:`wR * ${e} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}else{const v="max";let e=n+`(${n}(${n}(`+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===n&&(e="avgValue / count");r=4*Math.floor(i/4),a=i%4,s=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${p}, ${d});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${r}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${s}
          }

          int xC = xCCorner + ${r};
          if (${1==a}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${s}
          } else if (${2==a}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${s}
          } else if (${3==a}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${s}
          }
        }
        setOutput(${e});
      }
    `}}}class $S{constructor(t,n,r,a=!1,s=!1){if(this.variableNames=["x"],"avg"===n&&r)throw new Error("Cannot compute positions for average pool.");var i=t.filterWidth,o=t.strideDepth,u=t.strideHeight,l=t.strideWidth,c=t.dilationDepth,h=t.dilationHeight,p=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,e=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left,v=(this.outputShape=t.outShape,"avg"===n);let b=v?"0.0":"-1.0 / 1e-20";if(r){const x=">=";void(this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${u}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${e};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${e} +
                      wR * ${e} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}else{const x="max";let e=n+`(${n}(${n}(`+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===n&&(e="avgValue / count");r=4*Math.floor(i/4),a=i%4,s=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${u}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${r}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${s}
            }

            int xC = xCCorner + ${r};
            if (${1==a}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${s}
            } else if (${2==a}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${s}
            } else if (${3==a}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${s}
            }
          }
          setOutput(${e});
        }
      }
    `}}}cf={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=(H2(e=t.x,"avgPool"),r);z(Lo(s,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '1'`);var u=Co(e.shape,a,s,1,i,o);return 1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape)?eS({inputs:{x:e},backend:n}):(u=new AS(u,"avg",!1),n.runWebGLProgram(u,[e],"float32"))}};gf={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{filterSize:a,strides:s,pad:i,dimRoundingMode:o,dataFormat:u}=r,a=Eo(e.shape,a,s,[1,1,1],i,o,u),s=new $S(a,"avg",!1);return n.runWebGLProgram(s,[e],"float32")}};class RS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});
      const float avgMultiplier = float(${1/(t*n)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class FS{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*n*r)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}a={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,s=Eo(a.shape,s,i,[1,1,1],o,u),i=new FS(s);return n.runWebGLProgram(i,[e],a.dtype)}};kd={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a}=t,s=a,{filterSize:a,strides:i,pad:o}=(H2([e,a],"avgPoolGrad"),r),a=Co(s.shape,a,i,1,o),i=new RS(a);return n.runWebGLProgram(i,[e],s.dtype)}};Ed={kernelName:Je,backendName:"webgl",kernelFunc:function(e){var{inputs:e,backend:t,attrs:n}=e,{a:e,b:r}=e,{transposeA:n,transposeB:a}=n;return NS({a:e,b:r,transposeA:n,transposeB:a,backend:t})}};class DS{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],L(e,t),L(e,n);let i="0.0",o=(null!=r&&(L(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()"),"1.0");null!=a&&(L(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}class OS{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],L(e,t),L(e,n);let i="vec4(0.0)",o=(null!=r&&(L(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()"),"vec4(1.0)");null!=a&&(L(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}}Md={kernelName:Wt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{var{x:e,mean:r,variance:a,offset:s,scale:i}=e;z(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(null==s||r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(null==i||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let o=n["varianceEpsilon"];null==o&&(o=.001);const u=[e,r,a];let l=null,c=(null!=s&&(l=s.shape,u.push(s)),null);null!=i&&(c=i.shape,u.push(i));n=new(N.getBool("WEBGL_PACK_NORMALIZATION")?OS:DS)(e.shape,r.shape,a.shape,l,c,o);return t.runWebGLProgram(n,u,u[0].dtype)}};class MS{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t=hN(this.rank),n=(this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}],function(e){{if(1===e)return"sourceLoc";if(e<=6)return LS.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}}(this.rank));const r=e.map((e,t)=>`sourceLoc.${LS[t]} = start[${t}] + coords.${LS[t]};`);e=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join("\n")}
      `,this.userCode=`
      void main() {
        ${e}
        setOutput(getSource(${n}));
      }
    `}}const LS=["x","y","z","w","u","v"];class zS{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];var t=hN(this.rank);const n=SI("coords",this.rank),r=SI("sourceLoc",this.rank);var a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${a})`,s=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,a=1===this.rank?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,e=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${e}
        vec4 result = vec4(0.);
        ${s}
        ${a}
        setOutput(result);
      }
    `}}function PS(t){const{inputs:e,backend:n,attrs:r}=t;var t=e["x"],{begin:a,size:s}=r,[a,s]=qi(t,a,s);if(Oi(t,a,s),0===U(s))return n.makeTensorInfo(s,t.dtype,[]);if(n.shouldExecuteOnCPU([t])||"string"===t.dtype)return i=n.texData.get(t.dataId),i=cI(i.values,a,s,t.shape,t.dtype),n.makeTensorInfo(s,t.dtype,i);var i=n.texData.get(t.dataId)["isPacked"],o=ji(t.shape,a,s);if(i||!o)return i=new(N.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?zS:MS)(s),n.runWebGLProgram(i,[t],t.dtype,[a]);n.uploadToGPU(t.dataId);{o=t,i=a,t=s;var s=(a=n).texData.get(o.dataId),u=a.makeTensorInfo(t,o.dtype);const l=a.texData.get(u.dataId);Object.assign(l,s),l.refCount=1,l.shape=t,l.dtype=o.dtype;let e=Hi(i,se(o.shape));return s.slice&&(e+=s.slice.flatOffset),l.slice={flatOffset:e,origDataId:s.slice&&s.slice.origDataId||o.dataId},t=a.dataRefCount.get(l.slice.origDataId)||1,a.dataRefCount.set(l.slice.origDataId,t+1),u}}Gd={kernelName:Qn,backendName:"webgl",kernelFunc:PS},Kd={kernelName:Ze,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e;e=t.x;const{blockShape:a,crops:s}=r;z(e.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");var i=a.reduce((e,t)=>e*t),o=Cp(e.shape,a,i),u=Ep(o.length,a.length),i=_p(e.shape,a,i),l=Ap(s,a.length),c=$p(i,s,a.length);const h=[];e=$({inputs:{x:e},backend:n,attrs:{shape:o}}),o=wS({inputs:{x:e},backend:n,attrs:{perm:u}}),u=$({inputs:{x:o},backend:n,attrs:{shape:i}}),i=PS({inputs:{x:u},backend:n,attrs:{begin:l,size:c}});return h.push(e),h.push(o),h.push(u),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),i}};rf={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,weights:a}=t,s=r["size"],e=n.readSync(e.dataId),i=n.readSync(a.dataId),e=LN(e,i,a.dtype,a.shape,s);return n.makeTensorInfo([s],a.dtype,e)}};wd={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{s0:e,s1:r}=t,e=n.readSync(e.dataId),r=n.readSync(r.dataId),e=L(Array.from(e),Array.from(r));return n.makeTensorInfo([e.length],"int32",Int32Array.from(e))}};const BS=oS({opSnippet:"return float(a != b);",cpuKernelImpl:aI,dtype:"bool"});df={kernelName:Tn,backendName:"webgl",kernelFunc:BS};function WS(e){const{inputs:t,backend:n}=e;e=t.input;return eS({inputs:{x:n.texData.get(e.dataId).complexTensorInfos.real},backend:n})}Ef={kernelName:zn,backendName:"webgl",kernelFunc:WS};const VS="return float(int(x));";kw={kernelName:tt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t;var s,i,t=n.x,o=a.dtype;if("complex64"===o){if("complex64"===t.dtype)return eS({inputs:{x:t},backend:r});const c=Il(t.shape);var u=e({inputs:{x:t},backend:r,attrs:{dtype:"float32"}}),l=tS({inputs:{real:u,imag:c},backend:r});return c.dispose(),r.disposeIntermediateTensorInfo(u),l}if("complex64"===t.dtype)return l=e({inputs:{x:u=WS({inputs:{input:t},backend:r})},backend:r,attrs:{dtype:o}}),r.disposeIntermediateTensorInfo(u),l;if(!ae(t.dtype,o))return{dataId:(u=eS({inputs:{x:t},backend:r})).dataId,shape:u.shape,dtype:o};if("int32"===o)return l=t,u=r,s=new RI(l.shape,VS),{dataId:(u=u.runWebGLProgram(s,[l],"int32")).dataId,shape:u.shape,dtype:u.dtype};if("bool"===o)return i={a:t,b:s=r.makeTensorInfo([],"bool",ee("bool",1))},i=BS({inputs:i,backend:r}),r.disposeIntermediateTensorInfo(s),i;throw new Error(`Error in Cast: failed to cast ${t.dtype} to `+o)}},Nw="return ceil(x);",Iw=iS({opSnippet:Nw,packedOpSnippet:Nw,cpuKernelImpl:PN}),Cw={kernelName:nt,backendName:"webgl",kernelFunc:Iw};class US{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}class GS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}xf={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{clipValueMin:a,clipValueMax:s}=r;let i;return i=new(N.getBool("WEBGL_PACK_CLIP")?GS:US)(e.shape),n.runWebGLProgram(i,[e],e.dtype,[[a],[s]])}};class jS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function HS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}Ew={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var e=t["x"],r=n.texData.get(e.dataId),a=new jS(e.shape),e=[HS(e,r.complexTensorInfos.real),HS(e,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,e,e[0].dtype)}};class qS{constructor(t){this.outputShape=[],this.outputShape=Ip(t,1),this.variableNames=t.map((e,t)=>"T"+t);const n=new Array(t.length-1);n[0]=t[0][1];for(let e=1;e<n.length;e++)n[e]=n[e-1]+t[e][1];const r=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<n.length;e++){var a=n[e-1];r.push(`else if (yC < ${n[e]}) `+`setOutput(getT${e}(yR, yC-${a}));`)}var e=n.length,s=n[n.length-1];r.push(`else setOutput(getT${e}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join("\n        ")}
      }
    `}}class KS{constructor(t,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Ip(t,n);var e=this.outputShape,r=e.length,a=hN(r),s=SI("coords",r);const i=["x","y","z","w","u","v"].slice(0,r),o=(this.variableNames=t.map((e,t)=>"T"+t),new Array(t.length-1));o[0]=t[0][n];for(let e=1;e<o.length;e++)o[e]=o[e-1]+t[e][n];var u=i[n];const l=i.slice(-2);var c=i.join();let h=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${c}), vec2(${l.join()}));
        }`;for(let e=1;e<o.length;e++){const p=o[e-1];h+=`
        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${XS(i,u,p)}),
            vec2(${XS(l,u,p)}));
        }`}c=o.length;const p=o[o.length-1];h+=`
        return getChannel(
          getT${c}(${XS(i,u,p)}),
          vec2(${XS(l,u,p)}));`,this.userCode=`
      float getValue(${i.map(e=>"int "+e)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${e[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${e[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${e[r-2]} &&
            ${s[r-1]} < ${e[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}}function XS(e,t,n){const r=e.indexOf(t),a=e.map((e,t)=>t===r?e+" - "+n:e);return a.join()}function YS(e){const{inputs:t,backend:n}=e;e=t.input;return eS({inputs:{x:n.texData.get(e.dataId).complexTensorInfos.imag},backend:n})}vh={kernelName:Kt,backendName:"webgl",kernelFunc:YS};function JS(e,n,r){var t,a,s=e[0].dtype;if("complex64"===s){const d=e.map(e=>WS({inputs:{input:e},backend:r})),f=e.map(e=>YS({inputs:{input:e},backend:r}));var i=JS(d,n,r),o=JS(f,n,r);const p=tS({inputs:{real:i,imag:o},backend:r});return d.forEach(e=>r.disposeIntermediateTensorInfo(e)),f.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),p}let u=r.shouldExecuteOnCPU(e);if(u="string"===s?!0:u){const l=e.map(e=>{var t=U(e.shape.slice(n));return $({inputs:{x:e},backend:r,attrs:{shape:[-1,t]}})});var i=l.map(e=>({vals:r.readSync(e.dataId),shape:e.shape}));const c=Ip(l.map(e=>e.shape),1);var o=1===l[0].shape[0],i=BN(i,c,s,o),o=Ip(e.map(e=>e.shape),n),o=r.makeTensorInfo(o,s,i);return l.forEach(e=>r.disposeIntermediateTensorInfo(e)),o}if(e.length>N.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){i=Math.floor(e.length/2),o=JS(e.slice(0,i),n,r),i=JS(e.slice(i),n,r);const p=JS([o,i],n,r);return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),p}if(N.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&1<e[0].shape.length){const h=new KS(e.map(e=>e.shape),n);return r.runWebGLProgram(h,e,s)}t=n,a=r,i=Ip((o=e).map(e=>e.shape),t);const{tensors2D:l,outShape:c}={tensors2D:o=o.map(e=>$({inputs:{x:e},attrs:{shape:[-1,U(e.shape.slice(t))]},backend:a})),outShape:i},h=new qS(l.map(e=>e.shape)),p=r.runWebGLProgram(h,l,s);l.forEach(e=>r.disposeIntermediateTensorInfo(e));e=$({inputs:{x:p},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(p),e}function ZS(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["axis"],e=Q(e,t[0].shape)[0],a=Ip(t.map(e=>e.shape),e);if(0===U(a))return n.makeTensorInfo(a,t[0].dtype,[]);const s=t.filter(e=>0<U(e.shape));return 1===s.length?eS({inputs:{x:s[0]},backend:n}):(Np(s.map(e=>e.shape),e),JS(s,e,n))}_w={kernelName:it,backendName:"webgl",kernelFunc:ZS};class QS{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;var s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,v=m?3:1;let b="",x="";n&&(b=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");n=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1==f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${2==f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3==f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${n}
        ${x}
        setOutput(result);
      }
    `}}class eT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1==f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${2==f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3==f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class tT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=vN(this.outputShape.length);var t=t["dataFormat"],n=q2(),r="channelsLast"===t,a=r?0:1,s=r?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let o="";for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)o+=`
          blockIndex = rc.y + ${e};
          pos = rc.x + ${t};

          ${i}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${s}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${2*t+e}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*t+e}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${o}

        ${n.output} = result;
      }
    `}}function nT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId);var c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(!((1==h||1===p)&&c>kS)&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&ce(l.shape.slice(-3),u.slice(-3))){h=u[0]*u[1]*(u[2]+1);const g={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype};p=l.shape,c=(l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,z(P2(l.shape,g.shape),()=>`packed reshape ${l.shape} to ${g.shape} isn't free`),$({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}})),h=(m.push(c),NS({a:g,b:c,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}));const y=r.texData.get(h.dataId);z(y.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=p,y.shape=n.outShape,(f=eS({inputs:{x:h},backend:r})).shape=n.outShape,m.push(h)}else{c=$({inputs:{x:e},backend:r,attrs:{shape:[1,d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),p=$({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=NS({a:c,b:p,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=$({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(c),m.push(p),m.push(h)}for(const v of m)r.disposeIntermediateTensorInfo(v);return f}function rT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){var{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,d="channelsLast"===d,u=u*l*c,l=p*h,c=[u,l];const f=[];var e=$({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),t=$({inputs:{x:t},backend:r,attrs:{shape:[1,u,U(t.shape)/u]}}),u=(f.push(e),f.push(t),new tT(c,n)),m=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],u=r.runWebGLProgram(u,[e],"float32",m),e=$({inputs:{x:u},backend:r,attrs:{shape:[1,c[0],c[1]]}}),m=(f.push(u),f.push(e),null!=a),c=null!=s,u="leakyrelu"===o,o=o?uS(o,!0):null,l=new lS(e.shape,t.shape,[1,l,n.outChannels],!0,!1,m,o,c,u);const g=[e,t];a&&g.push(a),c&&g.push(s),u&&(m=r.makeTensorInfo([],"float32",_a(i,"float32")),g.push(m),f.push(m));o=r.runWebGLProgram(l,g,"float32"),e=$({inputs:{x:o},backend:r,attrs:{shape:d?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});f.push(o);for(const y of f)r.disposeIntermediateTensorInfo(y);return e}md={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t,{strides:s,pad:i,dataFormat:o,dilations:u,dimRoundingMode:l}=r,o=zo(o),s=_o(e.shape,a.shape,s,u,i,l,!1,o);let c;return i=$({inputs:{x:c=1!==s.filterHeight||1!==s.filterWidth||1!==s.dilationHeight||1!==s.dilationWidth||1!==s.strideHeight||1!==s.strideWidth||"SAME"!==s.padInfo.type&&"VALID"!==s.padInfo.type?N.getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0]?rT({x:e,filter:a,convInfo:s,backend:n}):(u=new QS(s),n.runWebGLProgram(u,[e,a],"float32")):nT({x:e,filter:a,convInfo:s,backend:n})},backend:n,attrs:{shape:s.outShape}}),n.disposeIntermediateTensorInfo(c),i}};class aT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${s}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class sT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class iT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class oT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}$w={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,dy:a}=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u,filterShape:l}=r,o=zo(o),l=_o(e.shape,l,s,1,i,u,!1,o),s=new aT(l);return n.runWebGLProgram(s,[e,a],"float32")}};vd={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,filter:a}=t,{inputShape:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,u=zo(u),s=_o(s,a.shape,i,1,o,l,!1,u),i=new sT(s);return n.runWebGLProgram(i,[e,a],"float32")}};Rw={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t,{strides:s,pad:i,dilations:o}=r,s=Ao(e.shape,a.shape,s,o,i),o=new eT(s);return n.runWebGLProgram(o,[e,a],"float32")}};Lw={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,dy:a}=t,{strides:s,pad:i,filterShape:o}=r,o=Ao(e.shape,o,s,1,i),s=new iT(o);return n.runWebGLProgram(s,[e,a],"float32")}};zw={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,filter:a}=t,{pad:s,strides:i,inputShape:o}=r,o=Ao(o,a.shape,i,1,s),i=new oT(o);return n.runWebGLProgram(i,[e,a],"float32")}},xd=iS({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Pw={kernelName:dt,backendName:"webgl",kernelFunc:xd},Bw=iS({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),Ww={kernelName:ft,backendName:"webgl",kernelFunc:Bw};class uT{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var[e,s,i,o]=e,[t]=t,[n,u]=n,t=(this.outputShape=[t,n,u,o],"bilinear"===r?1:0),[o,r]=[s-1+".0",i-1+".0"],[s,n,l]=1<n?[""+(s-1)/(n-1),"(y2-y1) * height_ratio",`y1*${o} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+o],[i,u,c]=1<u?[""+(i-1)/(u-1),"(x2-x1) * width_ratio",`x1*${r} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+r];this.userCode=`
      const float height_ratio = float(${s});
      const float width_ratio = float(${i});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${e}) {
          return;
        }

        float height_scale = ${n};
        float width_scale = ${u};

        float in_y = ${l};
        if( in_y < 0.0 || in_y > ${o} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${c};
        if( in_x < 0.0 || in_x > ${r} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${t} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}Vw={kernelName:yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e;var{image:e,boxes:a,boxInd:s}=t,{cropSize:i,method:o,extrapolationValue:u}=r,i=new uT(e.shape,a.shape,i,o,u);return n.runWebGLProgram(i,[e,a,s],"float32")}};class lT{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];var r=(this.outputShape=e).length,a=t?"1.0":`getX(${cT(r,"coords")})`,e=e[e.length-1];let s="",i="";i=t?(s=n?"end != "+(e-1):"end != 0",n?"end + 1":"end - 1"):(s=n?"end + pow2 < "+e:"end >= pow2",n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${hN(r)} coords = getOutputCoords();
        int end = ${hT(r,"coords")};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${s}) {
          int idx = ${i};
          ${hT(r,"coords")} = idx;
          val *= getX(${cT(r,"coords")});
        }
        setOutput(val);
      }
    `}}function cT(e,t){if(1===e)return""+t;if(2===e)return t+`.x, ${t}.y`;if(3===e)return t+`.x, ${t}.y, ${t}.z`;if(4===e)return t+`.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative product for rank ${e} is not yet supported`)}function hT(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative product for rank ${e} is not yet supported`)}Uw={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,exclusive:s,reverse:i}=r,o=e.shape.length,u=hl([a],o);let l=e;null!=u&&(l=wS({inputs:{x:e},backend:n,attrs:{perm:u}}));var c=dl(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} `+"but got axis="+a);var h=l.shape[c];let p=eS({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){var d=new lT(l.shape,!1,i),f=[[e]],m=p;p=n.runWebGLProgram(d,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}return s&&(o=new lT(l.shape,s,i),e=p,p=n.runWebGLProgram(o,[p],p.dtype),n.disposeIntermediateTensorInfo(e)),null!=u?(a=pl(u),c=wS({inputs:{x:p},backend:n,attrs:{perm:a}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),c):p}};class pT{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];var r=(this.outputShape=e).length,a=t?"0.0":`getX(${dT(r,"coords")})`,e=e[e.length-1];let s="",i="";i=t?(s=n?"end != "+(e-1):"end != 0",n?"end + 1":"end - 1"):(s=n?"end + pow2 < "+e:"end >= pow2",n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${hN(r)} coords = getOutputCoords();
        int end = ${fT(r,"coords")};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${s}) {
          int idx = ${i};
          ${fT(r,"coords")} = idx;
          val += getX(${dT(r,"coords")});
        }
        setOutput(val);
      }
    `}}function dT(e,t){if(1===e)return""+t;if(2===e)return t+`.x, ${t}.y`;if(3===e)return t+`.x, ${t}.y, ${t}.z`;if(4===e)return t+`.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function fT(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}Nd={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,exclusive:s,reverse:i}=r,o=e.shape.length,u=hl([a],o);let l=e;null!=u&&(l=wS({inputs:{x:e},backend:n,attrs:{perm:u}}));var c=dl(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${e.shape.length-1} `+"but got axis="+a);var h=l.shape[c];let p=eS({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){var d=new pT(l.shape,!1,i),f=[[e]],m=p;p=n.runWebGLProgram(d,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}return s&&(o=new pT(l.shape,s,i),e=p,p=n.runWebGLProgram(o,[p],p.dtype),n.disposeIntermediateTensorInfo(e)),null!=u?(a=pl(u),c=wS({inputs:{x:p},backend:n,attrs:{perm:a}}),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),c):p}};Sd={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var a,s,{x:e,weights:i}=t,{size:o,binaryOutput:u}=r;if(1===e.shape.length)return a=n.readSync(e.dataId),s=n.readSync(i.dataId),a=LN(a,s,i.dtype,i.shape,o),n.makeTensorInfo([o],i.dtype,a);if(2===e.shape.length)return s=n.bufferSync(e),a=n.bufferSync(i),s=zN(s,a,o,u),n.makeTensorInfo(s.shape,i.dtype,s.values);throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+e.shape.length+".")}};class mT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}ep={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{blockSize:a,dataFormat:s}=r,i=e.shape[0],o=("NHWC"===s?e.shape[1]:e.shape[2])*a,u=("NHWC"===s?e.shape[2]:e.shape[3])*a,l=("NHWC"===s?e.shape[3]:e.shape[1])/(a*a),i="NHWC"===s?[i,o,u,l]:[i,l,o,u],l=new mT(i,a,s);return n.runWebGLProgram(l,[e],e.dtype)}};class gT{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=vN(this.outputShape.length);var s=e.filterHeight,i=e.filterWidth,e=e.outChannels/e.inChannels;let o="",u="";n&&(o=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`
          float activation(float x) {
            ${n}
          }
        `,u="result = activation(result);");n=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${o}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${e};
        int q = d2 - d1 * ${e};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${n}
        ${u}
        setOutput(result);
      }
    `}}class yT{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=vN(this.outputShape.length);var s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<c;e++)p+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let e=0;e<c;e++)p+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(h+1)/2;e++){var d,f=2*e;p+=`
          xC = xCCorner + ${f*u};
          `,1===o?f<c&&(i%2==1?p=p+`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }
              `+(1===u&&0<f?`
                xC${f} = vec4(xTexelC${f-2}.zw, xTexelC${f}.xy);
                `:`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${f} = vec4(previous.zw, xTexelC${f}.xy);
                  } else {
                    xC${f} = vec4(0.0, 0.0, xTexelC${f}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }

                xC${f} = xTexelC${f};
                `,1+f<c&&(d=i%2==0?W(u):u,u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${d};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${1+f}Ready == 0) {
                    xTexelC${1+f} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${1+f}.zw = vec2(0.0);
                    }
                    xTexelC${1+f}Ready = 1;
                  }
                  `,1<u&&(p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${f}Ready == 0) {
                      xTexelC${f} = getX(batch, xR, xCOffset, d1);
                      xTexelC${f}Ready = 1;
                    }
                    `),p+=`
                  xC${1+f} = vec4(xTexelC${f}.zw, xTexelC${1+f}.xy);
                  `):p+=1===d?`
                    xC${1+f} = xTexelC${f};
                    `:`
                    xCOffset = xC + ${d};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${1+f}Ready == 0) {
                      xTexelC${1+f} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${1+f}.zw = vec2(0.0);
                      }
                      xTexelC${1+f}Ready = 1;
                    }

                    xC${1+f} = xTexelC${1+f};
                    `)):f<c&&(i%2==1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${1+f}Ready == 0) {
                  xTexelC${1+f} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${1+f}.zw = vec2(0.0);
                  }
                  xTexelC${1+f}Ready = 1;
                }

                xC${f} = vec4(xTexelC${f}.zw, xTexelC${1+f}.zw);
              `,1+f<c&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${1+f} = vec4(xTexelC${1+f}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${f}Ready == 0) {
                  xTexelC${f} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${f}.zw = vec2(0.0);
                  }
                  xTexelC${f}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${1+f}Ready == 0) {
                  xTexelC${1+f} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${1+f}.zw = vec2(0.);
                  }
                  xTexelC${1+f}Ready = 1;
                }

                xC${f} = vec4(
                  xTexelC${f}.xy, xTexelC${1+f}.xy);
              `,1+f<c&&(p+=`
                  xC${1+f} = vec4(xTexelC${f}.zw, xTexelC${1+f}.zw);
                `))),f<c&&(p+=`
            wTexel = getW(r, ${f}, d1, q);
            dotProd += xC${f} * vec4(wTexel.xz, wTexel.xz);
          `,1+f<c&&(p+=`
              wTexel = getW(r, ${1+f}, d1, q);
              dotProd += xC${1+f} * vec4(wTexel.xz, wTexel.xz);
            `))}p=p+`
    }
  `+`
      }
    `;let m="",g="";n&&(m=r?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");e=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${e}
        ${g}
        setOutput(result);
      }
    `}}Gw={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t;const{strides:s,pad:i,dilations:o,dimRoundingMode:u}=r;let l=o;null==l&&(l=[1,1]),z(Lo(s,l),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+`1. Got strides ${s} and dilations '${l}'`);var c=_o(e.shape,a.shape,s,l,i,u,!0);let h;return h=new(N.getBool("WEBGL_PACK_DEPTHWISECONV")&&c.strideWidth<=2&&c.outChannels/c.inChannels==1?yT:gT)(c),c=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]],n.runWebGLProgram(h,[e,a],"float32",c)}};class vT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class bT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}Rd={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,dy:a}=t,{strides:s,dilations:i,pad:o,dimRoundingMode:u,filterShape:l}=r,l=_o(e.shape,l,s,i,o,u,!0),s=new vT(l);return n.runWebGLProgram(s,[e,a],"float32")}};jw={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,filter:a}=t,{strides:s,dilations:i,pad:o,dimRoundingMode:u,inputShape:l}=r,l=_o(l,a.shape,s,i,o,u,!0),s=new bT(l);return n.runWebGLProgram(s,[e,a],"float32")}};class xT{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}Hw={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var r=[...(e=t["x"]).shape,...e.shape],a=U(e.shape),e=$({inputs:{x:e},backend:n,attrs:{shape:[a]}}),a=new xT(a),r=$({inputs:{x:a=n.runWebGLProgram(a,[e],e.dtype)},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),r}};class wT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var{inHeight:e,inWidth:t,padInfo:n,strideHeight:r,strideWidth:a,filterHeight:s,filterWidth:i,dilationHeight:o,dilationWidth:u}=e,{top:n,left:l}=n;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${n}, ${l});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${s}; h++) {
          int hIn = hBeg + h * ${o};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${i}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${t}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}qw={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a}=t,{strides:s,pad:i,dilations:o}=r,s=To(e.shape,a.shape,s,i,"NHWC",o),i=new wT(s),i=$({inputs:{x:o=n.runWebGLProgram(i,[e,a],"float32")},backend:n,attrs:{shape:s.outShape}});return n.disposeIntermediateTensorInfo(o),i}};wf={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["equation"],a=t,{allDims:s,summedDims:e,idDims:i}=Up(e,a.length),{path:o,steps:u}=(jp(s.length,i,a),Hp(e,i)),l=u.length;let c=null,h=s.length;const p=[];for(let e=0;e<l;++e){for(const m of u[e]){var{permutationIndices:d,expandDims:f}=Gp(h,i[m]);let e;qp(d)?e=a[m]:(e=wS({inputs:{x:a[m]},backend:n,attrs:{perm:d}}),p.push(e));const g=e.shape.slice();for(let e=0;e<f.length;++e)g.splice(f[e],0,1);ce(e.shape,g)||(e=$({inputs:{x:e},backend:n,attrs:{shape:g}}),p.push(e)),null===c?c=e:(c=dS({inputs:{a:e,b:c},backend:n}),p.push(c))}e<l-1&&(0<=o[e]&&(c=xS({inputs:{x:c},backend:n,attrs:{axis:o[e]-(s.length-h),keepDims:!1}}),p.push(c)),h--)}for(const y of p)y!==c&&n.disposeIntermediateTensorInfo(y);return c}},$d=iS({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),Dd={kernelName:_t,backendName:"webgl",kernelFunc:$d};Kw={kernelName:At,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e;var{dy:e,y:r}=t,a=N.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new QI(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,e.shape,r.shape):new ZI("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,r.shape);return n.runWebGLProgram(a,[e,r],e.dtype)}},Ld=oS({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:WN}),Xw={kernelName:Rt,backendName:"webgl",kernelFunc:Ld},Yw=iS({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n'}),Jw={kernelName:$t,backendName:"webgl",kernelFunc:Yw};const kT=iS({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:VN,dtype:"float32"});Zw={kernelName:Ft,backendName:"webgl",kernelFunc:kT};function NT(e){var{inputs:e,attrs:t,backend:n}=e,t=t["dim"];const r=e["input"],a=r.shape.length,s=r.shape.slice();let i=t;return t<0&&(z(-(a+1)<=t,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),i=a+t+1),s.splice(i,0,1),$({inputs:{x:r},backend:n,attrs:{shape:s}})}Qw={kernelName:Dt,backendName:"webgl",kernelFunc:NT},ek="return exp(x) - 1.0;",nk=iS({opSnippet:ek,packedOpSnippet:ek,cpuKernelImpl:UN}),Wd={kernelName:Ot,backendName:"webgl",kernelFunc:nk};class IT{constructor(e,t,n){this.variableNames=["real","imag"];var r=t[1],t=(this.outputShape=t,n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI),n=n?r+".0":"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`
      const float exponentMultiplier = ${t};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${n};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function ST(e,t,n){var r=n.texData.get(e.dataId),a=U(e.shape),s=e.shape[e.shape.length-1],a=$({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),s=a.shape,i=new IT("real",s,t),t=new IT("imag",s,t),r=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:s},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:s}],s=n.runWebGLProgram(i,r,"float32"),i=n.runWebGLProgram(t,r,"float32"),t=tS({inputs:{real:s,imag:i},backend:n}),r=(n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),$({inputs:{x:t},backend:n,attrs:{shape:e.shape}}));return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(t),r}rk={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){var{inputs:e,backend:t}=e;return ST(e=e["input"],!1,t)}};class TT{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function CT(e){const{backend:t,attrs:n}=e;var r,{shape:e,value:a}=n,s=n["dtype"];if("string"!==(s=s||me(a)))return r=new TT(e,a),t.runWebGLProgram(r,[],s,[[a]]);{const i=te(s,U(e));return i.fill(a),t.makeTensorInfo(e,s,i)}}ak={kernelName:Lt,backendName:"webgl",kernelFunc:CT};class ET{constructor(e){this.variableNames=["Image"],this.outputShape=[];var t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}sk={kernelName:zt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{e=e.image;const n=t;t=new ET(e.shape);return n.runWebGLProgram(t,[e],e.dtype)}},ik="return floor(x);",ok=iS({opSnippet:ik,packedOpSnippet:ik,cpuKernelImpl:GN}),uk={kernelName:Pt,backendName:"webgl",kernelFunc:ok},lk=oS({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),Hd={kernelName:Bt,backendName:"webgl",kernelFunc:lk};class _T{constructor(e){this.variableNames=["A"];var t=q2(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}class AT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=q2(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}ck={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let a=t["pixels"];var e=r["numChannels"],s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[o,u]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[u,o],e=[u,o,e];(i||s)&&(($T=null==$T?document.createElement("canvas").getContext("2d"):$T).canvas.width=o,$T.canvas.height=u,$T.drawImage(a,0,0,o,u),a=$T.canvas);i=n.makeTensorInfo(l,"int32"),n.texData.get(i.dataId).usage=m2.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(i.dataId),a),s=new(N.getBool("WEBGL_PACK")?AT:_T)(e),o=n.runWebGLProgram(s,[i],"int32");return n.disposeData(i.dataId),o}};let $T;hk={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a,bias:s,preluActivationWeights:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,l=zo(l),o=_o(e.shape,a.shape,o,c,u,h,!1,l);let f;const m=[];if(1!==o.filterHeight||1!==o.filterWidth||1!==o.dilationHeight||1!==o.dilationWidth||1!==o.strideHeight||1!==o.strideWidth||"SAME"!==o.padInfo.type&&"VALID"!==o.padInfo.type)if(N.getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])f=rT({x:e,filter:a,convInfo:o,backend:n,bias:s,activation:p,preluActivationWeights:i,leakyreluAlpha:d});else{c=null!=s,u=null!=i,h="leakyrelu"===p,l=p?uS(p,!1):null,c=new QS(o,c,l,u,h);const t=[e,a];s&&t.push(s),i&&t.push(i),h&&(l=n.makeTensorInfo([],"float32",_a(d,"float32")),t.push(l),m.push(l)),f=n.runWebGLProgram(c,t,"float32")}else f=nT({x:e,filter:a,convInfo:o,backend:n,bias:s,activation:p,preluActivationWeights:i,leakyreluAlpha:d});return u=$({inputs:{x:f},backend:n,attrs:{shape:o.outShape}}),m.push(f),m.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};fk={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,filter:a,bias:s,preluActivationWeights:i}=t;const{strides:o,pad:u,dilations:l,dimRoundingMode:c,activation:h,leakyreluAlpha:p}=r,d=[];let f=l;null==f&&(f=[1,1]),z(Lo(o,f),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+`1. Got strides ${o} and dilations '${f}'`);var m=_o(e.shape,a.shape,o,f,u,c,!0),g=N.getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,y=h?uS(h,g):null;const v=[e,a];var e=null!=s,a=null!=i,b="leakyrelu"===h;e&&v.push(s),a&&v.push(i),b&&(s=n.makeTensorInfo([],"float32",_a(p,"float32")),v.push(s),d.push(s));let x;return x=new(g?yT:gT)(m,e,y,a,b),i=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=n.runWebGLProgram(x,v,"float32",i),d.forEach(e=>n.disposeIntermediateTensorInfo(e)),s}};class RT{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;e=hN(t.length),t=hN(n.length),n=1<this.sliceDim?"strides[j]":"strides";this.userCode=`
        ${e} strides = ${e}(${this.strides});
         void main() {
          ${t} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${n};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}Xd={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{params:e,indices:r}=t,a=(a=r.shape)[a.length-1],s=U(e.shape),[i,o,u,l]=Ci(e,r),c=$({inputs:{x:r},backend:n,attrs:{shape:[o,a]}}),h=$({inputs:{x:e},backend:n,attrs:{shape:[U(e.shape)/u,u]}});if(n.shouldExecuteOnCPU([e,r])||"string"===e.dtype)return r=n.readSync(r.dataId),p=n.bufferSync(e),r=jN(r,p,e.dtype,o,a,u,l,e.shape,s),n.makeTensorInfo(i,e.dtype,r.values);var p=new RT(a,l,[o,u]),e=$({inputs:{x:s=n.runWebGLProgram(p,[h,c],h.dtype)},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(s),e}};class FT{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;var t=hN(this.rank),n=function(t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let e=0;e<t.length;e++)2===e?r.push("index"):r.push(""+n[e]);return r.join()}(e);this.userCode=`
      void main() {
        ${t} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}}function DT(e){const{inputs:t,backend:n,attrs:r}=e;var{x:e,indices:a}=t,{axis:s,batchDims:i}=r,s=Q(s,e.shape)[0];if(N.get("DEBUG")){var o=n.readSync(a.dataId);const h=e.shape[s];for(let e=0;e<o.length;++e){const p=o[e];z(p<=h-1&&0<=p,()=>`GatherV2: the index value ${p} is not in [0, ${h-1}]`)}}s=ld(e,a,s,i),i=U(a.shape);const u=[];var l=$({inputs:{x:e},backend:n,attrs:{shape:[s.batchSize,s.outerSize,s.dimSize,s.sliceSize]}}),c=$({inputs:{x:a},backend:n,attrs:{shape:[s.batchSize,i/s.batchSize]}}),i=(u.push(l),u.push(c),[s.batchSize,s.outerSize,i/s.batchSize,s.sliceSize]);if(n.shouldExecuteOnCPU([e,a])||"string"===e.dtype)return a=n.bufferSync(c),e=n.bufferSync(l),e=HN(e,a,i),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(s.outputShape,e.dtype,e.values);a=new FT(l.shape,i),e=n.runWebGLProgram(a,[l,c],l.dtype),u.push(e),i=$({inputs:{x:e},backend:n,attrs:{shape:s.outputShape}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),i}Yd={kernelName:Vt,backendName:"webgl",kernelFunc:DT},gk=oS({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:qN,dtype:"bool"}),vk={kernelName:Gt,backendName:"webgl",kernelFunc:gk},xk=oS({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:KN}),Qd={kernelName:jt,backendName:"webgl",kernelFunc:xk};wk={kernelName:qt,backendName:"webgl",kernelFunc:function(e){var{inputs:e,backend:t}=e;return ST(e=e["input"],!0,t)}},Ik=iS({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Tk={kernelName:Xt,backendName:"webgl",kernelFunc:Ik},Ek=iS({opSnippet:"return float(isinf(x));",dtype:"bool"}),kf={kernelName:Yt,backendName:"webgl",kernelFunc:Ek},tf=iS({opSnippet:"return float(isnan(x));",dtype:"bool"}),_k={kernelName:Jt,backendName:"webgl",kernelFunc:tf},tp=oS({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:XN,dtype:"bool"}),Ak={kernelName:Qt,backendName:"webgl",kernelFunc:tp},Nf=oS({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:YN,dtype:"bool"}),If={kernelName:en,backendName:"webgl",kernelFunc:Nf};Sf={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e;var{start:e,stop:r,num:a}=n,e=JN(e,r,a);return t.makeTensorInfo([e.length],"float32",e)}},$k=iS({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:ZN}),Rk={kernelName:nn,backendName:"webgl",kernelFunc:$k},Fk=iS({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),Dk={kernelName:rn,backendName:"webgl",kernelFunc:Fk},Ok=oS({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),Mk={kernelName:an,backendName:"webgl",kernelFunc:Ok},Lk=iS({opSnippet:"return float(!(x >= 1.0));"}),af={kernelName:sn,backendName:"webgl",kernelFunc:Lk},Pk=oS({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),Bk={kernelName:on,backendName:"webgl",kernelFunc:Pk};class OT{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];var s=e[3]-1;this.outputShape=e;let i;e=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${e})`:1===a?`1.0/(${e})`:`exp(log(${e}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${s}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}}class MT{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var s=e[3]-1;this.outputShape=e;let i;e=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${e})`:1===a?`1.0/(${e})`:`exp(log(${e}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}}Wk={kernelName:ln,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{depthRadius:a,bias:s,alpha:i,beta:o}=r,a=new(N.getBool("WEBGL_PACK_NORMALIZATION")?MT:OT)(e.shape,a,s,i,o);return n.runWebGLProgram(a,[e],e.dtype)}};class LT{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}of={kernelName:cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e;var{x:e,y:a,dy:s}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=r,i=new LT(e.shape,i,o,u,l);return n.runWebGLProgram(i,[e,a,s],e.dtype)}};function zT(e){const{inputs:t,backend:n,attrs:r}=e;var a=t["x"],{reductionIndices:e,keepDims:s}=r,i=a.shape.length,e=Q(e,a.shape);let o=e;var u=hl(o,i),l=null!=u,c=n.shouldExecuteOnCPU([a]);let h=a;if(l){if(c){var p=n.texData.get(h.dataId).values;const m=new Array(i);for(let e=0;e<m.length;e++)m[e]=a.shape[u[e]];p=kI(p,a.shape,a.dtype,u,m);h=n.makeTensorInfo(m,a.dtype);const g=n.texData.get(h.dataId);g.values=p}else h=bS(a,u,n);o=dl(o.length,i)}cl("max",o,i);var[p,i]=ul(h.shape,o);let d=p;s&&(d=ll(p,e));let f;if(c){var s=n.texData.get(h.dataId).values,p=QN(s,U(i),d,a.dtype);f=n.makeTensorInfo(d,a.dtype);const y=n.texData.get(f.dataId);y.values=p}else f=(e=h,c=i,s=d,p=n,c=U(c),c=$({inputs:{x:e},attrs:{shape:[U(e.shape)/c,c]},backend:p}),e=gS(c,e.dtype,"max",p),s=$({inputs:{x:e},attrs:{shape:s},backend:p}),p.disposeIntermediateTensorInfo(c),p.disposeIntermediateTensorInfo(e),s);return l&&n.disposeIntermediateTensorInfo(h),f}Vk={kernelName:hn,backendName:"webgl",kernelFunc:zT},Uk=oS({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:eI}),Gk={kernelName:pn,backendName:"webgl",kernelFunc:Uk};uf={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=(H2(e=t.x,"maxPool"),r);z(Lo(s,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '1'`);var u=Co(e.shape,a,s,1,i,o);return 1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape)?eS({inputs:{x:e},backend:n}):(u=new AS(u,"max",!1),n.runWebGLProgram(u,[e],e.dtype))}};dk={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{filterSize:a,strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=r,a=Eo(e.shape,a,s,[1,1,1],i,u,o),s=new $S(a,"max",!1);return n.runWebGLProgram(s,[e],e.dtype)}};class PT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${a*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class BT{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*u*l-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}Hk={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,s=Eo(a.shape,s,i,[1,1,1],o,u),i=new $S(s,"max",!0),o=n.runWebGLProgram(i,[a],a.dtype),u=new BT(s),i=n.runWebGLProgram(u,[e,o],a.dtype);return n.disposeIntermediateTensorInfo(o),i}};qk={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{dy:e,input:a,output:s}=t,i=a,{filterSize:a,strides:s,pad:o,dimRoundingMode:u}=(H2([a,s],"maxPoolGrad"),r),a=Co(i.shape,a,s,1,o,u),s=new AS(a,"max",!0),o=n.runWebGLProgram(s,[i],i.dtype),u=new PT(a),s=n.runWebGLProgram(u,[e,o],i.dtype);return n.disposeIntermediateTensorInfo(o),s}};Kk={kernelName:yn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const r=e["x"],{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;e=n;z(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];z(Lo(s,u),()=>"Error in maxPool: Either strides or dilations must be 1. "+`Got strides ${s} and dilations '${u}'`);var l,c,t=Co(r.shape,a,s,u,i),[t,h]=(n=r,h=o,t=t,e=e,l=new AS(t,"max",!1),c=e.runWebGLProgram(l,[n],"float32"),l=new AS(t,"max",!0,!0,h),[c,e.runWebGLProgram(l,[n],"float32")]);return[t,h]}};Xk={kernelName:vn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{var r=e["x"],{keepDims:e,axis:t}=t;const a=n;n=r.shape.length,t=Q(t,r.shape);let s=t;var i=hl(s,n),o=null!=i,u=a.shouldExecuteOnCPU([r]);const l=[];let c=r;if(o){if(u){o=a.texData.get(c.dataId).values;const p=new Array(n);for(let e=0;e<p.length;e++)p[e]=r.shape[i[e]];u=kI(o,r.shape,r.dtype,i,p);c=a.makeTensorInfo(p,r.dtype);const d=a.texData.get(c.dataId);d.values=u}else c=bS(r,i,a);l.push(c),s=dl(s.length,n)}cl("sum",s,n);var[o,u]=ul(c.shape,s);let h=o;e&&(h=ll(o,t));n=c,e=u,o=h,t=a,e=U(e),n=$({inputs:{x:n},attrs:{shape:[U(n.shape)/e,e]},backend:t}),e=gS(n,"float32","mean",t),o=$({inputs:{x:e},attrs:{shape:o},backend:t}),t.disposeIntermediateTensorInfo(n),t.disposeIntermediateTensorInfo(e);u=o;for(const f of l)a.disposeIntermediateTensorInfo(f);return u}};Yk={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r,i=e.shape.length;let o=a=Q(a,e.shape);var u=hl(o,i);let l=e;null!=u&&(l=wS({inputs:{x:e},backend:n,attrs:{perm:u}}),o=dl(o.length,e.shape.length)),cl("min",o,i);var[e,i]=ul(l.shape,o),i=U(i),c=gS(i=$({inputs:{x:l},backend:n,attrs:{shape:[-1,i]}}),i.dtype,"min",n);let h;return h=s?(s=ll(e,a),$({inputs:{x:c},backend:n,attrs:{shape:s}})):$({inputs:{x:c},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),null!=u&&n.disposeIntermediateTensorInfo(l),h}},Jk=oS({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:tI}),Zk={kernelName:xn,backendName:"webgl",kernelFunc:Jk};class WT{constructor(n,e,t){this.variableNames=["x"],this.outputShape=e.map((e,t)=>e[0]+n[t]+e[1]);var r=n.length,a=hN(r),s=e.map(e=>e[0]).join(","),e=e.map((e,t)=>e[0]+n[t]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),t="reflect"===t?0:1;this.userCode=1===r?`
        int start = ${s};
        int end = ${e};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${t};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${t};
          }
          setOutput(getX(outC - start));
        }
      `:`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${e});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${t};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${t};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${i}));
      }
    `}}class VT{constructor(n,e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,t)=>e[0]+n[t]+e[1]);var r=n.length,a=hN(r),s=e.map(e=>e[0]).join(","),e=e.map((e,t)=>e[0]+n[t]).join(","),i=SI("rc",r);const o=SI("source",r);var u,l=i[r-1]+" < "+this.outputShape[r-1],c=1===r?"source":`vec2(${o.slice(-2).join()})`,t="reflect"===t?0:1;let h="";h=1===r?`
        ${a} rc = outputLoc;
        ${u=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${t};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${t};
        }
        source -= start;
      `}
        result[0] = getChannel(getX(${o.join()}), ${c});
        ${i[r-1]} += 1;
        if(${l}) {
          ${u}
          result[1] = getChannel(getX(${o.join()}), ${c});
        }
      `:`
        ${a} rc = outputLoc;
        ${u=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${t}) +
                gte * ((end - 1) * 2 - source + ${t});
        source -= start;
      `}
        result[0] = getChannel(getX(${o.join()}), ${c});
        ${i[r-1]} += 1;
        if(${l}) {
          ${u}
          result[1] = getChannel(getX(${o.join()}), ${c});
        }
        rc = outputLoc;
        ${i[r-2]} += 1;
        if(${i[r-2]} < ${this.outputShape[r-2]}) {
          ${u}
          result[2] = getChannel(getX(${o.join()}), ${c});
          ${i[r-1]} += 1;
          if(${l}) {
            ${u}
            result[3] = getChannel(getX(${o.join()}), ${c});
          }
        }
      `,this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${e});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}Qk={kernelName:wn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{var e=e["x"],{paddings:n,mode:r}=n,n=new(N.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?VT:WT)(e.shape,n,r);return t.runWebGLProgram(n,[e],e.dtype)}},pf=oS({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),mf={kernelName:kn,backendName:"webgl",kernelFunc:pf};class UT{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}const GT=oS({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0});e2={kernelName:Ct,backendName:"webgl",kernelFunc:GT},t2="return a - b;";const jT=oS({opSnippet:t2,packedOpSnippet:t2,supportsComplex:!0,cpuKernelImpl:bI});n2={kernelName:wr,backendName:"webgl",kernelFunc:jT};function HT(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["logits"],a=r["dim"],a=Q([a],e.shape),s=zT({inputs:{x:e},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),i=ll(s.shape,a),o=$({inputs:{x:s},backend:n,attrs:{shape:i}}),e=jT({inputs:{a:e,b:o},backend:n}),u=kT({inputs:{x:e},backend:n}),a=xS({inputs:{x:u},backend:n,attrs:{axis:a,keepDims:!1}}),i=$({inputs:{x:a},backend:n,attrs:{shape:i}}),l=GT({inputs:{a:u,b:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),l}r2={kernelName:lr,backendName:"webgl",kernelFunc:HT};a2={kernelName:Nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["logits"],{numSamples:a,seed:s,normalized:i}=r,o=(e=i?e:HT({inputs:{logits:e},backend:n,attrs:{dim:e.shape.length-1}})).shape[0],u=e.shape[1],o=new UT(o,u,a),u=n.runWebGLProgram(o,[e],"int32",[[s]]);return i||n.disposeIntermediateTensorInfo(e),u}};FI;vf={kernelName:Sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var r,a,e=t["x"];if(n.shouldExecuteOnCPU([e]))return r=n.texData.get(e.dataId),[r,a]=rI(r.values,e.shape,e.dtype),n.makeTensorInfo(a,e.dtype,r);let s;return s=N.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new HI(e.shape,`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`):new RI(e.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[e],e.dtype)}};const qT=Th;Tw={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e;var{boxes:e,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=r,e=n.readSync(e.dataId),a=n.readSync(a.dataId),e=qT(e,a,s,i,o)["selectedIndices"];return n.makeTensorInfo([e.length],"int32",new Int32Array(e))}};const KT=Ch;s2={kernelName:En,backendName:"webgl",kernelFunc:function(e){zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e;var{boxes:e,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:u}=r,e=n.readSync(e.dataId),a=n.readSync(a.dataId),{selectedIndices:e,validOutputs:a}=KT(e,a,s,i,o,u);return[n.makeTensorInfo([e.length],"int32",new Int32Array(e)),n.makeTensorInfo([],"int32",new Int32Array([a]))]}};const XT=Eh;i2={kernelName:_n,backendName:"webgl",kernelFunc:function(e){zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e;var{boxes:e,scores:a}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=r,e=n.readSync(e.dataId),a=n.readSync(a.dataId),{selectedIndices:e,selectedScores:a}=XT(e,a,s,i,o,u);return[n.makeTensorInfo([e.length],"int32",new Int32Array(e)),n.makeTensorInfo([a.length],"float32",new Float32Array(a))]}};class YT{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}}o2={kernelName:$n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e;var e=t["indices"],{depth:a,onValue:s,offValue:i}=r,o=U(e.shape),s=new YT(o,a,s,i),i=$({inputs:{x:e},backend:n,attrs:{shape:[o]}}),o=n.runWebGLProgram(s,[i],e.dtype),s=(n.disposeIntermediateTensorInfo(i),[...e.shape,a]),i=$({inputs:{x:o},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(o),i}};function JT(e){const{inputs:t,backend:n}=e;var r,a,s,i,o,e=t["x"];return"complex64"===e.dtype?(o=tS({inputs:{real:a=JT({inputs:{x:r=WS({inputs:{input:e},backend:n})},backend:n}),imag:i=JT({inputs:{x:s=YS({inputs:{input:e},backend:n})},backend:n})},backend:n}),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o):CT({attrs:{shape:e.shape,dtype:e.dtype,value:"string"===e.dtype?"":0},backend:n})}u2={kernelName:$r,backendName:"webgl",kernelFunc:JT};l2={kernelName:An,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t;var a,s,i,o,u,t=n.x;if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return"complex64"===t.dtype?(u=tS({inputs:{real:s=e({inputs:{x:a=WS({inputs:{input:t},backend:r})},backend:r}),imag:o=JT({inputs:{x:i=YS({inputs:{input:t},backend:r})},backend:r})},backend:r}),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u):CT({attrs:{shape:t.shape,dtype:t.dtype,value:1},backend:r})}};ef={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=r["axis"];if(1===t.length)return NT({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype,o=(t.forEach(e=>{G(s,e.shape,"All tensors passed to stack must have matching shapes"),z(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")}),[]);return e=ZS({inputs:t.map(e=>{e=NT({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(e),e}),backend:n,attrs:{axis:a}}),o.forEach(e=>n.disposeIntermediateTensorInfo(e)),e}};class ZT{constructor(n,e,t){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,t)=>e[0]+n[t]+e[1]);var r=n.length,a=hN(r),s=e.map(e=>e[0]).join(","),e=e.map((e,t)=>e[0]+n[t]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1===r?`
        int start = ${s};
        int end = ${e};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `:`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${e});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${i}));
        }
      }
    `}}class QT{constructor(n,e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((e,t)=>e[0]+n[t]+e[1]);var r=n.length,a=hN(r),s=e.map(e=>e[0]).join(","),e=e.map((e,t)=>e[0]+n[t]).join(","),i=SI("rc",r);const o=SI("source",r);var u=i[r-1]+" < "+this.outputShape[r-1],l=1===r?"source":`vec2(${o.slice(-2).join()})`,c=[a+" rc = outputLoc;",i[r-1]+` += 1;
       if(${u}) {
      `,1===r?"":`}
       rc = outputLoc;
       ${i[r-2]} += 1;
       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;
         if(${u}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`
        ${c[e]}
        if (${h}) {
          result[${e}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${e}] = getChannel(getX(${o.join()}), ${l});
        }
      `;p+=1===r?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${e});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}const eC=e=>{const{inputs:t,backend:n,attrs:r}=e,a=t["x"],{paddings:s,constantValue:i}=r;if(0===U(a.shape))return e=s.map((e,t)=>e[0]+a.shape[t]+e[1]),CT({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}});e=new(N.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?QT:ZT)(a.shape,s,i);return n.runWebGLProgram(e,[a],a.dtype,[[i]])};p2={kernelName:Fn,backendName:"webgl",kernelFunc:eC},d2=oS({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),y2={kernelName:Dn,backendName:"webgl",kernelFunc:d2};Nk={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],{axis:a,keepDims:s}=r,i=e.shape.length;const o=[];let u=a=Q(a,e.shape);var l,c=hl(u,i);let h=e;null!=c&&(h=wS({inputs:{x:e},backend:n,attrs:{perm:c}}),u=dl(u.length,i),o.push(h)),cl("prod",u,i);let p;return n.shouldExecuteOnCPU([h])?(c=n.texData.get(h.dataId).values,{outVals:i,outShape:c,outDtype:l}=sI(h.shape,h.dtype,c,u),p=n.makeTensorInfo(c,l,i)):([c,l]=ul(h.shape,u),i=U(l),i=gS(l=$({inputs:{x:h},backend:n,attrs:{shape:[-1,i]}}),Ja(e.dtype),"prod",n),p=$({inputs:{x:i},backend:n,attrs:{shape:c}}),o.push(l),o.push(i)),s&&(o.push(p),e=ll(p.shape,a),p=$({inputs:{x:p},backend:n,attrs:{shape:e}})),o.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}};const tC=e=>{const{backend:t,attrs:n}=e;var{start:e,stop:r,step:a,dtype:s}=n,e=iI(e,r,a,s);return t.makeTensorInfo([e.length],s,e)};Cf={kernelName:Ln,backendName:"webgl",kernelFunc:tC},Zh=iS({opSnippet:"return 1.0 / x;"}),_f={kernelName:Pn,backendName:"webgl",kernelFunc:Zh},FI,bf=iS({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),Zd={kernelName:Bn,backendName:"webgl",kernelFunc:bf},FI,ff=iS({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),rp={kernelName:Hn,backendName:"webgl",kernelFunc:ff};class nC{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];var[e,s,i,o]=e,e=(this.outputShape=[e,t,n,o],[r&&1<t?s-1:s,r&&1<n?i-1:i]),o=[r&&1<t?t-1:t,r&&1<n?n-1:n];let u;u=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${e[0]/o[0]},
          ${e[1]/o[1]});
      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${u};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}class rC{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var[e,s,i,o]=e,e=(this.outputShape=[e,t,n,o],[r&&1<t?s-1:s,r&&1<n?i-1:i]),t=[r&&1<t?t-1:t,r&&1<n?n-1:n];let u;u=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${e[0]/t[0]},
          ${e[1]/t[1]},
          ${e[1]/t[1]});
      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${u};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${o-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}bh={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["images"],{alignCorners:a,halfPixelCenters:s,size:i}=r,[i,o]=i,i=new(N.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?rC:nC)(e.shape,i,o,a,s);return n.runWebGLProgram(i,[e],"float32")}};class aC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[];var[,t,r]=this.outputShape=t,[,e,a]=e,s=[n&&1<e?t-1:t,n&&1<a?r-1:r],n=[n&&1<e?e-1:e,n&&1<a?a-1:a],i=s[0]/n[0],s=s[1]/n[1],n=1/i,o=1/s,u=2*Math.ceil(n)+2,l=2*Math.ceil(o)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${i});
        const float widthScale = float(${s});

        const float invHeightScale = float(${n});
        const float invWidthScale = float(${o});

        const int winHeight = int(${u});
        const int winWidth = int(${l});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${e}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${t-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}wh={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{images:e,dy:a}=t,s=r["alignCorners"],e=new aC(a.shape,e.shape,s);return n.runWebGLProgram(e,[a],a.dtype)}};class sC{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];var[e,s,i,o]=e,e=(this.outputShape=[e,t,n,o],[r&&1<t?s-1:s,r&&1<n?i-1:i]),o=[r&&1<t?t-1:t,r&&1<n?n-1:n];let u;u=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${e[0]/o[0]},
          ${e[1]/o[1]});
      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${u};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}class iC{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var[e,s,i,o]=e,e=(this.outputShape=[e,t,n,o],[r&&1<t?s-1:s,r&&1<n?i-1:i]),t=[r&&1<t?t-1:t,r&&1<n?n-1:n];let u;u=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${e[0]/t[0]},
          ${e[1]/t[1]},
          ${e[1]/t[1]});
      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,
                                     ${i}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${u};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${o-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}Qh={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["images"],{alignCorners:a,halfPixelCenters:s,size:i}=r,[i,o]=i,i=new(N.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?iC:sC)(e.shape,i,o,a,s);return n.runWebGLProgram(i,[e],e.dtype)}};class oC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[];var[,t,r]=this.outputShape=t,[,e,a]=e,s=[n&&1<e?t-1:t,n&&1<a?r-1:r],i=[n&&1<e?e-1:e,n&&1<a?a-1:a],o=s[0]/i[0],u=s[1]/i[1],l=1/o,c=1/u,h=2*Math.ceil(l)+2,p=2*Math.ceil(c)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${o});
        const float widthScale = float(${u});

        const float invHeightScale = float(${l});
        const float invWidthScale = float(${c});

        const int winHeight = int(${h});
        const int winWidth = int(${p});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${e}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${s[0]}) *
                (float(dyR) / float(${i[0]}));

            float sourceFracCol =
                float(${s[1]}) *
                  (float(dyC) / float(${i[1]}));

            int sourceNearestRow = int(min(
                float(int(${t}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}Od={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{images:e,dy:a}=t,s=r["alignCorners"],e=new oC(a.shape,e.shape,s);return n.runWebGLProgram(e,[a],a.dtype)}};class uC{constructor(n,r){this.variableNames=["x"];var e=n.length;if(4<e)throw new Error(`WebGL backend: Reverse of rank-${e} tensor is not yet supported`);if(this.outputShape=n,1===e)this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${n[0]} - coord - 1));
        }
      `;else{var t=n.map((e,t)=>(e=>-1!==r.indexOf(e)&&1!==n[e]?n[e]+` - coords[${e}] - 1`:`coords[${e}]`)(t)).join(","),e=hN(e);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        setOutput(getX(${t}));
      }
    `}}}class lC{constructor(a,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const e=a.length;if(4<e)throw new Error(`WebGL backend: Reverse of rank-${e} tensor is not yet supported`);this.outputShape=a;const t=SI("rc",e);var n=t[e-1]+" + 1 < "+this.outputShape[e-1],r=t[e-2]+" + 1 < "+this.outputShape[e-2],i=hN(e);function o(r){const e=a.map((e,t)=>{var n=r;return-1!==s.indexOf(t)&&1!==a[t]?`${a[t]} - ${n[t]} - 1`:""+n[t]});return`getChannel(getX(${e.join(",")}), vec2(${e.slice(-2).join(",")}))`}1===e?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${a[0]} - rc - 1),
            ${a[0]} - rc - 1);
          if(${n}){
              result.g = getChannel(getX(${a[0]} - (rc  + 1) - 1),
                ${a[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(t.slice())};
          if(${n}){
            result.g = ${i=t.slice(),i[e-1]="("+i[e-1]+" + 1)",o(i)};
          }
          if(${r}) {
            result.b = ${i=t.slice(),i[e-2]="("+i[e-2]+" + 1)",o(i)};
            if(${n}) {
              result.a = ${r=t.slice(),r[e-1]="("+r[e-1]+" + 1)",r[e-2]="("+r[e-2]+" + 1)",o(r)};
            }
          }
          setOutput(result);
        }
    `}}Ud={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["dims"],s=e.shape.length,a=Q(a,e.shape);return 0===s?eS({inputs:{x:e},backend:n}):(s=new(N.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?lC:uC)(e.shape,a),n.runWebGLProgram(s,[e],e.dtype))}};class cC{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];var n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}nf={kernelName:Dr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{var e=e["image"],{radians:t,fillValue:r,center:a}=t;const s=n;var n=new cC(e.shape,r),[r,a]=Tp(a,e.shape[1],e.shape[2]),r=[[r,a,Math.sin(t),Math.cos(t)]];return s.runWebGLProgram(n,[e],e.dtype,r)}},Nw=iS({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),Iw={kernelName:Kn,backendName:"webgl",kernelFunc:Nw},xd=iS({opSnippet:"return inversesqrt(x);",cpuKernelImpl:oI}),Bw={kernelName:Xn,backendName:"webgl",kernelFunc:xd};class hC{constructor(e,t,n,r,a,s,i=0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;var o=hN(a.length),s=hN(s.length);let u="";1===n?u="i":2===n&&(u="i, j");n=`getIndices(${u})`;let l="";1===r?l="i":2===r&&(l="i, coords[1]");r=`getUpdates(${l})`;this.userCode=`
        ${o} strides = ${o}(${a});

        void main() {
          ${s} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${n});
              flattenedIndex += index * ${1<t?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${r};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}$d={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{indices:e,updates:a}=t,s=r["shape"],{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=$i(0,e,s),h=[c/u,u];return 0===c?n.makeTensorInfo(s,e.dtype):(c=$({inputs:{x:e},backend:n,attrs:{shape:[o,i]}}),e=$({inputs:{x:a},backend:n,attrs:{shape:[o,u]}}),a=n.makeTensorInfo([],"float32",new Float32Array([0])),u=new hC(o,i,c.shape.length,e.shape.length,l,h),o=n.runWebGLProgram(u,[e,c,a],e.dtype),i=$({inputs:{x:o},backend:n,attrs:{shape:s}}),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),i)}};class pC{constructor(t,n,e){this.variableNames=["c","a","b"],this.outputShape=n;let r,a;if(4<e)throw Error(`Where for rank ${e} is not yet supported`);if(1===e)a="resRC",r="resRC";else{var s=["resRC.x","resRC.y","resRC.z","resRC.w"];const i=[],o=[];for(let e=0;e<n.length;e++)o.push(""+s[e]),e<t&&i.push(""+s[e]);r=i.join(),a=o.join()}e=hN(e);this.userCode=`
      void main() {
        ${e} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}Ld={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{condition:e,t:r,e:a}=t,s=new pC(e.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(s,[e,r,a],Ya(r.dtype,a.dtype))}},Rp,Fp,Yw=iS({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n"}),ek={kernelName:Zn,backendName:"webgl",kernelFunc:Yw},nk=iS({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:uI}),ik={kernelName:rr,backendName:"webgl",kernelFunc:nk},ok=iS({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),lk={kernelName:nr,backendName:"webgl",kernelFunc:ok},gk=iS({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),xk={kernelName:er,backendName:"webgl",kernelFunc:gk},Ik=iS({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),Ek={kernelName:tr,backendName:"webgl",kernelFunc:Ik},tf=iS({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),tp={kernelName:ar,backendName:"webgl",kernelFunc:tf},Nf={kernelName:or,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e;var a=t["x"];const{blockShape:s,paddings:i}=r;z(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");e=s.reduce((e,t)=>e*t);const o=[[0,0]];o.push(...i);for(let e=1+s.length;e<a.shape.length;++e)o.push([0,0]);const u=[];var l=eC({inputs:{x:a},backend:n,attrs:{paddings:o,constantValue:0}}),c=Cp(l.shape,s,e,!1),h=Ep(c.length,s.length,!1),e=_p(l.shape,s,e,!1),c=$({inputs:{x:l},backend:n,attrs:{shape:c}}),h=wS({inputs:{x:c},backend:n,attrs:{perm:h}}),e=$({inputs:{x:h},backend:n,attrs:{shape:e}});return u.push(l),u.push(c),u.push(h),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),e}};$k={kernelName:cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{indices:e,values:r,denseShape:a,defaultValue:s}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:
         `+a.shape);if(2!==e.shape.length)throw new Error(`Indices must be a matrix, saw:
         `+e.shape);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:
         `+r.shape);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:
        `+s.shape);var i=n.readSync(e.dataId),o=n.readSync(r.dataId),a=n.readSync(a.dataId),s=n.readSync(s.dataId)[0];const[u,l,c,h,p]=hI(i,e.shape,e.dtype,o,r.dtype,a,s);return[n.makeTensorInfo(l,e.dtype,u),n.makeTensorInfo([l[0]],r.dtype,c),n.makeTensorInfo([h.length],"bool",new Uint8Array(h.map(e=>Number(e)))),n.makeTensorInfo([p.length],e.dtype,new Int32Array(p))]}};Fk={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{inputIndices:e,inputShape:r,newShape:a}=t;if(2!==e.shape.length)throw new Error("Input indices should be a matrix but received shape "+e.shape);if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Target shape should be a vector but received shape "+a.shape);var r=Array.from(n.readSync(r.dataId)),s=n.readSync(e.dataId),i=Array.from(n.readSync(a.dataId)),[s,r,i]=pI(s,e.shape,e.dtype,r,i);return[n.makeTensorInfo(r,e.dtype,s),n.makeTensorInfo([i.length],a.dtype,new Int32Array(i))]}};Ok={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{data:e,indices:r,segmentIds:a}=t;if(e.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape
              `+r.shape);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape
              `+a.shape);var s=n.readSync(e.dataId),r=n.readSync(r.dataId),a=n.readSync(a.dataId),[s,r]=dI(s,e.shape,e.dtype,r,a,!0);return n.makeTensorInfo(r,e.dtype,s)}};Lk={kernelName:dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e;var{data:e,indices:r,segmentIds:a}=t;if(e.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape
             `+r.shape);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape
             `+a.shape);var s=n.readSync(e.dataId),r=n.readSync(r.dataId),a=n.readSync(a.dataId),[s,r]=dI(s,e.shape,e.dtype,r,a);return n.makeTensorInfo(r,e.dtype,s)}};Pk={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{sparseIndices:e,sparseValues:a,defaultValue:s}=t,i=r["outputShape"],{sliceRank:o,numUpdates:u,strides:l,outputSize:c}=$i(0,e,i),u=new hC(u,o,e.shape.length,a.shape.length,l,[c,1],!1),l=$({inputs:{x:o=n.runWebGLProgram(u,[a,e,s],a.dtype)},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(o),l}};Uk={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:r,attrs:n}=e,a=t["x"];var{numOrSizeSplits:e,axis:s}=n;const i=Q(s,a.shape)[0],o=Kp(a,e,i),u=(s=a.shape.length,new Array(s).fill(0)),l=a.shape.slice();return o.map(e=>{const t=[...l];t[i]=e;var n=PS({inputs:{x:a},backend:r,attrs:{begin:u,size:t}});return u[i]+=e,n})}},Jk="return sqrt(x);",pf=iS({opSnippet:Jk,packedOpSnippet:Jk,cpuKernelImpl:fI}),t2={kernelName:sr,backendName:"webgl",kernelFunc:pf},d2={kernelName:gr,backendName:"webgl",kernelFunc:iS({opSnippet:"return x * x;"})},Zh="return (a - b) * (a - b);",bf=oS({opSnippet:Zh,packedOpSnippet:Zh}),ff={kernelName:mr,backendName:"webgl",kernelFunc:bf};Nw={kernelName:Rr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){return e=e.x,t=FI+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,t=new RI(e.shape,t),n.runWebGLProgram(t,[e],e.dtype)}};class dC{constructor(e,t,r){this.variableNames=["x"];var n=(this.outputShape=r).length,a=hN(r.length),s=hN(r.length);let i="";if(1===n)i="coords * strides + begin";else{let n=0;i=r.map((e,t)=>(n++,1===r.length?`coords * strides[${t}] + begin[${t}]`:`coords[${n-1}] * strides[${t}] + begin[${t}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}xd={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,a=t["x"];var{begin:e,end:s,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h}=r,{finalShapeSparse:e,finalShape:s,isIdentity:i,sliceDim0:o,isSimpleSlice:u,begin:l,end:c,strides:h}=Ki(a.shape,e,s,i,o,u,l,c,h);let p;return i?p=$({inputs:{x:a},backend:n,attrs:{shape:s}}):o||u?(z(1<=a.shape.length,()=>"Input must have rank at least 1, got: "+a.shape.length),i=Mi(l,c,h),o=PS({inputs:{x:a},backend:n,attrs:{begin:l,size:i}}),p=$({inputs:{x:o},backend:n,attrs:{shape:s}}),n.disposeIntermediateTensorInfo(o)):(u=n.shouldExecuteOnCPU([a]),p=u?(c=n.readSync(a.dataId),i=ei(a.shape,a.dtype,c),o=mI(e,i,h,l),n.makeTensorInfo(s,a.dtype,o.values)):(u=new dC(l,h,e),n.runWebGLProgram(u,[a],a.dtype))),c=$({inputs:{x:p},backend:n,attrs:{shape:s}}),n.disposeIntermediateTensorInfo(p),c}};Yw={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{separator:e,nGramWidths:a,leftPad:s,rightPad:i,padWidth:o,preserveShortSequences:u}=r,{data:l,dataSplits:c}=t,l=n.readSync(l.dataId),h=n.readSync(c.dataId),[l,h]=gI(l,h,e,a,s,i,o,u);return[n.makeTensorInfo([l.length],"string",l),n.makeTensorInfo(c.shape,"int32",h)]}};nk={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["skipEmpty"],{input:a,delimiter:s}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error("Input must be a vector, got shape: "+a.shape);if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+s.shape);var a=n.readSync(a.dataId),s=n.readSync(s.dataId)[0],[a,s,e]=yI(a,s,e),i=s.length;return[n.makeTensorInfo([i,2],"int32",a),n.makeTensorInfo([i],"string",s),n.makeTensorInfo([2],"int32",new Int32Array(e))]}};ok={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var e=r["numBuckets"],a=t["input"];if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(e<=0)throw new Error("Number of buckets must be at least 1");var s=n.readSync(a.dataId),s=vI(s,e);return n.makeTensorInfo(a.shape,"int32",s)}},gk=iS({opSnippet:"return tan(x);"}),Ik={kernelName:kr,backendName:"webgl",kernelFunc:gk},tf=iS({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`});class fC{constructor(t,n){this.variableNames=["A"];const r=new Array(t.length);for(let e=0;e<r.length;e++)r[e]=t[e]*n[e];this.outputShape=r,this.rank=r.length;var e=hN(this.rank),a=function(t){var e=t.length;if(5<e)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`
      void main() {
        ${e} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function mC(e){const{inputs:t,backend:n,attrs:r}=e;var e=t["x"],a=r["reps"];if("string"===e.dtype||5<e.shape.length){const i=n.readSync(e.dataId);var s="string"===e.dtype?i.map(e=>Da(e)):i,s=ei(e.shape,e.dtype,s),s=xI(s,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}s=new fC(e.shape,a);return n.runWebGLProgram(s,[e],e.dtype)}class gC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class yC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function vC(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function bC(e){let t=1;for(;t<e;)t*=2;return t}class xC{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;s="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${s} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}class wC{constructor(e,t){this.variableNames=["x","segmentIds"];var n=e.windowSize,r=e.batchSize,a=e.inSize,e=e.numSegments,s=e*Math.ceil(a/n),r=(this.outputShape=[r,s],4*Math.floor(n/4)),s=n%4,i=`
        sumValue += dot(values, segFilter);
    `;let o="",u=(0<a%n&&(o=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),"");0<a%n&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${o}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${u}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${e})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${e})));

        float sumValue = 0.0;

        for (int i = 0; i < ${r}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${i}
        }

        int inIdx = inOffset + ${r};
        if (${1==s}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${i}
        } else if (${2==s}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${i}
        } else if (${3==s}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${i}
        }
        setOutput(sumValue);
      }
    `}}for(const aR of[Fd,Pd,hf,yf,Tf,Nh,Rh,gd,bd,np,Id,Cd,zd,Jd,sf,cf,gf,a,kd,Ed,Md,Kd,rf,wd,kw,Cw,xf,sp,Ew,_w,md,$w,vd,Rw,Lw,zw,Pw,Ww,Vw,Uw,Nd,Sd,ep,Gw,Rd,jw,Hw,qw,wf,Dd,Kw,Xw,Jw,Zw,Qw,Wd,rk,ak,sk,uk,Hd,ck,hk,fk,Xd,Yd,vk,Qd,Xh,wk,vh,Tk,kf,_k,Yh,Ak,If,Sf,Rk,Dk,Mk,af,Bk,Wk,of,Vk,Gk,uf,dk,Hk,qk,Kk,Xk,Yk,Zk,Qk,mf,a2,xh,vf,Tw,s2,i2,df,o2,l2,ef,p2,y2,ap,Nk,Cf,Ef,e2,_f,Zd,rp,yd,bh,wh,Qh,Od,Ud,nf,Iw,Bw,$d,Ld,ek,ik,lk,xk,Ek,Gd,r2,tp,Nf,$k,Fk,Ok,Lk,Pk,Uk,t2,d2,ff,Nw,xd,Yw,nk,ok,n2,lf,Ik,{kernelName:Nr,backendName:"webgl",kernelFunc:tf},{kernelName:Ir,backendName:"webgl",kernelFunc:mC},{kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:s,attrs:n}=e;var e=t["x"],{k:r,sorted:a}=n,i=N.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),o=N.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD");const u=e.shape,l=u[u.length-1];if(s.shouldExecuteOnCPU([e])||l<i||o<r)return i=s.readSync(e.dataId),[o,i]=wI(i,u,e.dtype,r,a),[s.makeTensorInfo(o.shape,o.dtype,o.values),s.makeTensorInfo(i.shape,i.dtype,i.values)];if(0===r)return u[u.length-1]=0,[s.makeTensorInfo(u,e.dtype,[]),s.makeTensorInfo(u,"int32",[])];if(1===l)return[e,CT({attrs:{shape:u,dtype:"int32",value:0},backend:s})];var a=s.texData.get(e.dataId),i=(o=null!==a&&a.isPacked)?s.unpackTensor(e):e,c=U(u)/l;const h=$({inputs:{x:i},attrs:{shape:[c,l]},backend:s});o&&vC(s,i);var p=bC(r),d=bC(l);let f=null;const m=()=>null===f?[h,h]:[h,f];var g=(e,t,n)=>{var r=m(),n=new gC(n),a=null===f?1:0,a=[[l],[a],[Number.NEGATIVE_INFINITY],[e],[t]],e=f;f=s.runWebGLProgram(n,r,"int32",a),vC(s,e)};for(let t=1;t<p;t*=2){var y=2*t;for(let e=t;1<=e;e/=2)g(y,e,[c,d])}for(let e=d;e>p;e/=2){const t=m();var v=new yC([c,e/2]),b=null===f?1:0,b=[[l],[b],[p]];const w=f;f=s.runWebGLProgram(v,t,"int32",b),vC(s,w);var v=p/2,x=2*v;for(let e=v;1<=e;e/=2)g(x,e,f.shape)}let w=f;f=PS({inputs:{x:f},backend:s,attrs:{begin:0,size:[c,r]}}),vC(s,w),a=DT({inputs:{x:h,indices:f},backend:s,attrs:{axis:1,batchDims:1}}),vC(s,h);const k=u.slice(0,-1);return k.push(r),f=$({inputs:{x:w=f},attrs:{shape:k},backend:s}),vC(s,w),a=$({inputs:{x:e=a},attrs:{shape:k},backend:s}),vC(s,e),[a,f]}},{kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;var{image:e,transforms:a}=t,{interpolation:s,fillMode:i,fillValue:o,outputShape:u}=r,[l,c,h,p]=e.shape,[u,d]=null!=u?u:[c,h],l=[l,u,d,p],u=new xC(c,h,s,i,o,l);return n.runWebGLProgram(u,[e,a],"float32")}},Td,{kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e;var e=n["axis"],a=t["x"],s=(H2(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded"),r.readSync(a.dataId)),{outputValues:s,outputShape:e,indices:i}=NI(s,e,a.shape,a.dtype);return[r.makeTensorInfo(e,a.dtype,s),r.makeTensorInfo([i.length],"int32",i)]}},{kernelName:_r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;e=t.value;let a=r["axis"];a<0&&(a+=e.shape.length);const s=e;var i=s.shape.length,e=e.shape[a];const o=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(o[u++]=s.shape[e]);const l=[],c=new Array(i).fill(0),h=s.shape.slice(),p=(h[a]=1,new Array(e));for(let e=0;e<p.length;e++){c[a]=e;var d=PS({inputs:{x:s},backend:n,attrs:{begin:c,size:h}}),f=$({inputs:{x:d},backend:n,attrs:{shape:o}});p[e]=f,l.push(d)}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},{kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:u,attrs:n}=e;var{x:e,segmentIds:r}=t,a=n["numSegments"],s=e.shape.length;const l=[];let i=0;var o=hl([i],s);let c=e;null!=o&&(c=wS({inputs:{x:e},backend:u,attrs:{perm:o}}),l.push(c),i=dl(1,s)[0]);var s=ud(c.shape,i,a),h=U([c.shape[i]]),h=$({inputs:{x:c},backend:u,attrs:{shape:[-1,h]}}),e=(l.push(h),Ja(e.dtype));const p=(e,t,n,r,a)=>{var s=e.shape[0],i=e.shape[1],o=od(i,a),s={windowSize:o,inSize:i,batchSize:s,numSegments:a},s=new wC(s,t),s=u.compileAndRun(s,[e,n],r);if(l.push(s),s.shape[1]===a)return s;e=tC({backend:u,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),n=mC({inputs:{x:e},backend:u,attrs:{reps:[i/o]}}),l.push(e),l.push(n),i=p(s,t,n,r,a);return i};let d=h=$({inputs:{x:p(h,"unsortedSegmentSum",r,e,a)},backend:u,attrs:{shape:s}});return null!=o&&(l.push(h),r=pl(o),d=wS({inputs:{x:d},backend:u,attrs:{perm:r}})),l.forEach(e=>u.disposeIntermediateTensorInfo(e)),d}},u2])Gr(aR);Jk={"tfjs-core":"3.15.0","tfjs-backend-cpu":"3.15.0","tfjs-backend-webgl":"3.15.0","tfjs-data":"3.15.0","tfjs-layers":fy,"tfjs-converter":"3.15.0",tfjs:"3.15.0"},pf=Object.freeze({__proto__:null,data:Jh,version:Jk,AdadeltaOptimizer:pp,AdagradOptimizer:dp,AdamOptimizer:fp,AdamaxOptimizer:mp,MomentumOptimizer:yp,Optimizer:hp,OptimizerConstructors:bp,RMSPropOptimizer:vp,SGDOptimizer:gp,Tensor:v,TensorBuffer:ja,Variable:Ka,get Rank(){return Oa},sumOutType:Ja,upcastType:Ya,get Reduction(){return Uh},customGrad:Qu,grad:function(a){return z(ge(a),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const n=S(e,"x","tf.grad","string_or_numeric"),r=null!=t?S(t,"dy","tf.grad"):null;return I.tidy(()=>{var{value:e,grads:t}=I.gradients(()=>a(n),[n],r);return null!=r&&G(e.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),el(t),t[0]})}},grads:function(a){return z(ge(a),()=>"The f passed in grads(f) must be a function"),(e,t)=>{z(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const n=ms(e,"args","tf.grads","string_or_numeric"),r=null!=t?S(t,"dy","tf.grads"):null;return I.tidy(()=>{var{value:e,grads:t}=I.gradients(()=>a(...n),n,r);return null!=r&&G(e.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),el(t),t})}},valueAndGrad:function(r){return z(ge(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{z(e instanceof v,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),z(null==t||t instanceof v,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");var{grads:t,value:n}=I.gradients(()=>r(e),[e],t);return el(t),{grad:t[0],value:n}}},valueAndGrads:function(r){return z(ge(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{z(Array.isArray(e)&&e.every(e=>e instanceof v),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),z(null==t||t instanceof v,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");var n=I.gradients(()=>r(...e),e,t);return null!=t&&G(n.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),el(n.grads),n}},variableGrads:Zu,Environment:Ce,env:_e,get ENV(){return N},nextFrame:kp,KernelBackend:p,DataStorage:h,abs:po,acos:fo,acosh:mo,add:E,addN:go,all:yo,any:vo,argMax:bo,argMin:xo,asin:wo,asinh:ko,atan:No,atan2:Io,atanh:So,avgPool:Bo,avgPool3d:Wo,basicLSTMCell:Ho,batchToSpaceND:qo,batchNorm:Ko,batchNorm2d:Xo,batchNorm3d:Yo,batchNorm4d:Jo,bincount:Zo,broadcastArgs:Qo,broadcastTo:eu,buffer:ei,cast:x,ceil:tu,clipByValue:nu,clone:ti,complex:gs,concat:Vo,concat1d:ru,concat2d:au,concat3d:su,concat4d:iu,conv1d:uu,conv2d:ou,conv2dTranspose:cu,conv3d:hu,conv3dTranspose:du,cos:fu,cosh:mu,cumprod:gu,cumsum:yu,denseBincount:vu,depthToSpace:bu,depthwiseConv2d:xu,diag:wu,dilation2d:ku,div:y,divNoNan:Tu,dot:Cu,einsum:Eu,elu:_u,equal:Nu,erf:Au,exp:$u,expandDims:Ru,expm1:Fu,eye:Ou,fill:Mu,floor:Lu,floorDiv:ho,gather:zu,greater:Pu,greaterEqual:Bu,imag:Wu,isFinite:Vu,isInf:Uu,isNaN:Gu,leakyRelu:ju,less:Hu,lessEqual:qu,linspace:Ku,localResponseNormalization:Xu,log:Yu,log1p:Ju,logSigmoid:rl,logSoftmax:sl,logSumExp:fl,logicalAnd:ml,logicalNot:gl,logicalOr:yl,logicalXor:vl,matMul:T,max:al,maxPool:bl,maxPool3d:xl,maxPoolWithArgmax:wl,maximum:kl,mean:Nl,meshgrid:function(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(n+" is not a valid third argument to meshgrid");if(void 0===e)return[];let r=S(e,"x","meshgrid",e instanceof v?e.dtype:"float32");if(void 0===t)return[r];let a=S(t,"y","meshgrid",t instanceof v?t.dtype:"float32");return e=U(r.shape),t=U(a.shape),"xy"===n?(r=M(r,[1,-1]),a=M(a,[-1,1]),[T(Sl([t,1],r.dtype),r),T(a,Sl([1,e],a.dtype))]):(r=M(r,[-1,1]),a=M(a,[1,-1]),[T(r,Sl([1,t],r.dtype)),T(Sl([e,1],a.dtype),a)])},min:Tl,minimum:Cl,mirrorPad:El,mod:_l,moments:$l,mul:w,multiRNNCell:Rl,multinomial:Fl,neg:tl,notEqual:Dl,oneHot:yi,ones:Sl,onesLike:Ol,outerProduct:Ml,pad:Ll,pad1d:zl,pad2d:Pl,pad3d:Bl,pad4d:Wl,pool:Ul,pow:Gl,prelu:jl,print:ni,prod:Hl,rand:ql,randomGamma:Xl,randomNormal:sc,randomUniform:ic,range:oc,real:uc,reciprocal:lc,relu:cc,relu6:hc,reshape:M,reverse:pc,reverse1d:Yl,reverse2d:Jl,reverse3d:Zl,reverse4d:Ql,round:dc,rsqrt:fc,scalar:P,selu:mc,separableConv2d:gc,setdiff1dAsync:yc,sigmoid:Uo,sign:vc,sin:bc,sinh:xc,slice:Go,slice1d:wc,slice2d:kc,slice3d:Nc,slice4d:Ic,softmax:Sc,softplus:nl,spaceToBatchND:Vl,fft:Tc,ifft:Cc,irfft:Ec,rfft:Ac,split:_c,sqrt:$c,square:Al,squaredDifference:Rc,squeeze:Fc,stack:Dc,step:Oc,stridedSlice:Mc,sub:k,sum:b,tan:Lc,tanh:jo,tensor:vs,tensor1d:zc,tensor2d:Pc,tensor3d:wi,tensor4d:Bc,tensor5d:function(e,t,n){if(j(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");var r=ds(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ys(e,t,r,n)},tensor6d:function(e,t,n){if(j(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");var r=ds(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ys(e,t=t||r,r,n)},tile:Du,topk:Wc,truncatedNormal:Vc,unique:Uc,unsortedSegmentSum:Gc,unstack:jc,variable:Hc,where:Iu,whereAsync:Kc,zeros:Il,zerosLike:Su,op:n,OP_SCOPE_SUFFIX:"__op",booleanMaskAsync:Xc,transpose:vi,norm:Yc,movingAverage:tc,scatterND:Jc,sparseToDense:Zc,gatherND:Qc,dropout:eh,enclosingPowerOfTwo:th,cosineWindow:nh,inTopKAsync:rh,image:op,linalg:up,losses:yh,spectral:ip,fused:ec,signal:fh,sparse:lp,string:cp,train:xp,enableProdMode:function(){N.set("PROD",!0)},enableDebugMode:function(){N.set("DEBUG",!0)},disableDeprecationWarnings:function(){N.set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")},deprecationWarn:function(e){N.getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")},disposeVariables:function(){I.disposeVariables()},engine:io,memory:oo,profile:function(e){return I.profile(e)},tidy:O,dispose:C,keep:uo,time:function(e){return I.time(e)},setBackend:function(e){return I.setBackend(e)},ready:function(){return I.ready()},getBackend:function(){return I.backendName},removeBackend:function(e){I.removeBackend(e)},findBackend:function(e){return I.findBackend(e)},findBackendFactory:function(e){return I.findBackendFactory(e)},registerBackend:lo,backend:co,setPlatform:function(e,t){N.setPlatform(e,t)},getKernel:Wr,getGradient:Vr,getKernelsForBackend:Ur,registerKernel:Gr,registerGradient:jr,unregisterKernel:function(e,t){var n=t+"_"+e;if(!Pr.has(n))throw new Error(`The kernel '${e}' for backend `+`'${t}' is not registered`);Pr.delete(n)},unregisterGradient:function(e){if(!Br.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Br.delete(e)},copyRegisteredKernels:function(e,t){const n=Ur(e);n.forEach(e=>{Gr(Object.assign({},e,{backendName:t}))})},Abs:Fe,Acos:De,Acosh:Oe,Add:Me,AddN:Le,All:ze,Any:Pe,ArgMax:Be,ArgMin:We,Asin:Ve,Asinh:Ue,Atan:Ge,Atanh:je,Atan2:He,AvgPool:qe,AvgPoolGrad:Ke,AvgPool3D:Xe,AvgPool3DGrad:Ye,BatchMatMul:Je,BatchToSpaceND:Ze,Bincount:Qe,BroadcastTo:o,BroadcastArgs:et,Cast:tt,Ceil:nt,ClipByValue:rt,Complex:at,ComplexAbs:st,Concat:it,Conv2D:ot,Conv2DBackpropFilter:ut,Conv2DBackpropInput:lt,Conv3D:ct,Conv3DBackpropFilterV2:ht,Conv3DBackpropInputV2:pt,Cos:dt,Cosh:ft,Cumprod:mt,Cumsum:gt,CropAndResize:yt,DenseBincount:vt,DepthToSpace:bt,DepthwiseConv2dNative:xt,DepthwiseConv2dNativeBackpropFilter:wt,DepthwiseConv2dNativeBackpropInput:kt,Diag:Nt,Dilation2D:It,Dilation2DBackpropInput:St,Dilation2DBackpropFilter:Tt,RealDiv:Ct,Einsum:Et,Elu:_t,EluGrad:At,Erf:$t,Equal:Rt,Exp:Ft,ExpandDims:Dt,Expm1:Ot,FFT:Mt,Fill:Lt,FlipLeftRight:zt,Floor:Pt,FloorDiv:Bt,FusedBatchNorm:Wt,GatherV2:Vt,GatherNd:Ut,Greater:Gt,GreaterEqual:jt,Identity:Ht,IFFT:qt,Imag:Kt,IsFinite:Xt,IsInf:Yt,IsNan:Jt,LeakyRelu:Zt,Less:Qt,LessEqual:en,LinSpace:tn,Log:nn,Log1p:rn,LogicalAnd:an,LogicalNot:sn,LogicalOr:on,LogSoftmax:un,LRN:ln,LRNGrad:cn,Max:hn,Maximum:pn,MaxPool:dn,MaxPoolGrad:fn,MaxPool3D:mn,MaxPool3DGrad:gn,MaxPoolWithArgmax:yn,Mean:vn,Min:bn,Minimum:xn,MirrorPad:wn,Mod:kn,Multinomial:Nn,Multiply:In,Neg:Sn,NotEqual:Tn,NonMaxSuppressionV3:Cn,NonMaxSuppressionV4:En,NonMaxSuppressionV5:_n,OnesLike:An,OneHot:$n,Pack:Rn,PadV2:Fn,Pool:"Pool",Pow:Dn,Prelu:On,Prod:Mn,Range:Ln,Real:zn,Reciprocal:Pn,Relu:Bn,Reshape:Wn,ResizeNearestNeighbor:Vn,ResizeNearestNeighborGrad:Un,ResizeBilinear:Gn,ResizeBilinearGrad:jn,Relu6:Hn,Reverse:qn,Round:Kn,Rsqrt:Xn,ScatterNd:Yn,Select:Jn,Selu:Zn,Slice:Qn,Sin:er,Sinh:tr,Sign:nr,Sigmoid:rr,Softplus:ar,Sqrt:sr,Sum:ir,SpaceToBatchND:or,SplitV:ur,Softmax:lr,SparseFillEmptyRows:cr,SparseReshape:hr,SparseSegmentMean:pr,SparseSegmentSum:dr,SparseToDense:fr,SquaredDifference:mr,Square:gr,StridedSlice:yr,StringNGrams:vr,StringSplit:br,StringToHashBucketFast:xr,Sub:wr,Tan:kr,Tanh:Nr,Tile:Ir,TopK:Sr,Transform:Tr,Transpose:Cr,Unique:Er,Unpack:_r,UnsortedSegmentSum:Ar,ZerosLike:$r,Step:Rr,FromPixels:Fr,RotateWithOffset:Dr,_FusedMatMul:Or,FusedConv2D:Mr,FusedDepthwiseConv2D:Lr,version_core:"3.15.0",browser:Ti,io:Hs,math:Ps,serialization:Qi,test_util:so,util:e,backend_util:Dh,broadcast_util:ri,tensor_util:Hr,slice_util:Yi,gather_util:Ei,scatter_util:Ri,device_util:hs,kernel_impls:zh,CallbackList:Dg,CustomCallback:Lg,History:Mg,Callback:e0,callbacks:Kh,EarlyStopping:r0,InputSpec:Ng,SymbolicTensor:Ig,LayersModel:zy,input:Vy,loadLayersModel:function(e,t){return By(e,t=null==t?{}:t)},model:function(e){return new zy(e)},registerCallbackConstructor:function(e,t){Pg.registerCallbackConstructor(e,t)},sequential:function(e){return new Wy(e)},RNN:Bv,Sequential:Wy,LayerVariable:xg,version_layers:fy,constraints:Ph,initializers:Bh,layers:Wh,metrics:Gh,models:Hh,regularizers:qh,GraphModel:fx,loadGraphModel:async function(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");(t=null==t?{}:t).fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new fx(e,t);return await n.load(),n},deregisterOp:function(e){delete i0[e]},registerOp:function(e,t){t={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t},i0[e]=t},version_converter:"3.15.0"});var kC=function(e,t){return(kC=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function i(e,t){function n(){this.constructor=e}kC(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var NC=function(){return(NC=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function c(s,i,o,u){return new(o=o||Promise)(function(e,t){function n(e){try{a(u.next(e))}catch(e){t(e)}}function r(e){try{a(u.throw(e))}catch(e){t(e)}}function a(t){t.done?e(t.value):new o(function(e){e(t.value)}).then(n,r)}a((u=u.apply(s,i||[])).next())})}function R(r,a){var s,i,o,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]},e={next:t(0),throw:t(1),return:t(2)};return"function"==typeof Symbol&&(e[Symbol.iterator]=function(){return this}),e;function t(n){return function(e){var t=[n,e];if(s)throw new TypeError("Generator is already executing.");for(;u;)try{if(s=1,i&&(o=2&t[0]?i.return:t[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,t[1])).done)return o;switch(i=0,(t=o?[2&t[0],o.value]:t)[0]){case 0:case 1:o=t;break;case 4:return u.label++,{value:t[1],done:!1};case 5:u.label++,i=t[1],t=[0];continue;case 7:t=u.ops.pop(),u.trys.pop();continue;default:if(!(o=0<(o=u.trys).length&&o[o.length-1])&&(6===t[0]||2===t[0])){u=0;continue}if(3===t[0]&&(!o||t[1]>o[0]&&t[1]<o[3])){u.label=t[1];break}if(6===t[0]&&u.label<o[1]){u.label=o[1],o=t;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(t);break}o[2]&&u.ops.pop(),u.trys.pop();continue}t=a.call(r,u)}catch(e){t=[6,e],i=0}finally{s=o=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}}}function IC(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;for(var r=Array(e),a=0,t=0;t<n;t++)for(var s=arguments[t],i=0,o=s.length;i<o;i++,a++)r[a]=s[i];return r}Object.defineProperty(TC.prototype,"width",{get:function(){return this._width},enumerable:!1,configurable:!0}),Object.defineProperty(TC.prototype,"height",{get:function(){return this._height},enumerable:!1,configurable:!0}),TC.prototype.reverse=function(){return new TC(1/this.width,1/this.height)};var SC=TC;function TC(e,t){if(!zC(e)||!zC(t))throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have "+JSON.stringify({width:e,height:t}));this._width=e,this._height=t}function CC(e,t){return e instanceof v&&e.shape.length===t}function EC(e){return CC(e,2)}function _C(e){return CC(e,3)}function AC(e){return CC(e,4)}function $C(e){return e%1!=0}function RC(e){return e%2==0}function FC(e,t){void 0===t&&(t=2);t=Math.pow(10,t);return Math.floor(e*t)/t}function DC(e){return e&&e.width&&e.height}function OC(e,t){var n=e.width,e=e.height,t=t/Math.max(e,n);return new SC(Math.round(n*t),Math.round(e*t))}function MC(e){return e.reduce(function(e,t){return e.add(t)},new BC(0,0)).div(new BC(e.length,e.length))}function LC(e,n,r){return Array(e).fill(0).map(function(e,t){return n+t*r})}function zC(e){return!!e&&e!==1/0&&e!==-1/0&&!isNaN(e)||0===e}function PC(e){return zC(e)&&0<=e&&e<=1}var Zh=Object.freeze({__proto__:null,isTensor:CC,isTensor1D:function(e){return CC(e,1)},isTensor2D:EC,isTensor3D:_C,isTensor4D:AC,isFloat:$C,isEven:RC,round:FC,isDimensions:DC,computeReshapedDimensions:OC,getCenterPoint:MC,range:LC,isValidNumber:zC,isValidProbablitiy:PC}),BC=(Object.defineProperty(WC.prototype,"x",{get:function(){return this._x},enumerable:!1,configurable:!0}),Object.defineProperty(WC.prototype,"y",{get:function(){return this._y},enumerable:!1,configurable:!0}),WC.prototype.add=function(e){return new WC(this.x+e.x,this.y+e.y)},WC.prototype.sub=function(e){return new WC(this.x-e.x,this.y-e.y)},WC.prototype.mul=function(e){return new WC(this.x*e.x,this.y*e.y)},WC.prototype.div=function(e){return new WC(this.x/e.x,this.y/e.y)},WC.prototype.abs=function(){return new WC(Math.abs(this.x),Math.abs(this.y))},WC.prototype.magnitude=function(){return Math.sqrt(Math.pow(this.x,2)+Math.pow(this.y,2))},WC.prototype.floor=function(){return new WC(Math.floor(this.x),Math.floor(this.y))},WC);function WC(e,t){this._x=e,this._y=t}UC.isRect=function(e){return!!e&&[e.x,e.y,e.width,e.height].every(zC)},UC.assertIsValidBox=function(e,t,n){if(void 0===n&&(n=!1),!UC.isRect(e))throw new Error(t+" - invalid box: "+JSON.stringify(e)+", expected object with properties x, y, width, height");if(!n&&(e.width<0||e.height<0))throw new Error(t+" - width ("+e.width+") and height ("+e.height+") must be positive numbers")},Object.defineProperty(UC.prototype,"x",{get:function(){return this._x},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"y",{get:function(){return this._y},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"width",{get:function(){return this._width},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"height",{get:function(){return this._height},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"left",{get:function(){return this.x},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"top",{get:function(){return this.y},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"right",{get:function(){return this.x+this.width},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"bottom",{get:function(){return this.y+this.height},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"area",{get:function(){return this.width*this.height},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"topLeft",{get:function(){return new BC(this.left,this.top)},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"topRight",{get:function(){return new BC(this.right,this.top)},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"bottomLeft",{get:function(){return new BC(this.left,this.bottom)},enumerable:!1,configurable:!0}),Object.defineProperty(UC.prototype,"bottomRight",{get:function(){return new BC(this.right,this.bottom)},enumerable:!1,configurable:!0}),UC.prototype.round=function(){var e=[this.x,this.y,this.width,this.height].map(function(e){return Math.round(e)});return new UC({x:e[0],y:e[1],width:e[2],height:e[3]})},UC.prototype.floor=function(){var e=[this.x,this.y,this.width,this.height].map(function(e){return Math.floor(e)});return new UC({x:e[0],y:e[1],width:e[2],height:e[3]})},UC.prototype.toSquare=function(){var e=this.x,t=this.y,n=this.width,r=this.height,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new UC({x:e,y:t,width:n,height:r})},UC.prototype.rescale=function(e){var t=DC(e)?e.width:e,e=DC(e)?e.height:e;return new UC({x:this.x*t,y:this.y*e,width:this.width*t,height:this.height*e})},UC.prototype.pad=function(e,t){e=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new UC({x:e[0],y:e[1],width:e[2],height:e[3]})},UC.prototype.clipAtImageBorders=function(e,t){var n=this.x,r=this.y,a=this.right,s=this.bottom,n=Math.max(n,0),r=Math.max(r,0),s=s-r;return new UC({x:n,y:r,width:Math.min(a-n,e-n),height:Math.min(s,t-r)}).floor()},UC.prototype.shift=function(e,t){var n=this.width,r=this.height;return new UC({x:this.x+e,y:this.y+t,width:n,height:r})},UC.prototype.padAtBorders=function(e,t){var n=this.width+1,r=this.height+1,a=n,s=r,i=this.left,o=this.top,u=this.right,l=this.bottom;return t<u&&(a=-u+t+n,u=t),e<l&&(s=-l+e+r,l=e),i<1&&(s=2-i,i=1),o<1&&(s=2-o,o=1),{dy:1,edy:s,dx:1,edx:a,y:o,ey:l,x:i,ex:u,w:n,h:r}},UC.prototype.calibrate=function(e){return new UC({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()};var VC=UC;function UC(e,t){void 0===t&&(t=!0);var e=e||{},n=[e.left,e.top,e.right,e.bottom].every(zC),r=[e.x,e.y,e.width,e.height].every(zC);if(!r&&!n)throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have "+JSON.stringify(e));var n=r?[e.x,e.y,e.width,e.height]:[e.left,e.top,e.right-e.left,e.bottom-e.top],r=n[0],e=n[1],a=n[2],n=n[3];UC.assertIsValidBox({x:r,y:e,width:a,height:n},"Box.constructor",t),this._x=r,this._y=e,this._width=a,this._height=n}i(HC,GC=VC);var GC,jC=HC;function HC(e,t,n,r,a){return GC.call(this,{left:e,top:t,right:n,bottom:r},a=void 0===a?!1:a)||this}Object.defineProperty(KC.prototype,"score",{get:function(){return this._score},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"classScore",{get:function(){return this._classScore},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"className",{get:function(){return this._className},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"box",{get:function(){return this._box},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"imageDims",{get:function(){return this._imageDims},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"imageWidth",{get:function(){return this.imageDims.width},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"imageHeight",{get:function(){return this.imageDims.height},enumerable:!1,configurable:!0}),Object.defineProperty(KC.prototype,"relativeBox",{get:function(){return new VC(this._box).rescale(this.imageDims.reverse())},enumerable:!1,configurable:!0}),KC.prototype.forSize=function(e,t){return new KC(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})};var qC=KC;function KC(e,t,n,r,a){this._imageDims=new SC(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new VC(r).rescale(this._imageDims)}i(JC,XC=qC),JC.prototype.forSize=function(e,t){e=XC.prototype.forSize.call(this,e,t);return new JC(e.score,e.relativeBox,e.imageDims)};var XC,YC=JC;function JC(e,t,n){return XC.call(this,e,e,"",t,n)||this}function ZC(e,t,n){void 0===n&&(n=!0);var r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left))*Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top));return n?r/(e.area+t.area-r):r/Math.min(e.area,t.area)}function QC(e){var t=e.map(function(e){return e.x}),e=e.map(function(e){return e.y}),n=t.reduce(function(e,t){return t<e?t:e},1/0),r=e.reduce(function(e,t){return t<e?t:e},1/0),t=t.reduce(function(e,t){return e<t?t:e},0),e=e.reduce(function(e,t){return e<t?t:e},0);return new jC(n,r,t,e)}function eE(i,e,o,u){void 0===u&&(u=!0);for(var l=e.map(function(e,t){return{score:e,boxIndex:t}}).sort(function(e,t){return e.score-t.score}).map(function(e){return e.boxIndex}),c=[];0<l.length;)!function(){for(var e=l.pop(),t=(c.push(e),l),n=[],r=0;r<t.length;r++){var a=t[r],s=i[e],a=i[a];n.push(ZC(s,a,u))}l=l.filter(function(e,t){return n[t]<=o})}();return c}function tE(r,a){return O(function(){var e=a[0],t=a[1],n=a[2],e=Mu(IC(r.shape.slice(0,3),[1]),e),t=Mu(IC(r.shape.slice(0,3),[1]),t),n=Mu(IC(r.shape.slice(0,3),[1]),n),e=Vo([e,t,n],3);return k(r,e)})}function nE(i,o){return void 0===o&&(o=!1),O(function(){var e=i.shape.slice(1),t=e[0],e=e[1];if(t===e)return i;function n(e){var t=i.shape.slice();return t[s]=e,Mu(t,0)}var r=Math.abs(t-e),a=Math.round(r*(o?.5:1)),s=e<t?2:1,e=n(a),t=r-e.shape[s],a=[o&&t?n(t):null,i,e].filter(function(e){return!!e}).map(function(e){return e.toFloat()});return Vo(a,s)})}function rE(e){return 1/(1+Math.exp(-e))}i(iE,aE=VC);var aE,sE=iE;function iE(e,t,n,r,a){return aE.call(this,{x:e,y:t,width:n,height:r},a=void 0===a?!1:a)||this}Object.defineProperty(uE.prototype,"shift",{get:function(){return new BC(this._shift.x,this._shift.y)},enumerable:!1,configurable:!0}),Object.defineProperty(uE.prototype,"imageWidth",{get:function(){return this._imgDims.width},enumerable:!1,configurable:!0}),Object.defineProperty(uE.prototype,"imageHeight",{get:function(){return this._imgDims.height},enumerable:!1,configurable:!0}),Object.defineProperty(uE.prototype,"positions",{get:function(){return this._positions},enumerable:!1,configurable:!0}),Object.defineProperty(uE.prototype,"relativePositions",{get:function(){var t=this;return this._positions.map(function(e){return e.sub(t._shift).div(new BC(t.imageWidth,t.imageHeight))})},enumerable:!1,configurable:!0}),uE.prototype.forSize=function(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})},uE.prototype.shiftBy=function(e,t){return new this.constructor(this.relativePositions,this._imgDims,new BC(e,t))},uE.prototype.shiftByPoint=function(e){return this.shiftBy(e.x,e.y)},uE.prototype.align=function(e,t){if(void 0===t&&(t={}),e)return e=e instanceof YC?e.box.floor():new VC(e),this.shiftBy(e.x,e.y).align(null,t);e=Object.assign({},{useDlibAlignment:!1,minBoxPadding:.2},t),t=e.useDlibAlignment,e=e.minBoxPadding;return t?this.alignDlib():this.alignMinBbox(e)},uE.prototype.alignDlib=function(){function e(e){return a.sub(e).magnitude()}var t=this.getRefPointsForAlignment(),n=t[0],r=t[1],a=t[2],n=(e(n)+e(r))/2,r=Math.floor(n/.45),n=MC(t),t=Math.floor(Math.max(0,n.x-.5*r)),n=Math.floor(Math.max(0,n.y-.43*r));return new sE(t,n,Math.min(r,this.imageWidth+t),Math.min(r,this.imageHeight+n))},uE.prototype.alignMinBbox=function(e){var t=QC(this.positions);return t.pad(t.width*e,t.height*e)},uE.prototype.getRefPointsForAlignment=function(){throw new Error("getRefPointsForAlignment not implemented by base class")};var oE=uE;function uE(e,t,n){void 0===n&&(n=new BC(0,0));var r=t.width,a=t.height;this._imgDims=new SC(r,a),this._shift=n,this._positions=e.map(function(e){return e.mul(new BC(r,a)).add(n)})}i(cE,lE=oE),cE.prototype.getRefPointsForAlignment=function(){var e=this.positions;return[e[0],e[1],MC([e[3],e[4]])]};var lE,bf=cE;function cE(){return null!==lE&&lE.apply(this,arguments)||this}i(dE,hE=oE),dE.prototype.getJawOutline=function(){return this.positions.slice(0,17)},dE.prototype.getLeftEyeBrow=function(){return this.positions.slice(17,22)},dE.prototype.getRightEyeBrow=function(){return this.positions.slice(22,27)},dE.prototype.getNose=function(){return this.positions.slice(27,36)},dE.prototype.getLeftEye=function(){return this.positions.slice(36,42)},dE.prototype.getRightEye=function(){return this.positions.slice(42,48)},dE.prototype.getMouth=function(){return this.positions.slice(48,68)},dE.prototype.getRefPointsForAlignment=function(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(MC)};var hE,pE=dE;function dE(){return null!==hE&&hE.apply(this,arguments)||this}Object.defineProperty(mE.prototype,"label",{get:function(){return this._label},enumerable:!1,configurable:!0}),Object.defineProperty(mE.prototype,"distance",{get:function(){return this._distance},enumerable:!1,configurable:!0}),mE.prototype.toString=function(e){return""+this.label+((e=void 0===e?!0:e)?" ("+FC(this.distance)+")":"")};var fE=mE;function mE(e,t){this._label=e,this._distance=t}i(vE,gE=VC),vE.assertIsValidLabeledBox=function(e,t){if(VC.assertIsValidBox(e,t),!zC(e.label))throw new Error(t+" - expected property label ("+e.label+") to be a number")},Object.defineProperty(vE.prototype,"label",{get:function(){return this._label},enumerable:!1,configurable:!0});var gE,yE=vE;function vE(e,t){e=gE.call(this,e)||this;return e._label=t,e}Object.defineProperty(xE.prototype,"label",{get:function(){return this._label},enumerable:!1,configurable:!0}),Object.defineProperty(xE.prototype,"descriptors",{get:function(){return this._descriptors},enumerable:!1,configurable:!0}),xE.prototype.toJSON=function(){return{label:this.label,descriptors:this.descriptors.map(function(e){return Array.from(e)})}},xE.fromJSON=function(e){var t=e.descriptors.map(function(e){return new Float32Array(e)});return new xE(e.label,t)};var bE=xE;function xE(e,t){if("string"!=typeof e)throw new Error("LabeledFaceDescriptors - constructor expected label to be a string");if(!Array.isArray(t)||t.some(function(e){return!(e instanceof Float32Array)}))throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array");this._label=e,this._descriptors=t}i(NE,wE=yE),NE.assertIsValidPredictedBox=function(e,t){if(yE.assertIsValidLabeledBox(e,t),!PC(e.score)||!PC(e.classScore))throw new Error(t+" - expected properties score ("+e.score+") and ("+e.classScore+") to be a number between [0, 1]")},Object.defineProperty(NE.prototype,"score",{get:function(){return this._score},enumerable:!1,configurable:!0}),Object.defineProperty(NE.prototype,"classScore",{get:function(){return this._classScore},enumerable:!1,configurable:!0});var wE,kE,gk=NE;function NE(e,t,n,r){e=wE.call(this,e,t)||this;return e._score=n,e._classScore=r,e}function IE(e){return e.detection instanceof YC}function SE(e,t){return Object.assign({},e,{detection:t})}(Fd=kE=kE||{}).TOP_LEFT="TOP_LEFT",Fd.TOP_RIGHT="TOP_RIGHT",Fd.BOTTOM_LEFT="BOTTOM_LEFT",Fd.BOTTOM_RIGHT="BOTTOM_RIGHT";var TE=function(e){var t=(e=void 0===e?{}:e).anchorPosition,n=e.backgroundColor,r=e.fontColor,a=e.fontSize,s=e.fontStyle,e=e.padding;this.anchorPosition=t||kE.TOP_LEFT,this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=e||4},CE=(EE.prototype.measureWidth=function(t){var e=this.options.padding;return this.text.map(function(e){return t.measureText(e).width}).reduce(function(e,t){return e<t?t:e},0)+2*e},EE.prototype.measureHeight=function(){var e=this.options,t=e.fontSize,e=e.padding;return this.text.length*t+2*e},EE.prototype.getUpperLeft=function(e,t){var n,r=this.options.anchorPosition,a=r===kE.BOTTOM_RIGHT||r===kE.TOP_RIGHT,r=r===kE.BOTTOM_LEFT||r===kE.BOTTOM_RIGHT,e=this.measureWidth(e),s=this.measureHeight(),a=a?this.anchor.x-e:this.anchor.x,r=r?this.anchor.y-s:this.anchor.y;return t?(n=t.width,t=t.height,{x:Math.max(Math.min(a,n-e),0),y:Math.max(Math.min(r,t-s),0)}):{x:a,y:r}},EE.prototype.draw=function(e){throw new Error("not supported")},EE);function EE(e,t,n){void 0===n&&(n={}),this.text="string"==typeof e?[e]:e instanceof EE?e.text:e,this.anchor=t,this.options=new TE(n)}var _E=function(e){var t=(e=void 0===e?{}:e).boxColor,n=e.lineWidth,r=e.label,e=e.drawLabelOptions,t=(this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r,{anchorPosition:kE.BOTTOM_LEFT,backgroundColor:this.boxColor});this.drawLabelOptions=new TE(Object.assign({},t,e))},AE=($E.prototype.draw=function(e){throw new Error("Not supported")},$E);function $E(e,t){void 0===t&&(t={}),this.box=new VC(e),this.options=new _E(t)}function RE(e,t){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("not supported")})})}function FE(o,t){return c(this,void 0,void 0,function(){return R(this,function(e){if(!_C(o)&&!AC(o))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(AC(o)&&1<o.shape[0])throw new Error("extractFaceTensors - batchSize > 1 not supported");return[2,O(function(){var e=o.shape.slice(AC(o)?1:0),a=e[0],s=e[1],i=e[2];return t.map(function(e){return e instanceof YC?e.forSize(s,a).box:e}).map(function(e){return e.clipAtImageBorders(s,a)}).map(function(e){var t=e.x,n=e.y,r=e.width,e=e.height;return Nc(o.as3D(a,s,i),[n,t,0],[e,r,i])})})]})})}function DE(e){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("Not supported")})})}Object.defineProperty(ME.prototype,"imageTensors",{get:function(){return this._imageTensors},enumerable:!1,configurable:!0}),Object.defineProperty(ME.prototype,"isBatchInput",{get:function(){return 1<this.batchSize||this._treatAsBatchInput},enumerable:!1,configurable:!0}),Object.defineProperty(ME.prototype,"batchSize",{get:function(){return this._batchSize},enumerable:!1,configurable:!0}),Object.defineProperty(ME.prototype,"inputDimensions",{get:function(){return this._inputDimensions},enumerable:!1,configurable:!0}),Object.defineProperty(ME.prototype,"inputSize",{get:function(){return this._inputSize},enumerable:!1,configurable:!0}),Object.defineProperty(ME.prototype,"reshapedInputDimensions",{get:function(){var n=this;return LC(this.batchSize,0,1).map(function(e,t){return n.getReshapedInputDimensions(t)})},enumerable:!1,configurable:!0}),ME.prototype.getInput=function(e){return this.imageTensors[e]},ME.prototype.getInputDimensions=function(e){return this._inputDimensions[e]},ME.prototype.getInputHeight=function(e){return this._inputDimensions[e][0]},ME.prototype.getInputWidth=function(e){return this._inputDimensions[e][1]},ME.prototype.getReshapedInputDimensions=function(e){if("number"!=typeof this.inputSize)throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");return OC({width:this.getInputWidth(e),height:this.getInputHeight(e)},this.inputSize)},ME.prototype.toBatchTensor=function(r,a){var s=this;return void 0===a&&(a=!0),this._inputSize=r,O(function(){var e=LC(s.batchSize,0,1).map(function(e){var t,n=s.getInput(e);if(n instanceof v)return(t=(t=nE(t=AC(n)?n:n.expandDims(),a)).shape[1]===r&&t.shape[2]===r?t:op.resizeBilinear(t,[r,r])).as3D(r,r,3);throw new Error("toBatchTensor - at batchIdx "+e+", expected input to be instanceof tf.Tensor, instead have "+n)});return Dc(e.map(function(e){return e.toFloat()})).as4D(s.batchSize,r,r,3)})};var OE=ME;function ME(e,t){var r=this;if(void 0===t&&(t=!1),this._imageTensors=[],this._treatAsBatchInput=!1,this._inputDimensions=[],!Array.isArray(e))throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have "+e);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach(function(e,t){if(_C(e))return r._imageTensors[t]=e,void(r._inputDimensions[t]=e.shape);if(!AC(e))throw new Error("tensor expected");var n=e.shape[0];if(1!==n)throw new Error("NetInput - tf.Tensor4D with batchSize "+n+" passed, but not supported in input array");r._imageTensors[t]=e,r._inputDimensions[t]=e.shape.slice(1)})}function LE(a){return c(this,void 0,void 0,function(){var n,r,t;return R(this,function(e){if(a instanceof OE)return[2,a];if((n=Array.isArray(a)?a:[a]).length)return r=function(e){return Array.isArray(a)?" at input index "+e+":":""},(t=n.map(function(e){return e})).forEach(function(e,t){if(!_C(e)&&!AC(e)){if("string"==typeof n[t])throw new Error("toNetInput -"+r(t)+" string passed, but could not resolve HTMLElement for element id "+n[t]);throw new Error("toNetInput -"+r(t)+" expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id")}if(AC(e)){e=e.shape[0];if(1!==e)throw new Error("toNetInput -"+r(t)+" tf.Tensor4D with batchSize "+e+" passed, but not supported in input array")}}),[2,new OE(t,Array.isArray(a))];throw new Error("toNetInput - empty array passed as input")})})}Object.defineProperty(zE.prototype,"params",{get:function(){return this._params},enumerable:!1,configurable:!0}),Object.defineProperty(zE.prototype,"paramMappings",{get:function(){return this._paramMappings},enumerable:!1,configurable:!0}),Object.defineProperty(zE.prototype,"isLoaded",{get:function(){return!!this.params},enumerable:!1,configurable:!0}),zE.prototype.getParamFromPath=function(e){e=this.traversePropertyPath(e);return e.obj[e.objProp]},zE.prototype.reassignParamFromPath=function(e,t){var e=this.traversePropertyPath(e),n=e.obj,e=e.objProp;n[e].dispose(),n[e]=t},zE.prototype.getParamList=function(){var t=this;return this._paramMappings.map(function(e){e=e.paramPath;return{path:e,tensor:t.getParamFromPath(e)}})},zE.prototype.getTrainableParams=function(){return this.getParamList().filter(function(e){return e.tensor instanceof Ka})},zE.prototype.getFrozenParams=function(){return this.getParamList().filter(function(e){return!(e.tensor instanceof Ka)})},zE.prototype.variable=function(){var n=this;this.getFrozenParams().forEach(function(e){var t=e.path,e=e.tensor;n.reassignParamFromPath(t,e.variable())})},zE.prototype.freeze=function(){var r=this;this.getTrainableParams().forEach(function(e){var t=e.path,e=e.tensor,n=vs(e.dataSync());e.dispose(),r.reassignParamFromPath(t,n)})},zE.prototype.dispose=function(t){void 0===t&&(t=!0),this.getParamList().forEach(function(e){if(t&&e.tensor.isDisposed)throw new Error("param tensor has already been disposed for path "+e.path);e.tensor.dispose()}),this._params=void 0},zE.prototype.serializeParams=function(){return new Float32Array(this.getParamList().map(function(e){e=e.tensor;return Array.from(e.dataSync())}).reduce(function(e,t){return e.concat(t)}))},zE.prototype.load=function(e){return c(this,void 0,void 0,function(){return R(this,function(e){return[2,Promise.reject("not supopret")]})})},zE.prototype.loadFromUri=function(e){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("Not supported")})})},zE.prototype.loadFromWeightMap=function(e){var e=this.extractParamsFromWeigthMap(e),t=e.paramMappings,e=e.params;this._paramMappings=t,this._params=e},zE.prototype.extractWeights=function(e){var e=this.extractParams(e),t=e.paramMappings,e=e.params;this._paramMappings=t,this._params=e},zE.prototype.traversePropertyPath=function(n){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");var e=n.split("/").reduce(function(e,t){if(e.nextObj.hasOwnProperty(t))return{obj:e.nextObj,objProp:t,nextObj:e.nextObj[t]};throw new Error("traversePropertyPath - object does not have property "+t+", for path "+n)},{nextObj:this.params}),t=e.obj,e=e.objProp;if(t&&e&&t[e]instanceof v)return{obj:t,objProp:e};throw new Error("traversePropertyPath - parameter is not a tensor, for path "+n)};Pd=zE;function zE(e){this._name=e,this._params=void 0,this._paramMappings=[]}function PE(t,n,r){return O(function(){var e=gc(t,n.depthwise_filter,n.pointwise_filter,r,"same");return E(e,n.bias)})}function BE(r,a,s){return void 0===s&&(s=!1),O(function(){var e=cc(s?E(ou(r,a.conv0.filters,[2,2],"same"),a.conv0.bias):PE(r,a.conv0,[2,2])),t=PE(e,a.conv1,[1,1]),n=PE(cc(E(e,t)),a.conv2,[1,1]);return cc(E(e,E(t,n)))})}function WE(a,s,i,o){return void 0===i&&(i=!1),void 0===o&&(o=!0),O(function(){var e=cc(i?E(ou(a,s.conv0.filters,o?[2,2]:[1,1],"same"),s.conv0.bias):PE(a,s.conv0,o?[2,2]:[1,1])),t=PE(e,s.conv1,[1,1]),n=PE(cc(E(e,t)),s.conv2,[1,1]),r=PE(cc(E(e,E(t,n))),s.conv3,[1,1]);return cc(E(e,E(t,E(n,r))))})}function VE(t,n,r,a){return void 0===r&&(r="same"),void 0===a&&(a=!1),O(function(){var e=E(ou(t,n.filters,[1,1],r),n.bias);return a?cc(e):e})}function UE(e,n){Object.keys(e).forEach(function(t){n.some(function(e){return e.originalPath===t})||e[t].dispose()})}function GE(a,s){return function(e,t,n,r){n=Bc(a(e*t*n*n),[n,n,e,t]),e=zc(a(t));return s.push({paramPath:r+"/filters"},{paramPath:r+"/bias"}),{filters:n,bias:e}}}function jE(r,a){return function(e,t,n){e=Pc(r(e*t),[e,t]),t=zc(r(t));return a.push({paramPath:n+"/weights"},{paramPath:n+"/bias"}),{weights:e,bias:t}}}var HE=function(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n};function qE(a,s){return function(e,t,n){var r=Bc(a(9*e),[3,3,e,1]),e=Bc(a(e*t),[1,1,e,t]),t=zc(a(t));return s.push({paramPath:n+"/depthwise_filter"},{paramPath:n+"/pointwise_filter"},{paramPath:n+"/bias"}),new HE(r,e,t)}}function KE(r){return function(e){var t=r(e+"/depthwise_filter",4),n=r(e+"/pointwise_filter",4),e=r(e+"/bias",1);return new HE(t,n,e)}}function XE(a,s){return function(e,t,n){var r=a[e];if(CC(r,t))return s.push({originalPath:e,paramPath:n||e}),r;throw new Error("expected weightMap["+e+"] to be a Tensor"+t+"D, instead have "+r)}}function YE(e){var n=e;return{extractWeights:function(e){var t=n.slice(0,e);return n=n.slice(e),t},getRemainingWeights:function(){return n}}}function JE(e,t){var a=GE(e,t),s=qE(e,t);function i(e,t,n,r){return{conv0:(r=void 0===r?!1:r)?a(e,t,3,n+"/conv0"):s(e,t,n+"/conv0"),conv1:s(t,t,n+"/conv1"),conv2:s(t,t,n+"/conv2")}}return{extractDenseBlock3Params:i,extractDenseBlock4Params:function(e,t,n,r){return{conv0:(e=i(e,t,n,r=void 0===r?!1:r)).conv0,conv1:e.conv1,conv2:e.conv2,conv3:s(t,t,n+"/conv3")}}}}function ZE(t){return function(e){return{filters:t(e+"/filters",4),bias:t(e+"/bias",1)}}}function QE(e,t){var e=XE(e,t),n=ZE(e),r=KE(e);return{extractDenseBlock3Params:function(e,t){return{conv0:((t=void 0===t?!1:t)?n:r)(e+"/conv0"),conv1:r(e+"/conv1"),conv2:r(e+"/conv2")}},extractDenseBlock4Params:function(e,t){return{conv0:((t=void 0===t?!1:t)?n:r)(e+"/conv0"),conv1:r(e+"/conv1"),conv2:r(e+"/conv2"),conv3:r(e+"/conv3")}}}}i(n_,e_=Pd),n_.prototype.forwardInput=function(t){var n=this.params;if(n)return O(function(){var e=WE(tE(t.toBatchTensor(112,!0),[122.782,117.001,104.298]).div(P(255)),n.dense0,!0),e=WE(e,n.dense1);return e=WE(e,n.dense2),e=WE(e,n.dense3),Bo(e,[7,7],[2,2],"valid")});throw new Error("FaceFeatureExtractor - load model before inference")},n_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},n_.prototype.getDefaultModelName=function(){return"face_feature_extractor_model"},n_.prototype.extractParamsFromWeigthMap=function(e){return n={dense0:(n=QE(e=e,t=[]).extractDenseBlock4Params)("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")},UE(e,t),{params:n,paramMappings:t};var t,n},n_.prototype.extractParams=function(e){var t=[],n=(e=YE(e=e)).extractWeights,e=e.getRemainingWeights,r=(n=JE(n,t).extractDenseBlock4Params)(3,32,"dense0",!0),a=n(32,64,"dense1"),s=n(64,128,"dense2"),n=n(128,256,"dense3");if(0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{paramMappings:t,params:{dense0:r,dense1:a,dense2:s,dense3:n}}};var e_,t_=n_;function n_(){return e_.call(this,"FaceFeatureExtractor")||this}function r_(e,t){return O(function(){return E(T(e,t.weights),t.bias)})}function a_(t){var n={},r={};return Object.keys(t).forEach(function(e){(e.startsWith("fc")?r:n)[e]=t[e]}),{featureExtractorMap:n,classifierMap:r}}i(i_,s_=Pd),Object.defineProperty(i_.prototype,"faceFeatureExtractor",{get:function(){return this._faceFeatureExtractor},enumerable:!1,configurable:!0}),i_.prototype.runNet=function(t){var n=this,r=this.params;if(r)return O(function(){var e=t instanceof OE?n.faceFeatureExtractor.forwardInput(t):t;return r_(e.as2D(e.shape[0],-1),r.fc)});throw new Error(this._name+" - load model before inference")},i_.prototype.dispose=function(e){this.faceFeatureExtractor.dispose(e=void 0===e?!0:e),s_.prototype.dispose.call(this,e)},i_.prototype.loadClassifierParams=function(e){var e=this.extractClassifierParams(e),t=e.params,e=e.paramMappings;this._params=t,this._paramMappings=e},i_.prototype.extractClassifierParams=function(e){var t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=[],a=(e=YE(e)).extractWeights,e=e.getRemainingWeights,a=jE(a,r)(t,n,"fc");if(0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{paramMappings:r,params:{fc:a}}},i_.prototype.extractParamsFromWeigthMap=function(e){var t,n,e=a_(e),r=e.featureExtractorMap,e=e.classifierMap;return this.faceFeatureExtractor.loadFromWeightMap(r),n={fc:{weights:(n=XE(r=e,e=[]))((t="fc")+"/weights",2),bias:n(t+"/bias",1)}},UE(r,e),{params:n,paramMappings:e}},i_.prototype.extractParams=function(e){var t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),t=n*t+n,n=e.slice(0,e.length-t),e=e.slice(e.length-t);return this.faceFeatureExtractor.extractWeights(n),this.extractClassifierParams(e)};var s_,hf=i_;function i_(e,t){e=s_.call(this,e)||this;return e._faceFeatureExtractor=t,e}var o_=["neutral","happy","sad","angry","fearful","disgusted","surprised"],u_=(l_.prototype.asSortedArray=function(){var t=this;return o_.map(function(e){return{expression:e,probability:t[e]}}).sort(function(e,t){return t.probability-e.probability})},l_);function l_(n){var r=this;if(7!==n.length)throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: "+n.length);o_.forEach(function(e,t){r[e]=n[t]})}i(h_,c_=hf),h_.prototype.forwardInput=function(e){var t=this;return O(function(){return Sc(t.runNet(e))})},h_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},h_.prototype.predictExpressions=function(s){return c(this,void 0,void 0,function(){var t,n,r,a=this;return R(this,function(e){switch(e.label){case 0:return[4,LE(s)];case 1:return t=e.sent(),[4,this.forwardInput(t)];case 2:return n=e.sent(),[4,Promise.all(jc(n).map(function(n){return c(a,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return[4,n.data()];case 1:return t=e.sent(),n.dispose(),[2,t]}})})}))];case 3:return r=e.sent(),n.dispose(),r=r.map(function(e){return new u_(e)}),[2,t.isBatchInput?r:r[0]]}})})},h_.prototype.getDefaultModelName=function(){return"face_expression_model"},h_.prototype.getClassifierChannelsIn=function(){return 256},h_.prototype.getClassifierChannelsOut=function(){return 7};var c_,yf=h_;function h_(e){return void 0===e&&(e=new t_),c_.call(this,"FaceExpressionNet",e)||this}function p_(e){return e.expressions instanceof u_}function d_(e,t){return Object.assign({},e,{expressions:t})}function f_(e){return IE(e)&&e.landmarks instanceof oE&&e.unshiftedLandmarks instanceof oE&&e.alignedRect instanceof YC}function m_(e,t){var n=e.detection.box,n=t.shiftBy(n.x,n.y),r=n.align(),a=e.detection.imageDims,r=new YC(e.detection.score,r.rescale(a.reverse()),a);return Object.assign({},e,{landmarks:n,unshiftedLandmarks:t,alignedRect:r})}var g_=function(e){var t=(e=void 0===e?{}:e).drawLines,n=void 0===(n=e.drawPoints)||n,r=e.lineWidth,a=e.lineColor,s=e.pointSize,e=e.pointColor;this.drawLines=void 0===t||t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=e||"rgba(255, 0, 255, 1)"},y_=(v_.prototype.draw=function(e){throw new Error("Not supported")},v_);function v_(e,t){void 0===t&&(t={}),this.faceLandmarks=e,this.options=new g_(t)}Tf=Object.freeze({__proto__:null,drawContour:function(r,a,e){if(void 0===e&&(e=!1),r.beginPath(),a.slice(1).forEach(function(e,t){var n=e.x,e=e.y,t=a[t];r.moveTo(t.x,t.y),r.lineTo(n,e)}),e){var e=a[a.length-1],t=a[0];if(!e||!t)return;r.moveTo(e.x,e.y),r.lineTo(t.x,t.y)}r.stroke()},drawDetections:function(n,e){(Array.isArray(e)?e:[e]).forEach(function(e){var t=e instanceof YC?e.score:IE(e)?e.detection.score:void 0,e=e instanceof YC?e.box:IE(e)?e.detection.box:new VC(e),t=t?""+FC(t):void 0;new AE(e,{label:t}).draw(n)})},drawFaceExpressions:function(n,e,r,a){void 0===r&&(r=.1),(Array.isArray(e)?e:[e]).forEach(function(e){var t=e instanceof u_?e:p_(e)?e.expressions:void 0;if(!t)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");t=t.asSortedArray().filter(function(e){return e.probability>r}),e=IE(e)?e.detection.box.bottomLeft:a||new BC(0,0);new CE(t.map(function(e){return e.expression+" ("+FC(e.probability)+")"}),e).draw(n)})},DrawBoxOptions:_E,DrawBox:AE,DrawFaceLandmarksOptions:g_,DrawFaceLandmarks:y_,drawFaceLandmarks:function(t,e){(Array.isArray(e)?e:[e]).forEach(function(e){e=e instanceof oE?e:f_(e)?e.landmarks:void 0;if(!e)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new y_(e).draw(t)})},get AnchorPosition(){return kE},DrawTextFieldOptions:TE,DrawTextField:CE});function b_(e,t){var r=GE(e,t),a=qE(e,t);return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:function(e,t,n){return{separable_conv0:a(e,t,n+"/separable_conv0"),separable_conv1:a(t,t,n+"/separable_conv1"),expansion_conv:r(e,t,1,n+"/expansion_conv")}},extractMainBlockParams:function(e,t){return{separable_conv0:a(e,e,t+"/separable_conv0"),separable_conv1:a(e,e,t+"/separable_conv1"),separable_conv2:a(e,e,t+"/separable_conv2")}}}}function x_(e,t){var e=XE(e,t),n=ZE(e),r=KE(e);return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:function(e){return{separable_conv0:r(e+"/separable_conv0"),separable_conv1:r(e+"/separable_conv1"),expansion_conv:n(e+"/expansion_conv")}},extractMainBlockParams:function(e){return{separable_conv0:r(e+"/separable_conv0"),separable_conv1:r(e+"/separable_conv1"),separable_conv2:r(e+"/separable_conv2")}}}}function w_(e,t,n){return E(ou(e,t.filters,n,"same"),t.bias)}function k_(e,t,n){n=PE((n=void 0===n?!0:n)?cc(e):e,t.separable_conv0,[1,1]);return n=PE(cc(n),t.separable_conv1,[1,1]),n=bl(n,[3,3],[2,2],"same"),E(n,w_(e,t.expansion_conv,[2,2]))}i(S_,N_=Pd),S_.prototype.forwardInput=function(t){var n=this,a=this.params;if(a)return O(function(){var e=tE(t.toBatchTensor(112,!0),[122.782,117.001,104.298]).div(P(256)),r=k_(r=cc(w_(e,a.entry_flow.conv_in,[2,2])),a.entry_flow.reduction_block_0,!1);return r=k_(r,a.entry_flow.reduction_block_1),LC(n._numMainBlocks,0,1).forEach(function(e){var t,n;t=r,e=a.middle_flow["main_block_"+e],n=PE(cc(t),e.separable_conv0,[1,1]),n=PE(cc(n),e.separable_conv1,[1,1]),n=PE(cc(n),e.separable_conv2,[1,1]),r=E(n,t)}),r=k_(r,a.exit_flow.reduction_block),r=cc(PE(r,a.exit_flow.separable_conv,[1,1]))});throw new Error("TinyXception - load model before inference")},S_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},S_.prototype.getDefaultModelName=function(){return"tiny_xception_model"},S_.prototype.extractParamsFromWeigthMap=function(e){return e=e,t=this._numMainBlocks,r=(o=x_(e,n=[])).extractConvParams,a=o.extractSeparableConvParams,s=o.extractReductionBlockParams,i=o.extractMainBlockParams,o={conv_in:r("entry_flow/conv_in"),reduction_block_0:s("entry_flow/reduction_block_0"),reduction_block_1:s("entry_flow/reduction_block_1")},u={},LC(t,0,1).forEach(function(e){u["main_block_"+e]=i("middle_flow/main_block_"+e)}),r={reduction_block:s("exit_flow/reduction_block"),separable_conv:a("exit_flow/separable_conv")},UE(e,n),{params:{entry_flow:o,middle_flow:u,exit_flow:r},paramMappings:n};var t,n,r,a,s,i,o,u},S_.prototype.extractParams=function(e){var t=this._numMainBlocks,n=[],r=(e=YE(e)).extractWeights,e=e.getRemainingWeights,a=(r=b_(r,n)).extractConvParams,s=r.extractSeparableConvParams,i=r.extractReductionBlockParams,o=r.extractMainBlockParams,r={conv_in:a(3,32,3,"entry_flow/conv_in"),reduction_block_0:i(32,64,"entry_flow/reduction_block_0"),reduction_block_1:i(64,128,"entry_flow/reduction_block_1")},u={};if(LC(t,0,1).forEach(function(e){u["main_block_"+e]=o(128,"middle_flow/main_block_"+e)}),a={reduction_block:i(128,256,"exit_flow/reduction_block"),separable_conv:s(256,512,"exit_flow/separable_conv")},0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{paramMappings:n,params:{entry_flow:r,middle_flow:u,exit_flow:a}}};var N_,I_=S_;function S_(e){var t=N_.call(this,"TinyXception")||this;return t._numMainBlocks=e,t}u.Gender=void 0,(Nh=u.Gender||(u.Gender={})).FEMALE="female",Nh.MALE="male";i(C_,T_=Pd),Object.defineProperty(C_.prototype,"faceFeatureExtractor",{get:function(){return this._faceFeatureExtractor},enumerable:!1,configurable:!0}),C_.prototype.runNet=function(t){var n=this,r=this.params;if(r)return O(function(){var e=t instanceof OE?n.faceFeatureExtractor.forwardInput(t):t,e=Bo(e,[7,7],[2,2],"valid").as2D(e.shape[0],-1);return{age:r_(e,r.fc.age).as1D(),gender:r_(e,r.fc.gender)}});throw new Error(this._name+" - load model before inference")},C_.prototype.forwardInput=function(n){var r=this;return O(function(){var e=r.runNet(n),t=e.age,e=e.gender;return{age:t,gender:Sc(e)}})},C_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},C_.prototype.predictAgeAndGender=function(s){return c(this,void 0,void 0,function(){var t,n,r,a,o=this;return R(this,function(e){switch(e.label){case 0:return[4,LE(s)];case 1:return t=e.sent(),[4,this.forwardInput(t)];case 2:return n=e.sent(),a=jc(n.age),r=jc(n.gender),a=a.map(function(e,t){return{ageTensor:e,genderTensor:r[t]}}),[4,Promise.all(a.map(function(e){var s=e.ageTensor,i=e.genderTensor;return c(o,void 0,void 0,function(){var t,n,r,a;return R(this,function(e){switch(e.label){case 0:return[4,s.data()];case 1:return t=e.sent()[0],[4,i.data()];case 2:return n=e.sent()[0],r=(a=.5<n)?u.Gender.MALE:u.Gender.FEMALE,a=a?n:1-n,s.dispose(),i.dispose(),[2,{age:t,gender:r,genderProbability:a}]}})})}))];case 3:return a=e.sent(),n.age.dispose(),n.gender.dispose(),[2,t.isBatchInput?a:a[0]]}})})},C_.prototype.getDefaultModelName=function(){return"age_gender_model"},C_.prototype.dispose=function(e){this.faceFeatureExtractor.dispose(e=void 0===e?!0:e),T_.prototype.dispose.call(this,e)},C_.prototype.loadClassifierParams=function(e){var e=this.extractClassifierParams(e),t=e.params,e=e.paramMappings;this._params=t,this._paramMappings=e},C_.prototype.extractClassifierParams=function(e){var t=[],n=(e=YE(e=e)).extractWeights,e=e.getRemainingWeights,r=(n=jE(n,t))(512,1,"fc/age"),n=n(512,2,"fc/gender");if(0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{paramMappings:t,params:{fc:{age:r,gender:n}}}},C_.prototype.extractParamsFromWeigthMap=function(e){var t,n,e=a_(e),r=e.featureExtractorMap,e=e.classifierMap;return this.faceFeatureExtractor.loadFromWeightMap(r),t=XE(r=e,e=[]),n={fc:{age:a("fc/age"),gender:a("fc/gender")}},UE(r,e),{params:n,paramMappings:e};function a(e){return{weights:t(e+"/weights",2),bias:t(e+"/bias",1)}}},C_.prototype.extractParams=function(e){var t=e.slice(0,e.length-1539),e=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(e)};var T_,Rh=C_;function C_(e){void 0===e&&(e=new I_(2));var t=T_.call(this,"AgeGenderNet")||this;return t._faceFeatureExtractor=e,t}function E_(e){return{readFile:null}}var __,gd={initialize:function(){},createFileSystem:E_,createNodejsEnv:function(){var e=E_();return NC({Canvas:null,CanvasRenderingContext2D:null,Image:null,ImageData:null,Video:null,createCanvasElement:null,createImageElement:null,fetch:fetch},e)},monkeyPatch:function(e){throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()")},isBrowser:function(){return!1},isNodejs:function(){return!1}},bd=(i(A_,__=hf),A_.prototype.postProcess=function(e,a,t){var s=t.map(function(e){var t=e.width,e=e.height,n=a/Math.max(e,t);return{width:t*n,height:e*n}}),i=s.length;return O(function(){function n(e,t){return Dc([Mu([68],e),Mu([68],t)],1).as2D(1,136).as1D()}function r(e,t){var n=(e=s[e]).width,e=e.height;return t(n,e)?Math.abs(n-e)/2:0}return e.mul(Mu([i,136],a)).sub(Dc(Array.from(Array(i),function(e,t){return n(r(t,function(e,t){return e<t}),r(t,function(e,t){return t<e}))}))).div(Dc(Array.from(Array(i),function(e,t){return n(s[t].width,s[t].height)})))})},A_.prototype.forwardInput=function(t){var n=this;return O(function(){var e=n.runNet(t);return n.postProcess(e,t.inputSize,t.inputDimensions.map(function(e){return{height:e[0],width:e[1]}}))})},A_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},A_.prototype.detectLandmarks=function(a){return c(this,void 0,void 0,function(){var u,t,n,r=this;return R(this,function(e){switch(e.label){case 0:return[4,LE(a)];case 1:return u=e.sent(),t=O(function(){return jc(r.forwardInput(u))}),[4,Promise.all(t.map(function(i,o){return c(r,void 0,void 0,function(){var t,n,r,a,s;return R(this,function(e){switch(e.label){case 0:return r=(n=Array).from,[4,i.data()];case 1:return t=r.apply(n,[e.sent()]),a=t.filter(function(e,t){return RC(t)}),s=t.filter(function(e,t){return!RC(t)}),[2,new pE(Array(68).fill(0).map(function(e,t){return new BC(a[t],s[t])}),{height:u.getInputHeight(o),width:u.getInputWidth(o)})]}})})}))];case 2:return n=e.sent(),t.forEach(function(e){return e.dispose()}),[2,u.isBatchInput?n:n[0]]}})})},A_.prototype.getClassifierChannelsOut=function(){return 136},A_);function A_(){return null!==__&&__.apply(this,arguments)||this}i(R_,$_=bd),R_.prototype.getDefaultModelName=function(){return"face_landmark_68_model"},R_.prototype.getClassifierChannelsIn=function(){return 256};var $_,np=R_;function R_(e){return void 0===e&&(e=new t_),$_.call(this,"FaceLandmark68Net",e)||this}i(O_,F_=Pd),O_.prototype.forwardInput=function(t){var n=this.params;if(n)return O(function(){var e=BE(tE(t.toBatchTensor(112,!0),[122.782,117.001,104.298]).div(P(255)),n.dense0,!0),e=BE(e,n.dense1);return e=BE(e,n.dense2),Bo(e,[14,14],[2,2],"valid")});throw new Error("TinyFaceFeatureExtractor - load model before inference")},O_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},O_.prototype.getDefaultModelName=function(){return"face_feature_extractor_tiny_model"},O_.prototype.extractParamsFromWeigthMap=function(e){return n={dense0:(n=QE(e=e,t=[]).extractDenseBlock3Params)("dense0",!0),dense1:n("dense1"),dense2:n("dense2")},UE(e,t),{params:n,paramMappings:t};var t,n},O_.prototype.extractParams=function(e){var t=[],n=(e=YE(e=e)).extractWeights,e=e.getRemainingWeights,r=(n=JE(n,t).extractDenseBlock3Params)(3,32,"dense0",!0),a=n(32,64,"dense1"),n=n(64,128,"dense2");if(0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{paramMappings:t,params:{dense0:r,dense1:a,dense2:n}}};var F_,D_=O_;function O_(){return F_.call(this,"TinyFaceFeatureExtractor")||this}i(L_,M_=bd),L_.prototype.getDefaultModelName=function(){return"face_landmark_68_tiny_model"},L_.prototype.getClassifierChannelsIn=function(){return 128};var M_,Id=L_;function L_(e){return void 0===e&&(e=new D_),M_.call(this,"FaceLandmark68TinyNet",e)||this}i(P_,z_=np);var z_,Cd=P_;function P_(){return null!==z_&&z_.apply(this,arguments)||this}function B_(e,t,n,r,a){void 0===a&&(a="same");var s=t.conv,i=s.filters,s=s.bias,e=ou(e,i,n,a),e=E(e,s);return i=e,n=t.scale,e=E(w(i,n.weights),n.biases),r?cc(e):e}function W_(e,t){return B_(e,t,[1,1],!1)}function V_(e,t){return B_(e,t,[2,2],!0,"valid")}function U_(s,a){function i(e,t,n,r){e=function(e,t,n){var r=s(e),a=r.length/(t*n*n);if($C(a))throw new Error("depth has to be an integer: "+a+", weights.length: "+r.length+", numFilters: "+t+", filterSize: "+n);return O(function(){return vi(Bc(r,[t,a,n,n]),[2,3,1,0])})}(e,t,n),n=zc(s(t));return a.push({paramPath:r+"/filters"},{paramPath:r+"/bias"}),{filters:e,bias:n}}function o(e,t,n,r){e=i(e,t,n,r+"/conv");return n=r+"/scale",t=zc(s(r=t)),r=zc(s(r)),a.push({paramPath:n+"/weights"},{paramPath:n+"/biases"}),{conv:e,scale:{weights:t,biases:r}}}return{extractConvLayerParams:o,extractResidualLayerParams:function(e,t,n,r,a){return{conv1:o(((a=void 0===a?!1:a)?.5:1)*e,t,n,r+"/conv1"),conv2:o(e,t,n,r+"/conv2")}}}}function G_(e,t){var n=XE(e,t);function r(e){return{conv:{filters:n(e+"/conv/filters",4),bias:n(e+"/conv/bias",1)},scale:{weights:n((e=e)+"/scale/weights",1),biases:n(e+"/scale/biases",1)}}}return{extractConvLayerParams:r,extractResidualLayerParams:function(e){return{conv1:r(e+"/conv1"),conv2:r(e+"/conv2")}}}}function j_(e,t){t=W_(B_(e,t.conv1,[1,1],!0),t.conv2);return t=E(t,e),cc(t)}function H_(e,t){var n,r=V_(e,t.conv1),t=(r=W_(r,t.conv2),Bo(e,2,2,"valid")),e=Il(t.shape),a=t.shape[3]!==r.shape[3];return(t.shape[1]!==r.shape[1]||t.shape[2]!==r.shape[2])&&((n=IC(r.shape))[1]=1,n=Il(n),(n=IC((r=Vo([r,n],1)).shape))[2]=1,n=Il(n),r=Vo([r,n],2)),t=a?Vo([t,e],3):t,r=E(t,r),r=cc(r)}i(X_,q_=Pd),X_.prototype.forwardInput=function(t){var n=this.params;if(n)return O(function(){var e=V_(tE(t.toBatchTensor(150,!0).toFloat(),[122.782,117.001,104.298]).div(P(256)),n.conv32_down),e=(e=j_(e=bl(e,3,2,"valid"),n.conv32_1),e=j_(e,n.conv32_2),e=j_(e,n.conv32_3),e=j_(e=H_(e,n.conv64_down),n.conv64_1),e=j_(e,n.conv64_2),e=j_(e,n.conv64_3),e=j_(e=H_(e,n.conv128_down),n.conv128_1),e=j_(e,n.conv128_2),e=j_(e=H_(e,n.conv256_down),n.conv256_1),(e=H_(e=j_(e,n.conv256_2),n.conv256_down_out)).mean([1,2]));return T(e,n.fc)});throw new Error("FaceRecognitionNet - load model before inference")},X_.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},X_.prototype.computeFaceDescriptor=function(s){return c(this,void 0,void 0,function(){var t,n,r,a=this;return R(this,function(e){switch(e.label){case 0:return[4,LE(s)];case 1:return t=e.sent(),n=O(function(){return jc(a.forwardInput(t))}),[4,Promise.all(n.map(function(e){return e.data()}))];case 2:return r=e.sent(),n.forEach(function(e){return e.dispose()}),[2,t.isBatchInput?r:r[0]]}})})},X_.prototype.getDefaultModelName=function(){return"face_recognition_model"},X_.prototype.extractParamsFromWeigthMap=function(e){var t=[],n=(r=G_(e,t)).extractConvLayerParams,r=r.extractResidualLayerParams,n=n("conv32_down"),a=r("conv32_1"),s=r("conv32_2"),i=r("conv32_3"),o=r("conv64_down"),u=r("conv64_1"),l=r("conv64_2"),c=r("conv64_3"),h=r("conv128_down"),p=r("conv128_1"),d=r("conv128_2"),f=r("conv256_down"),m=r("conv256_1"),g=r("conv256_2"),r=r("conv256_down_out"),y=e.fc;if(t.push({originalPath:"fc",paramPath:"fc"}),EC(y))return n={conv32_down:n,conv32_1:a,conv32_2:s,conv32_3:i,conv64_down:o,conv64_1:u,conv64_2:l,conv64_3:c,conv128_down:h,conv128_1:p,conv128_2:d,conv256_down:f,conv256_1:m,conv256_2:g,conv256_down_out:r,fc:y},UE(e,t),{params:n,paramMappings:t};throw new Error("expected weightMap[fc] to be a Tensor2D, instead have "+y)},X_.prototype.extractParams=function(e){var t=(e=YE(e=e)).extractWeights,e=e.getRemainingWeights,n=[],r=(a=U_(t,n)).extractConvLayerParams,a=a.extractResidualLayerParams,r=r(4704,32,7,"conv32_down"),s=a(9216,32,3,"conv32_1"),i=a(9216,32,3,"conv32_2"),o=a(9216,32,3,"conv32_3"),u=a(36864,64,3,"conv64_down",!0),l=a(36864,64,3,"conv64_1"),c=a(36864,64,3,"conv64_2"),h=a(36864,64,3,"conv64_3"),p=a(147456,128,3,"conv128_down",!0),d=a(147456,128,3,"conv128_1"),f=a(147456,128,3,"conv128_2"),m=a(589824,256,3,"conv256_down",!0),g=a(589824,256,3,"conv256_1"),y=a(589824,256,3,"conv256_2"),a=a(589824,256,3,"conv256_down_out"),v=O(function(){return vi(Pc(t(32768),[128,256]),[1,0])});if(n.push({paramPath:"fc"}),0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{params:{conv32_down:r,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:l,conv64_2:c,conv64_3:h,conv128_down:p,conv128_1:d,conv128_2:f,conv256_down:m,conv256_1:g,conv256_2:y,conv256_down_out:a,fc:v},paramMappings:n}};var q_,K_=X_;function X_(){return q_.call(this,"FaceRecognitionNet")||this}function Y_(e,t){return Object.assign({},e,{descriptor:t})}function J_(e,t){return Object.assign({},e,{age:t})}function Z_(e,t,n){return Object.assign({},e,{gender:t,genderProbability:n})}Object.defineProperty(eA.prototype,"minFaceSize",{get:function(){return this._minFaceSize},enumerable:!1,configurable:!0}),Object.defineProperty(eA.prototype,"scaleFactor",{get:function(){return this._scaleFactor},enumerable:!1,configurable:!0}),Object.defineProperty(eA.prototype,"maxNumScales",{get:function(){return this._maxNumScales},enumerable:!1,configurable:!0}),Object.defineProperty(eA.prototype,"scoreThresholds",{get:function(){return this._scoreThresholds},enumerable:!1,configurable:!0}),Object.defineProperty(eA.prototype,"scaleSteps",{get:function(){return this._scaleSteps},enumerable:!1,configurable:!0});var Q_=eA;function eA(e){var e=void 0===e?{}:e,t=e.minFaceSize,n=e.scaleFactor,r=e.maxNumScales,a=e.scoreThresholds,e=e.scaleSteps;if(this._name="MtcnnOptions",this._minFaceSize=t||20,this._scaleFactor=n||.709,this._maxNumScales=r||10,this._scoreThresholds=a||[.6,.7,.7],this._scaleSteps=e,"number"!=typeof this._minFaceSize||this._minFaceSize<0)throw new Error(this._name+" - expected minFaceSize to be a number > 0");if("number"!=typeof this._scaleFactor||this._scaleFactor<=0||1<=this._scaleFactor)throw new Error(this._name+" - expected scaleFactor to be a number between 0 and 1");if("number"!=typeof this._maxNumScales||this._maxNumScales<0)throw new Error(this._name+" - expected maxNumScales to be a number > 0");if(!Array.isArray(this._scoreThresholds)||3!==this._scoreThresholds.length||this._scoreThresholds.some(function(e){return"number"!=typeof e}))throw new Error(this._name+" - expected scoreThresholds to be an array of numbers of length 3");if(this._scaleSteps&&(!Array.isArray(this._scaleSteps)||this._scaleSteps.some(function(e){return"number"!=typeof e})))throw new Error(this._name+" - expected scaleSteps to be an array of numbers")}function tA(l,c){function a(e,t,n,r,a){n=Bc(l(e*t*n*n),[n,n,e,t]),e=zc(l(t));return c.push({paramPath:r+"/filters"},{paramPath:r+"/"+(a?"batch_norm_offset":"bias")}),{filters:n,bias:e}}function h(e,t,n,r){e=a(e,t,n,r,!0);return{filters:e.filters,batch_norm_offset:e.bias}}function e(e,t,n){var r,a,s,i,o,u;return a=n+"/depthwise_conv",s=Bc(l(9*(r=e)),[3,3,r,1]),i=zc(l(r)),o=zc(l(r)),u=zc(l(r)),r=zc(l(r)),c.push({paramPath:a+"/filters"},{paramPath:a+"/batch_norm_scale"},{paramPath:a+"/batch_norm_offset"},{paramPath:a+"/batch_norm_mean"},{paramPath:a+"/batch_norm_variance"}),{depthwise_conv:{filters:s,batch_norm_scale:i,batch_norm_offset:o,batch_norm_mean:u,batch_norm_variance:r},pointwise_conv:h(e,t,1,n+"/pointwise_conv")}}return{extractMobilenetV1Params:function(){return{conv_0:h(3,32,3,"mobilenetv1/conv_0"),conv_1:e(32,64,"mobilenetv1/conv_1"),conv_2:e(64,128,"mobilenetv1/conv_2"),conv_3:e(128,128,"mobilenetv1/conv_3"),conv_4:e(128,256,"mobilenetv1/conv_4"),conv_5:e(256,256,"mobilenetv1/conv_5"),conv_6:e(256,512,"mobilenetv1/conv_6"),conv_7:e(512,512,"mobilenetv1/conv_7"),conv_8:e(512,512,"mobilenetv1/conv_8"),conv_9:e(512,512,"mobilenetv1/conv_9"),conv_10:e(512,512,"mobilenetv1/conv_10"),conv_11:e(512,512,"mobilenetv1/conv_11"),conv_12:e(512,1024,"mobilenetv1/conv_12"),conv_13:e(1024,1024,"mobilenetv1/conv_13")}},extractPredictionLayerParams:function(){return{conv_0:h(1024,256,1,"prediction_layer/conv_0"),conv_1:h(256,512,3,"prediction_layer/conv_1"),conv_2:h(512,128,1,"prediction_layer/conv_2"),conv_3:h(128,256,3,"prediction_layer/conv_3"),conv_4:h(256,128,1,"prediction_layer/conv_4"),conv_5:h(128,256,3,"prediction_layer/conv_5"),conv_6:h(256,64,1,"prediction_layer/conv_6"),conv_7:h(64,128,3,"prediction_layer/conv_7"),box_predictor_0:{box_encoding_predictor:a(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),class_predictor:a(512,9,1,"prediction_layer/box_predictor_0/class_predictor")},box_predictor_1:{box_encoding_predictor:a(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),class_predictor:a(1024,18,1,"prediction_layer/box_predictor_1/class_predictor")},box_predictor_2:{box_encoding_predictor:a(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),class_predictor:a(512,18,1,"prediction_layer/box_predictor_2/class_predictor")},box_predictor_3:{box_encoding_predictor:a(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),class_predictor:a(256,18,1,"prediction_layer/box_predictor_3/class_predictor")},box_predictor_4:{box_encoding_predictor:a(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),class_predictor:a(256,18,1,"prediction_layer/box_predictor_4/class_predictor")},box_predictor_5:{box_encoding_predictor:a(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),class_predictor:a(128,18,1,"prediction_layer/box_predictor_5/class_predictor")}}}}}function nA(e){var a,t=[],n=(a=XE(e,t),{extractMobilenetV1Params:function(){return{conv_0:s("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:i(1),conv_2:i(2),conv_3:i(3),conv_4:i(4),conv_5:i(5),conv_6:i(6),conv_7:i(7),conv_8:i(8),conv_9:i(9),conv_10:i(10),conv_11:i(11),conv_12:i(12),conv_13:i(13)}},extractPredictionLayerParams:function(){return{conv_0:s("Prediction",0,"prediction_layer/conv_0"),conv_1:s("Prediction",1,"prediction_layer/conv_1"),conv_2:s("Prediction",2,"prediction_layer/conv_2"),conv_3:s("Prediction",3,"prediction_layer/conv_3"),conv_4:s("Prediction",4,"prediction_layer/conv_4"),conv_5:s("Prediction",5,"prediction_layer/conv_5"),conv_6:s("Prediction",6,"prediction_layer/conv_6"),conv_7:s("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:u(0),box_predictor_1:u(1),box_predictor_2:u(2),box_predictor_3:u(3),box_predictor_4:u(4),box_predictor_5:u(5)}}}),r=n.extractMobilenetV1Params,n=n.extractPredictionLayerParams;function s(e,t,n){return{filters:a(e+"/Conv2d_"+t+"_pointwise/weights",4,n+"/filters"),batch_norm_offset:a(e+"/Conv2d_"+t+"_pointwise/convolution_bn_offset",1,n+"/batch_norm_offset")}}function i(e){var t="mobilenetv1/conv_"+e,n="MobilenetV1/Conv2d_"+e+"_depthwise",r=t+"/depthwise_conv",t=t+"/pointwise_conv";return{depthwise_conv:{filters:a(n+"/depthwise_weights",4,r+"/filters"),batch_norm_scale:a(n+"/BatchNorm/gamma",1,r+"/batch_norm_scale"),batch_norm_offset:a(n+"/BatchNorm/beta",1,r+"/batch_norm_offset"),batch_norm_mean:a(n+"/BatchNorm/moving_mean",1,r+"/batch_norm_mean"),batch_norm_variance:a(n+"/BatchNorm/moving_variance",1,r+"/batch_norm_variance")},pointwise_conv:s("MobilenetV1",e,t)}}function o(e,t){return{filters:a(e+"/weights",4,t+"/filters"),bias:a(e+"/biases",1,t+"/bias")}}function u(e){return{box_encoding_predictor:o("Prediction/BoxPredictor_"+e+"/BoxEncodingPredictor","prediction_layer/box_predictor_"+e+"/box_encoding_predictor"),class_predictor:o("Prediction/BoxPredictor_"+e+"/ClassPredictor","prediction_layer/box_predictor_"+e+"/class_predictor")}}var l=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!_C(l))throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have "+l);r={mobilenetv1:r(),prediction_layer:n(),output_layer:{extra_dim:l}};return UE(e,t),{params:r,paramMappings:t}}function rA(t,n,r){return O(function(){var e=ou(t,n.filters,r,"same"),e=E(e,n.batch_norm_offset);return nu(e,0,6)})}var aA=.0010000000474974513;function sA(e,t){return O(function(){var o=null,u=rA(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach(function(e,t){var n,r,a,s,t=t+1,i=(n=t,[2,4,6,12].some(function(e){return e===n})?[2,2]:[1,1]);r=u,a=e.depthwise_conv,s=i,u=rA(u=O(function(){var e=xu(r,a.filters,s,"same"),e=Ko(e,a.batch_norm_mean,a.batch_norm_variance,a.batch_norm_offset,a.batch_norm_scale,aA);return nu(e,0,6)}),e.pointwise_conv,[1,1]),11===t&&(o=u)}),null===o)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:u,conv11:o}})}function iA(a,e,t,s,i){var n=a.shape[0],o=Math.min(t,n),t=e.map(function(e,t){return{score:e,boxIndex:t}}).filter(function(e){return e.score>i}).sort(function(e,t){return t.score-e.score}),u=[];return t.forEach(function(e){if(!(u.length>=o)){for(var t=e.score,n=u.length-1;0<=n;--n){var r=function(e,t,n){var e=e.arraySync(),r=Math.min(e[t][0],e[t][2]),a=Math.min(e[t][1],e[t][3]),s=Math.max(e[t][0],e[t][2]),t=Math.max(e[t][1],e[t][3]),i=Math.min(e[n][0],e[n][2]),o=Math.min(e[n][1],e[n][3]),u=Math.max(e[n][0],e[n][2]),e=Math.max(e[n][1],e[n][3]),n=(s-r)*(t-a),l=(u-i)*(e-o);if(n<=0||l<=0)return 0;r=Math.max(r,i),i=Math.max(a,o),a=Math.min(s,u),o=Math.min(t,e),s=Math.max(a-r,0)*Math.max(o-i,0);return s/(n+l-s)}(a,e.boxIndex,u[n]);if(0!==r&&(e.score*=r<=s?1:0,e.score<=i))break}t===e.score&&u.push(e.boxIndex)}}),u}function oA(e,t){e=e,e=jc(vi(e,[1,0]));var e={sizes:n=[k(e[2],e[0]),k(e[3],e[1])],centers:[E(e[0],y(n[0],P(2))),E(e[1],y(n[1],P(2)))]},n=e.sizes,e=e.centers,t=jc(vi(t,[1,0])),r=y(w($u(y(t[2],P(5))),n[0]),P(2)),a=E(w(y(t[0],P(10)),n[0]),e[0]),s=y(w($u(y(t[3],P(5))),n[1]),P(2)),t=E(w(y(t[1],P(10)),n[1]),e[1]);return vi(Dc([k(a,r),k(t,s),E(a,r),E(t,s)]),[1,0])}function uA(t,n){return O(function(){var e=t.shape[0];return{boxPredictionEncoding:M(VE(t,n.box_encoding_predictor),[e,-1,1,4]),classPrediction:M(VE(t,n.class_predictor),[e,-1,3])}})}Object.defineProperty(cA.prototype,"minConfidence",{get:function(){return this._minConfidence},enumerable:!1,configurable:!0}),Object.defineProperty(cA.prototype,"maxResults",{get:function(){return this._maxResults},enumerable:!1,configurable:!0});var lA=cA;function cA(e){var e=void 0===e?{}:e,t=e.minConfidence,e=e.maxResults;if(this._name="SsdMobilenetv1Options",this._minConfidence=t||.5,this._maxResults=e||100,"number"!=typeof this._minConfidence||this._minConfidence<=0||1<=this._minConfidence)throw new Error(this._name+" - expected minConfidence to be a number between 0 and 1");if("number"!=typeof this._maxResults)throw new Error(this._name+" - expected maxResults to be a number")}i(dA,hA=Pd),dA.prototype.forwardInput=function(n){var l=this.params;if(l)return O(function(){var i,o,u,r,a,s,e=n.toBatchTensor(512,!1).toFloat(),e=sA(k(w(e,P(.007843137718737125)),P(1)),l.mobilenetv1),e=(i=e.out,o=e.conv11,u=l.prediction_layer,O(function(){var e=rA(i,u.conv_0,[1,1]),e=rA(e,u.conv_1,[2,2]),t=rA(e,u.conv_2,[1,1]),t=rA(t,u.conv_3,[2,2]),n=rA(t,u.conv_4,[1,1]),n=rA(n,u.conv_5,[2,2]),r=rA(n,u.conv_6,[1,1]),r=rA(r,u.conv_7,[2,2]),a=uA(o,u.box_predictor_0),s=uA(i,u.box_predictor_1),e=uA(e,u.box_predictor_2),t=uA(t,u.box_predictor_3),n=uA(n,u.box_predictor_4),r=uA(r,u.box_predictor_5);return{boxPredictions:Vo([a.boxPredictionEncoding,s.boxPredictionEncoding,e.boxPredictionEncoding,t.boxPredictionEncoding,n.boxPredictionEncoding,r.boxPredictionEncoding],1),classPredictions:Vo([a.classPrediction,s.classPrediction,e.classPrediction,t.classPrediction,n.classPrediction,r.classPrediction],1)}})),t=e.boxPredictions,e=e.classPredictions;return r=t,a=e,s=l.output_layer,O(function(){var e=r.shape[0],t=oA(M(Du(s.extra_dim,[e,1,1]),[-1,4]),M(r,[-1,4])),t=M(t,[e,t.shape[0]/e,4]),n=Uo(Go(a,[0,0,1],[-1,-1,-1])),n=Go(n,[0,0,0],[-1,-1,1]),n=M(n,[e,n.shape[1]]);return{boxes:jc(t),scores:jc(n)}})});throw new Error("SsdMobilenetv1 - load model before inference")},dA.prototype.forward=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent()])]}})})},dA.prototype.locateFaces=function(v,b){return void 0===b&&(b={}),c(this,void 0,void 0,function(){var t,n,s,r,a,i,o,u,l,c,h,p,d,f,m,g,y;return R(this,function(e){switch(e.label){case 0:return n=new lA(b),t=n.maxResults,n=n.minConfidence,[4,LE(v)];case 1:for(s=e.sent(),i=this.forwardInput(s),r=i.boxes,a=i.scores,i=r[0],o=a[0],u=1;u<r.length;u++)r[u].dispose(),a[u].dispose();return h=(c=Array).from,[4,o.data()];case 2:return l=h.apply(c,[e.sent()]),p=iA(i,l,t,.5,n),d=s.getReshapedInputDimensions(0),y=s.inputSize,f=y/d.width,m=y/d.height,g=i.arraySync(),y=p.map(function(e){var t=[Math.max(0,g[e][0]),Math.min(1,g[e][2])].map(function(e){return e*m}),n=t[0],t=t[1],r=[Math.max(0,g[e][1]),Math.min(1,g[e][3])].map(function(e){return e*f}),a=r[0],r=r[1];return new YC(l[e],new sE(a,n,r-a,t-n),{height:s.getInputHeight(0),width:s.getInputWidth(0)})}),i.dispose(),o.dispose(),[2,y]}})})},dA.prototype.getDefaultModelName=function(){return"ssd_mobilenetv1_model"},dA.prototype.extractParamsFromWeigthMap=nA,dA.prototype.extractParams=function(e){var t=[],n=(e=YE(e=e)).extractWeights,e=e.getRemainingWeights,r=(a=tA(n,t)).extractMobilenetV1Params,a=a.extractPredictionLayerParams,r=r(),a=a(),n={extra_dim:wi(n(20472),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{params:{mobilenetv1:r,prediction_layer:a,output_layer:n},paramMappings:t}};var hA,pA=dA;function dA(){return hA.call(this,"SsdMobilenetv1")||this}function fA(e){var t=new pA;return t.extractWeights(e),t}i(gA,mA=pA);var mA,zd=gA;function gA(){return null!==mA&&mA.apply(this,arguments)||this}var yA=[new BC(.738768,.874946),new BC(2.42204,2.65704),new BC(4.30971,7.04493),new BC(10.246,4.59428),new BC(12.6868,11.8741)],vA=[new BC(1.603231,2.094468),new BC(6.041143,7.080126),new BC(2.882459,3.518061),new BC(4.266906,5.178857),new BC(9.041765,10.66308)],bA=[117.001,114.697,97.404],xA=function(e){return"number"==typeof e};function wA(e){if(!e)throw new Error("invalid config: "+e);if("boolean"!=typeof e.withSeparableConvs)throw new Error("config.withSeparableConvs has to be a boolean, have: "+e.withSeparableConvs);if(!xA(e.iouThreshold)||e.iouThreshold<0||1<e.iouThreshold)throw new Error("config.iouThreshold has to be a number between [0, 1], have: "+e.iouThreshold);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(function(e){return"string"==typeof e}))throw new Error("config.classes has to be an array class names: string[], have: "+JSON.stringify(e.classes));if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(function(e){return e||{}}).every(function(e){return xA(e.x)&&xA(e.y)}))throw new Error("config.anchors has to be an array of { x: number, y: number }, have: "+JSON.stringify(e.anchors));if(e.meanRgb&&(!Array.isArray(e.meanRgb)||3!==e.meanRgb.length||!e.meanRgb.every(xA)))throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: "+JSON.stringify(e.meanRgb))}function kA(t){return O(function(){var e=w(t,P(.10000000149011612));return E(cc(k(t,e)),e)})}function NA(t,n){return O(function(){var e=Ll(t,[[0,0],[1,1],[1,1],[0,0]]),e=ou(e,n.conv.filters,[1,1],"valid");return e=k(e,n.bn.sub),e=w(e,n.bn.truediv),kA(E(e,n.conv.bias))})}function IA(t,n){return O(function(){var e=Ll(t,[[0,0],[1,1],[1,1],[0,0]]),e=gc(e,n.depthwise_filter,n.pointwise_filter,[1,1],"valid");return kA(E(e,n.bias))})}function SA(a,s){var i=GE(a,s);var e=qE(a,s);return{extractConvParams:i,extractConvWithBatchNormParams:function(e,t,n){var r,e=i(e,t,3,n+"/conv");return n=n+"/bn",r=zc(a(t=t)),t=zc(a(t)),s.push({paramPath:n+"/sub"},{paramPath:n+"/truediv"}),{conv:e,bn:{sub:r,truediv:t}}},extractSeparableConvParams:e}}function TA(e,t){var n=XE(e,t);function r(e){return{filters:n(e+"/filters",4),bias:n(e+"/bias",1)}}return{extractConvParams:r,extractConvWithBatchNormParams:function(e){return{conv:r(e+"/conv"),bn:{sub:n((e=e+"/bn")+"/sub",1),truediv:n(e+"/truediv",1)}}},extractSeparableConvParams:KE(n)}}u.TinyYolov2SizeType=void 0,(Jd=u.TinyYolov2SizeType||(u.TinyYolov2SizeType={}))[Jd.XS=224]="XS",Jd[Jd.SM=320]="SM",Jd[Jd.MD=416]="MD",Jd[Jd.LG=608]="LG";Object.defineProperty(EA.prototype,"inputSize",{get:function(){return this._inputSize},enumerable:!1,configurable:!0}),Object.defineProperty(EA.prototype,"scoreThreshold",{get:function(){return this._scoreThreshold},enumerable:!1,configurable:!0});var CA=EA;function EA(e){var e=void 0===e?{}:e,t=e.inputSize,e=e.scoreThreshold;if(this._name="TinyYolov2Options",this._inputSize=t||416,this._scoreThreshold=e||.5,"number"!=typeof this._inputSize||this._inputSize%32!=0)throw new Error(this._name+" - expected inputSize to be a number divisible by 32");if("number"!=typeof this._scoreThreshold||this._scoreThreshold<=0||1<=this._scoreThreshold)throw new Error(this._name+" - expected scoreThreshold to be a number between 0 and 1")}i(AA,_A=Pd),Object.defineProperty(AA.prototype,"config",{get:function(){return this._config},enumerable:!1,configurable:!0}),Object.defineProperty(AA.prototype,"withClassScores",{get:function(){return this.config.withClassScores||1<this.config.classes.length},enumerable:!1,configurable:!0}),Object.defineProperty(AA.prototype,"boxEncodingSize",{get:function(){return 5+(this.withClassScores?this.config.classes.length:0)},enumerable:!1,configurable:!0}),AA.prototype.runTinyYolov2=function(e,t){e=NA(e,t.conv0);return e=NA(bl(e,[2,2],[2,2],"same"),t.conv1),e=NA(bl(e,[2,2],[2,2],"same"),t.conv2),e=NA(bl(e,[2,2],[2,2],"same"),t.conv3),e=NA(bl(e,[2,2],[2,2],"same"),t.conv4),e=NA(bl(e,[2,2],[2,2],"same"),t.conv5),e=NA(bl(e,[2,2],[1,1],"same"),t.conv6),VE(NA(e,t.conv7),t.conv8,"valid",!1)},AA.prototype.runMobilenet=function(e,t){e=this.config.isFirstLayerConv2d?kA(VE(e,t.conv0,"valid",!1)):IA(e,t.conv0);return e=IA(e=bl(e,[2,2],[2,2],"same"),t.conv1),e=IA(e=bl(e,[2,2],[2,2],"same"),t.conv2),e=IA(e=bl(e,[2,2],[2,2],"same"),t.conv3),e=IA(e=bl(e,[2,2],[2,2],"same"),t.conv4),e=IA(e=bl(e,[2,2],[2,2],"same"),t.conv5),e=bl(e,[2,2],[1,1],"same"),e=t.conv6?IA(e,t.conv6):e,VE(e=t.conv7?IA(e,t.conv7):e,t.conv8,"valid",!1)},AA.prototype.forwardInput=function(t,n){var r=this,a=this.params;if(a)return O(function(){var e=t.toBatchTensor(n,!1).toFloat();return e=(e=r.config.meanRgb?tE(e,r.config.meanRgb):e).div(P(256)),r.config.withSeparableConvs?r.runMobilenet(e,a):r.runTinyYolov2(e,a)});throw new Error("TinyYolov2 - load model before inference")},AA.prototype.forward=function(n,r){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[4,t.apply(this,[e.sent(),r])];case 2:return[2,e.sent()]}})})},AA.prototype.detect=function(d,f){return void 0===f&&(f={}),c(this,void 0,void 0,function(){var t,n,r,a,s,i,o,u,l,c,h,p=this;return R(this,function(e){switch(e.label){case 0:return n=new CA(f),t=n.inputSize,n=n.scoreThreshold,[4,LE(d)];case 1:return r=e.sent(),[4,this.forwardInput(r,t)];case 2:return a=e.sent(),s=O(function(){return jc(a)[0].expandDims()}),i={width:r.getInputWidth(0),height:r.getInputHeight(0)},[4,this.extractBoxes(s,r.getReshapedInputDimensions(0),n)];case 3:return h=e.sent(),a.dispose(),s.dispose(),o=h.map(function(e){return e.box}),u=h.map(function(e){return e.score}),l=h.map(function(e){return e.classScore}),c=h.map(function(e){return p.config.classes[e.label]}),h=eE(o.map(function(e){return e.rescale(t)}),u,this.config.iouThreshold,!0),[2,h.map(function(e){return new qC(u[e],l[e],c[e],o[e],i)})]}})})},AA.prototype.getDefaultModelName=function(){return""},AA.prototype.extractParamsFromWeigthMap=function(e){return e=e,t=this.config,a=(i=TA(e,r=[])).extractConvParams,s=i.extractConvWithBatchNormParams,i=i.extractSeparableConvParams,t=t.withSeparableConvs?(n=t.filterSizes&&t.filterSizes.length||9,{conv0:(t.isFirstLayerConv2d?a:i)("conv0"),conv1:i("conv1"),conv2:i("conv2"),conv3:i("conv3"),conv4:i("conv4"),conv5:i("conv5"),conv6:7<n?i("conv6"):void 0,conv7:8<n?i("conv7"):void 0,conv8:a("conv8")}):{conv0:s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:s("conv6"),conv7:s("conv7"),conv8:a("conv8")},UE(e,r),{params:t,paramMappings:r};var t,n,r,a,s,i},AA.prototype.extractParams=function(e){var t=this.config.filterSizes||AA.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(7!==n&&8!==n&&9!==n)throw new Error("TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found "+n+" filterSizes in config");var r,a,s,i,o,u,l,c,h,n=e,e=this.config,p=this.boxEncodingSize,d=(n=YE(n)).extractWeights,n=n.getRemainingWeights,f=[],m=(d=SA(d,f)).extractConvParams,g=d.extractConvWithBatchNormParams,d=d.extractSeparableConvParams;if(e=e.withSeparableConvs?(r=t[0],a=t[1],s=t[2],i=t[3],o=t[4],u=t[5],l=t[6],c=t[7],h=t[8],{conv0:e.isFirstLayerConv2d?m(r,a,3,"conv0"):d(r,a,"conv0"),conv1:d(a,s,"conv1"),conv2:d(s,i,"conv2"),conv3:d(i,o,"conv3"),conv4:d(o,u,"conv4"),conv5:d(u,l,"conv5"),conv6:c?d(l,c,"conv6"):void 0,conv7:h?d(c,h,"conv7"):void 0,conv8:m(h||c||l,5*p,1,"conv8")}):(r=t[0],a=t[1],s=t[2],i=t[3],o=t[4],u=t[5],l=t[6],c=t[7],h=t[8],{conv0:g(r,a,"conv0"),conv1:g(a,s,"conv1"),conv2:g(s,i,"conv2"),conv3:g(i,o,"conv3"),conv4:g(o,u,"conv4"),conv5:g(u,l,"conv5"),conv6:g(l,c,"conv6"),conv7:g(c,h,"conv7"),conv8:m(h,5*p,1,"conv8")}),0!==n().length)throw new Error("weights remaing after extract: "+n().length);return{params:e,paramMappings:f}},AA.prototype.extractBoxes=function(I,S,T){return c(this,void 0,void 0,function(){var t,n,r,a,s,i,o,u,l,c,h,p,d,f,m,g,y,v,b,x,w,k,N=this;return R(this,function(e){switch(e.label){case 0:return t=S.width,o=S.height,n=Math.max(t,o),t=n/t,n=n/o,r=I.shape[1],a=this.config.anchors.length,o=O(function(){var e=I.reshape([r,r,a,N.boxEncodingSize]);return[e.slice([0,0,0,0],[r,r,a,4]),e.slice([0,0,0,4],[r,r,a,1]),N.withClassScores?Sc(e.slice([0,0,0,5],[r,r,a,N.config.classes.length]),3):P(0)]}),s=o[0],i=o[1],o=o[2],u=[],[4,i.array()];case 1:return l=e.sent(),[4,s.array()];case 2:c=e.sent(),h=0,e.label=3;case 3:if(!(h<r))return[3,12];p=0,e.label=4;case 4:if(!(p<r))return[3,11];d=0,e.label=5;case 5:return d<a?(f=rE(l[h][p][d][0]),!T||T<f?(y=(p+rE(c[h][p][d][0]))/r*t,v=(h+rE(c[h][p][d][1]))/r*n,m=Math.exp(c[h][p][d][2])*this.config.anchors[d].x/r*t,g=Math.exp(c[h][p][d][3])*this.config.anchors[d].y/r*n,y=y-m/2,v=v-g/2,b={row:h,col:p,anchor:d},this.withClassScores?[4,this.extractPredictedClass(o,b)]:[3,7]):[3,9]):[3,10];case 6:return k=e.sent(),[3,8];case 7:k={classScore:1,label:0},e.label=8;case 8:x=(w=k).classScore,w=w.label,u.push(NC({box:new jC(y,v,y+m,v+g),score:f,classScore:f*x,label:w},b)),e.label=9;case 9:return d++,[3,5];case 10:return p++,[3,4];case 11:return h++,[3,3];case 12:return s.dispose(),i.dispose(),o.dispose(),[2,u]}})})},AA.prototype.extractPredictedClass=function(t,i){return c(this,void 0,void 0,function(){var n,r,a,s;return R(this,function(e){switch(e.label){case 0:return n=i.row,r=i.col,a=i.anchor,[4,t.array()];case 1:return s=e.sent(),[2,Array(this.config.classes.length).fill(0).map(function(e,t){return s[n][r][a][t]}).map(function(e,t){return{classScore:e,label:t}}).reduce(function(e,t){return e.classScore>t.classScore?e:t})]}})})},AA.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var _A,sf=AA;function AA(e){var t=_A.call(this,"TinyYolov2")||this;return wA(e),t._config=e,t}i(FA,$A=sf),Object.defineProperty(FA.prototype,"withSeparableConvs",{get:function(){return this.config.withSeparableConvs},enumerable:!1,configurable:!0}),Object.defineProperty(FA.prototype,"anchors",{get:function(){return this.config.anchors},enumerable:!1,configurable:!0}),FA.prototype.locateFaces=function(t,n){return c(this,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return[4,this.detect(t,n)];case 1:return[2,e.sent().map(function(e){return new YC(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})})]}})})},FA.prototype.getDefaultModelName=function(){return this.withSeparableConvs?"tiny_yolov2_separable_conv_model":"tiny_yolov2_model"},FA.prototype.extractParamsFromWeigthMap=function(e){return $A.prototype.extractParamsFromWeigthMap.call(this,e)};var $A,RA=FA;function FA(e){void 0===e&&(e=!0);e=Object.assign({},{withSeparableConvs:e,iouThreshold:.4,classes:["face"]},e?{anchors:vA,meanRgb:bA}:{anchors:yA,withClassScores:!0});return $A.call(this,e)||this}i(MA,DA=CA);var DA,OA=MA;function MA(){var e=null!==DA&&DA.apply(this,arguments)||this;return e._name="TinyFaceDetectorOptions",e}LA.prototype.then=function(n){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=n,[4,this.run()];case 1:return[2,t.apply(void 0,[e.sent()])]}})})},LA.prototype.run=function(){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("ComposableTask - run is not implemented")})})};cf=LA;function LA(){}function zA(s,i,o,u,l){return void 0===l&&(l=function(e){return e.alignedRect}),c(this,void 0,void 0,function(){var t,n,r,a;return R(this,function(e){switch(e.label){case 0:return(a=s.map(function(e){return f_(e)?l(e):e.detection}),n=u)?[3,5]:i instanceof v?[4,FE(i,a)]:[3,2];case 1:return r=e.sent(),[3,4];case 2:return[4,RE()];case 3:r=e.sent(),e.label=4;case 4:n=r,e.label=5;case 5:return[4,o(t=n)];case 6:return a=e.sent(),t.forEach(function(e){return e instanceof v&&e.dispose()}),[2,a]}})})}function PA(t,r,a,s,i){return c(this,void 0,void 0,function(){var n=this;return R(this,function(e){return[2,zA([t],r,function(t){return c(n,void 0,void 0,function(){return R(this,function(e){return[2,a(t[0])]})})},s,i)]})})}function BA(n,r){var u=GE(n,r),l=jE(n,r);function c(e,t){e=zc(n(e));return r.push({paramPath:t}),e}function h(e,t,n){return void 0===n&&(n=!1),{conv1:u(e[0],e[1],3,t+"/conv1"),prelu1_alpha:c(e[1],t+"/prelu1_alpha"),conv2:u(e[1],e[2],3,t+"/conv2"),prelu2_alpha:c(e[2],t+"/prelu2_alpha"),conv3:u(e[2],e[3],n?2:3,t+"/conv3"),prelu3_alpha:c(e[3],t+"/prelu3_alpha")}}return{extractPNetParams:function(){var e=h([3,10,16,32],"pnet"),t=u(32,2,1,"pnet/conv4_1"),n=u(32,4,1,"pnet/conv4_2");return NC(NC({},e),{conv4_1:t,conv4_2:n})},extractRNetParams:function(){var e=h([3,28,48,64],"rnet",!0),t=l(576,128,"rnet/fc1"),n=c(128,"rnet/prelu4_alpha"),r=l(128,2,"rnet/fc2_1"),a=l(128,4,"rnet/fc2_2");return NC(NC({},e),{fc1:t,prelu4_alpha:n,fc2_1:r,fc2_2:a})},extractONetParams:function(){var e=h([3,32,64,64],"onet"),t=u(64,128,2,"onet/conv4"),n=c(128,"onet/prelu4_alpha"),r=l(1152,256,"onet/fc1"),a=c(256,"onet/prelu5_alpha"),s=l(256,2,"onet/fc2_1"),i=l(256,4,"onet/fc2_2"),o=l(256,10,"onet/fc2_3");return NC(NC({},e),{conv4:t,prelu4_alpha:n,fc1:r,prelu5_alpha:a,fc2_1:s,fc2_2:i,fc2_3:o})}}}function WA(e,t){var n=XE(e,t);function u(e){return{filters:n(e+"/weights",4,e+"/filters"),bias:n(e+"/bias",1)}}function l(e){return{weights:n(e+"/weights",2),bias:n(e+"/bias",1)}}function c(e){return n(e,1)}function h(e){return{conv1:u(e+"/conv1"),prelu1_alpha:c(e+"/prelu1_alpha"),conv2:u(e+"/conv2"),prelu2_alpha:c(e+"/prelu2_alpha"),conv3:u(e+"/conv3"),prelu3_alpha:c(e+"/prelu3_alpha")}}return{extractPNetParams:function(){var e=h("pnet"),t=u("pnet/conv4_1"),n=u("pnet/conv4_2");return NC(NC({},e),{conv4_1:t,conv4_2:n})},extractRNetParams:function(){var e=h("rnet"),t=l("rnet/fc1"),n=c("rnet/prelu4_alpha"),r=l("rnet/fc2_1"),a=l("rnet/fc2_2");return NC(NC({},e),{fc1:t,prelu4_alpha:n,fc2_1:r,fc2_2:a})},extractONetParams:function(){var e=h("onet"),t=u("onet/conv4"),n=c("onet/prelu4_alpha"),r=l("onet/fc1"),a=c("onet/prelu5_alpha"),s=l("onet/fc2_1"),i=l("onet/fc2_2"),o=l("onet/fc2_3");return NC(NC({},e),{conv4:t,prelu4_alpha:n,fc1:r,prelu5_alpha:a,fc2_1:s,fc2_2:i,fc2_3:o})}}}i(GA,VA=Pd),GA.prototype.load=function(t){return c(this,void 0,void 0,function(){return R(this,function(e){return console.warn("mtcnn is deprecated and will be removed soon"),[2,VA.prototype.load.call(this,t)]})})},GA.prototype.forwardInput=function(e,t){return c(this,void 0,void 0,function(){return R(this,function(e){return[2,Promise.reject("not supported")]})})},GA.prototype.forward=function(n,r){return void 0===r&&(r={}),c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[4,t.apply(this,[e.sent(),r])];case 2:return[2,e.sent().results]}})})},GA.prototype.forwardWithStats=function(n,r){return void 0===r&&(r={}),c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=this.forwardInput,[4,LE(n)];case 1:return[2,t.apply(this,[e.sent(),r])]}})})},GA.prototype.getDefaultModelName=function(){return"mtcnn_model"},GA.prototype.extractParamsFromWeigthMap=function(e){return n=(a=WA(e=e,t=[])).extractPNetParams,r=a.extractRNetParams,a=a.extractONetParams,n=n(),r=r(),a=a(),UE(e,t),{params:{pnet:n,rnet:r,onet:a},paramMappings:t};var t,n,r,a},GA.prototype.extractParams=function(e){var t=(e=YE(e=e)).extractWeights,e=e.getRemainingWeights,n=[],r=(t=BA(t,n)).extractPNetParams,a=t.extractRNetParams,t=t.extractONetParams,r=r(),a=a(),t=t();if(0!==e().length)throw new Error("weights remaing after extract: "+e().length);return{params:{pnet:r,rnet:a,onet:t},paramMappings:n}};var VA,UA=GA;function GA(){return VA.call(this,"Mtcnn")||this}var jA,HA=[new BC(1.603231,2.094468),new BC(6.041143,7.080126),new BC(2.882459,3.518061),new BC(4.266906,5.178857),new BC(9.041765,10.66308)],qA=[117.001,114.697,97.404],KA=(i(XA,jA=sf),Object.defineProperty(XA.prototype,"anchors",{get:function(){return this.config.anchors},enumerable:!1,configurable:!0}),XA.prototype.locateFaces=function(t,n){return c(this,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return[4,this.detect(t,n)];case 1:return[2,e.sent().map(function(e){return new YC(e.score,e.relativeBox,{width:e.imageWidth,height:e.imageHeight})})]}})})},XA.prototype.getDefaultModelName=function(){return"tiny_face_detector_model"},XA.prototype.extractParamsFromWeigthMap=function(e){return jA.prototype.extractParamsFromWeigthMap.call(this,e)},XA);function XA(){return jA.call(this,{withSeparableConvs:!0,iouThreshold:.4,classes:["face"],anchors:HA,meanRgb:qA,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]})||this}function YA(e,t){return e$.ssdMobilenetv1.locateFaces(e,t)}function JA(e){return e$.faceLandmark68Net.detectLandmarks(e)}function ZA(e){return e$.ssdMobilenetv1.load(e)}var QA,e$={ssdMobilenetv1:new pA,tinyFaceDetector:new KA,tinyYolov2:new RA,mtcnn:new UA,faceLandmark68Net:new np,faceLandmark68TinyNet:new Id,faceRecognitionNet:new K_,faceExpressionNet:new yf,ageGenderNet:new Rh},gf=ZA,a=YA,kd=JA,Ed=(i(t$,QA=cf),t$);function t$(e,t,n){var r=QA.call(this)||this;return r.parentTask=e,r.input=t,r.extractedFaces=n,r}i(a$,n$=Ed),a$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n,r=this;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return[4,zA(t=e.sent(),this.input,function(t){return c(r,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return[4,Promise.all(t.map(function(e){return e$.faceExpressionNet.predictExpressions(e)}))];case 1:return[2,e.sent()]}})})},this.extractedFaces)];case 2:return n=e.sent(),[2,t.map(function(e,t){return d_(e,n[t])})]}})})},a$.prototype.withAgeAndGender=function(){return new y$(this,this.input)};var n$,r$=a$;function a$(){return null!==n$&&n$.apply(this,arguments)||this}i(o$,s$=Ed),o$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return(t=e.sent())?[4,PA(t,this.input,function(e){return e$.faceExpressionNet.predictExpressions(e)},this.extractedFaces)]:[2];case 2:return n=e.sent(),[2,d_(t,n)]}})})},o$.prototype.withAgeAndGender=function(){return new x$(this,this.input)};var s$,i$=o$;function o$(){return null!==s$&&s$.apply(this,arguments)||this}i(c$,u$=r$),c$.prototype.withAgeAndGender=function(){return new N$(this,this.input)},c$.prototype.withFaceDescriptors=function(){return new $$(this,this.input)};var u$,l$=c$;function c$(){return null!==u$&&u$.apply(this,arguments)||this}i(d$,h$=i$),d$.prototype.withAgeAndGender=function(){return new T$(this,this.input)},d$.prototype.withFaceDescriptor=function(){return new D$(this,this.input)};var h$,p$=d$;function d$(){return null!==h$&&h$.apply(this,arguments)||this}i(m$,f$=cf);var f$,Md=m$;function m$(e,t,n){var r=f$.call(this)||this;return r.parentTask=e,r.input=t,r.extractedFaces=n,r}i(v$,g$=Md),v$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,r,n=this;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return[4,zA(t=e.sent(),this.input,function(t){return c(n,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return[4,Promise.all(t.map(function(e){return e$.ageGenderNet.predictAgeAndGender(e)}))];case 1:return[2,e.sent()]}})})},this.extractedFaces)];case 2:return r=e.sent(),[2,t.map(function(e,t){var t=r[t],n=t.age;return J_(Z_(e,t.gender,t.genderProbability),n)})]}})})},v$.prototype.withFaceExpressions=function(){return new r$(this,this.input)};var g$,y$=v$;function v$(){return null!==g$&&g$.apply(this,arguments)||this}i(w$,b$=Md),w$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n,r,a;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return(t=e.sent())?[4,PA(t,this.input,function(e){return e$.ageGenderNet.predictAgeAndGender(e)},this.extractedFaces)]:[2];case 2:return a=e.sent(),n=a.age,r=a.gender,a=a.genderProbability,[2,J_(Z_(t,r,a),n)]}})})},w$.prototype.withFaceExpressions=function(){return new i$(this,this.input)};var b$,x$=w$;function w$(){return null!==b$&&b$.apply(this,arguments)||this}i(I$,k$=y$),I$.prototype.withFaceExpressions=function(){return new l$(this,this.input)},I$.prototype.withFaceDescriptors=function(){return new $$(this,this.input)};var k$,N$=I$;function I$(){return null!==k$&&k$.apply(this,arguments)||this}i(C$,S$=x$),C$.prototype.withFaceExpressions=function(){return new p$(this,this.input)},C$.prototype.withFaceDescriptor=function(){return new D$(this,this.input)};var S$,T$=C$;function C$(){return null!==S$&&S$.apply(this,arguments)||this}i(_$,E$=cf);var E$,Kd=_$;function _$(e,t){var n=E$.call(this)||this;return n.parentTask=e,n.input=t,n}i(R$,A$=Kd),R$.prototype.run=function(){return c(this,void 0,void 0,function(){var n;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return[4,zA(n=e.sent(),this.input,function(e){return Promise.all(e.map(function(e){return e$.faceRecognitionNet.computeFaceDescriptor(e)}))},null,function(e){return e.landmarks.align(null,{useDlibAlignment:!0})})];case 2:return[2,e.sent().map(function(e,t){return Y_(n[t],e)})]}})})},R$.prototype.withFaceExpressions=function(){return new l$(this,this.input)},R$.prototype.withAgeAndGender=function(){return new N$(this,this.input)};var A$,$$=R$;function R$(){return null!==A$&&A$.apply(this,arguments)||this}i(O$,F$=Kd),O$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return(t=e.sent())?[4,PA(t,this.input,function(e){return e$.faceRecognitionNet.computeFaceDescriptor(e)},null,function(e){return e.landmarks.align(null,{useDlibAlignment:!0})})]:[2];case 2:return n=e.sent(),[2,Y_(t,n)]}})})},O$.prototype.withFaceExpressions=function(){return new p$(this,this.input)},O$.prototype.withAgeAndGender=function(){return new T$(this,this.input)};var F$,D$=O$;function O$(){return null!==F$&&F$.apply(this,arguments)||this}i(L$,M$=cf),Object.defineProperty(L$.prototype,"landmarkNet",{get:function(){return this.useTinyLandmarkNet?e$.faceLandmark68TinyNet:e$.faceLandmark68Net},enumerable:!1,configurable:!0});var M$,rf=L$;function L$(e,t,n){var r=M$.call(this)||this;return r.parentTask=e,r.input=t,r.useTinyLandmarkNet=n,r}i(B$,z$=rf),B$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n,r,a,s,i=this;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return(t=e.sent(),n=t.map(function(e){return e.detection}),this.input instanceof v)?[4,FE(this.input,n)]:[3,3];case 2:return a=e.sent(),[3,5];case 3:return[4,RE(this.input)];case 4:a=e.sent(),e.label=5;case 5:return r=a,[4,Promise.all(r.map(function(e){return i.landmarkNet.detectLandmarks(e)}))];case 6:return s=e.sent(),r.forEach(function(e){return e instanceof v&&e.dispose()}),[2,t.map(function(e,t){return m_(e,s[t])})]}})})},B$.prototype.withFaceExpressions=function(){return new l$(this,this.input)},B$.prototype.withAgeAndGender=function(){return new N$(this,this.input)},B$.prototype.withFaceDescriptors=function(){return new $$(this,this.input)};var z$,P$=B$;function B$(){return null!==z$&&z$.apply(this,arguments)||this}i(U$,W$=rf),U$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n,r,a;return R(this,function(e){switch(e.label){case 0:return[4,this.parentTask];case 1:return(t=e.sent())?(a=t.detection,this.input instanceof v?[4,FE(this.input,[a])]:[3,3]):[2];case 2:return r=e.sent(),[3,5];case 3:return[4,RE(this.input)];case 4:r=e.sent(),e.label=5;case 5:return n=r,[4,this.landmarkNet.detectLandmarks(n[0])];case 6:return a=e.sent(),n.forEach(function(e){return e instanceof v&&e.dispose()}),[2,m_(t,a)]}})})},U$.prototype.withFaceExpressions=function(){return new p$(this,this.input)},U$.prototype.withAgeAndGender=function(){return new T$(this,this.input)},U$.prototype.withFaceDescriptor=function(){return new D$(this,this.input)};var W$,V$=U$;function U$(){return null!==W$&&W$.apply(this,arguments)||this}i(j$,G$=cf);var G$,wd=j$;function j$(e,t){void 0===t&&(t=new lA);var n=G$.call(this)||this;return n.input=e,n.options=t,n}i(K$,H$=wd),K$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n,r;return R(this,function(e){switch(e.label){case 0:return(t=(r=this).input,(n=r.options)instanceof Q_)?[4,e$.mtcnn.forward(t,n)]:[3,2];case 1:return[2,e.sent().map(function(e){return e.detection})];case 2:if(r=n instanceof OA?function(e){return e$.tinyFaceDetector.locateFaces(e,n)}:n instanceof lA?function(e){return e$.ssdMobilenetv1.locateFaces(e,n)}:n instanceof CA?function(e){return e$.tinyYolov2.locateFaces(e,n)}:null)return[2,r(t)];throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options")}})})},K$.prototype.runAndExtendWithFaceDetections=function(){var e=this;return new Promise(function(n){return c(e,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return[4,this.run()];case 1:return t=e.sent(),[2,n(t.map(function(e){return SE({},e)}))]}})})})},K$.prototype.withFaceLandmarks=function(e){return void 0===e&&(e=!1),new P$(this.runAndExtendWithFaceDetections(),this.input,e)},K$.prototype.withFaceExpressions=function(){return new r$(this.runAndExtendWithFaceDetections(),this.input)},K$.prototype.withAgeAndGender=function(){return new y$(this.runAndExtendWithFaceDetections(),this.input)};var H$,q$=K$;function K$(){return null!==H$&&H$.apply(this,arguments)||this}i(J$,X$=wd),J$.prototype.run=function(){return c(this,void 0,void 0,function(){var t,n;return R(this,function(e){switch(e.label){case 0:return[4,new q$(this.input,this.options)];case 1:return t=e.sent(),n=t[0],t.forEach(function(e){e.score>n.score&&(n=e)}),[2,n]}})})},J$.prototype.runAndExtendWithFaceDetection=function(){var e=this;return new Promise(function(n){return c(e,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return[4,this.run()];case 1:return t=e.sent(),[2,n(t?SE({},t):void 0)]}})})})},J$.prototype.withFaceLandmarks=function(e){return void 0===e&&(e=!1),new V$(this.runAndExtendWithFaceDetection(),this.input,e)},J$.prototype.withFaceExpressions=function(){return new i$(this.runAndExtendWithFaceDetection(),this.input)},J$.prototype.withAgeAndGender=function(){return new x$(this.runAndExtendWithFaceDetection(),this.input)};var X$,Y$=J$;function J$(){return null!==X$&&X$.apply(this,arguments)||this}function Z$(e,t){return void 0===t&&(t=new lA),new q$(e,t)}function Q$(t,n){return c(this,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return console.warn("allFacesSsdMobilenetv1 is deprecated and will be removed soon, use the high level api instead"),[4,Z$(t,new lA(n?{minConfidence:n}:{})).withFaceLandmarks().withFaceDescriptors()];case 1:return[2,e.sent()]}})})}kw=Q$;function eR(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");var e=Array.from(e),n=Array.from(t);return Math.sqrt(e.map(function(e,t){return e-n[t]}).reduce(function(e,t){return e+Math.pow(t,2)},0))}Object.defineProperty(tR.prototype,"labeledDescriptors",{get:function(){return this._labeledDescriptors},enumerable:!1,configurable:!0}),Object.defineProperty(tR.prototype,"distanceThreshold",{get:function(){return this._distanceThreshold},enumerable:!1,configurable:!0}),tR.prototype.computeMeanDistance=function(t,e){return e.map(function(e){return eR(e,t)}).reduce(function(e,t){return e+t},0)/(e.length||1)},tR.prototype.matchDescriptor=function(n){var r=this;return this.labeledDescriptors.map(function(e){var t=e.descriptors,e=e.label;return new fE(e,r.computeMeanDistance(n,t))}).reduce(function(e,t){return e.distance<t.distance?e:t})},tR.prototype.findBestMatch=function(e){e=this.matchDescriptor(e);return e.distance<this.distanceThreshold?e:new fE("unknown",e.distance)},tR.prototype.toJSON=function(){return{distanceThreshold:this.distanceThreshold,labeledDescriptors:this.labeledDescriptors.map(function(e){return e.toJSON()})}},tR.fromJSON=function(e){return new tR(e.labeledDescriptors.map(function(e){return bE.fromJSON(e)}),e.distanceThreshold)};Cw=tR;function tR(e,t){this._distanceThreshold=t=void 0===t?.6:t;t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("FaceRecognizer.constructor - expected atleast one input");function n(){return"person "+r++}var r=1;this._labeledDescriptors=t.map(function(e){if(e instanceof bE)return e;if(e instanceof Float32Array)return new bE(n(),[e]);if(e.descriptor&&e.descriptor instanceof Float32Array)return new bE(n(),[e.descriptor]);throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>")})}u.AgeGenderNet=Rh,u.BoundingBox=jC,u.Box=VC,u.ComposableTask=cf,u.ComputeAllFaceDescriptorsTask=$$,u.ComputeFaceDescriptorsTaskBase=Kd,u.ComputeSingleFaceDescriptorTask=D$,u.DetectAllFaceLandmarksTask=P$,u.DetectAllFacesTask=q$,u.DetectFaceLandmarksTaskBase=rf,u.DetectFacesTaskBase=wd,u.DetectSingleFaceLandmarksTask=V$,u.DetectSingleFaceTask=Y$,u.Dimensions=SC,u.FACE_EXPRESSION_LABELS=o_,u.FaceDetection=YC,u.FaceDetectionNet=zd,u.FaceExpressionNet=yf,u.FaceExpressions=u_,u.FaceLandmark68Net=np,u.FaceLandmark68TinyNet=Id,u.FaceLandmarkNet=Cd,u.FaceLandmarks=oE,u.FaceLandmarks5=bf,u.FaceLandmarks68=pE,u.FaceMatch=fE,u.FaceMatcher=Cw,u.FaceRecognitionNet=K_,u.LabeledBox=yE,u.LabeledFaceDescriptors=bE,u.Mtcnn=UA,u.MtcnnOptions=Q_,u.NetInput=OE,u.NeuralNetwork=Pd,u.ObjectDetection=qC,u.Point=BC,u.PredictedBox=gk,u.Rect=sE,u.SsdMobilenetv1=pA,u.SsdMobilenetv1Options=lA,u.TinyFaceDetector=KA,u.TinyFaceDetectorOptions=OA,u.TinyYolov2=RA,u.TinyYolov2Options=CA,u.allFaces=kw,u.allFacesMtcnn=function(t,n){return void 0===n&&(n={}),c(this,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return console.warn("allFacesMtcnn is deprecated and will be removed soon, use the high level api instead"),[4,Z$(t,new Q_(n)).withFaceLandmarks().withFaceDescriptors()];case 1:return[2,e.sent()]}})})},u.allFacesSsdMobilenetv1=Q$,u.allFacesTinyYolov2=function(t,n){return void 0===n&&(n={}),c(this,void 0,void 0,function(){return R(this,function(e){switch(e.label){case 0:return console.warn("allFacesTinyYolov2 is deprecated and will be removed soon, use the high level api instead"),[4,Z$(t,new CA(n)).withFaceLandmarks().withFaceDescriptors()];case 1:return[2,e.sent()]}})})},u.awaitMediaLoaded=function(e){throw new Error("Not supported in react-native")},u.bufferToImage=function(e){throw new Error("Not supported")},u.computeFaceDescriptor=function(e){return e$.faceRecognitionNet.computeFaceDescriptor(e)},u.createCanvas=function(e){throw e.width,e.height,new Error("Not supported")},u.createCanvasFromMedia=function(e,t){throw new Error("Not supported")},u.createFaceDetectionNet=fA,u.createFaceRecognitionNet=function(e){var t=new K_;return t.extractWeights(e),t},u.createMtcnn=function(e){var t=new UA;return t.extractWeights(e),t},u.createSsdMobilenetv1=fA,u.createTinyFaceDetector=function(e){var t=new KA;return t.extractWeights(e),t},u.createTinyYolov2=function(e,t){return(t=new RA(t=void 0===t?!0:t)).extractWeights(e),t},u.detectAllFaces=Z$,u.detectFaceLandmarks=JA,u.detectFaceLandmarksTiny=function(e){return e$.faceLandmark68TinyNet.detectLandmarks(e)},u.detectLandmarks=kd,u.detectSingleFace=function(e,t){return void 0===t&&(t=new lA),new Y$(e,t)},u.draw=Tf,u.env=gd,u.euclideanDistance=eR,u.extendWithAge=J_,u.extendWithFaceDescriptor=Y_,u.extendWithFaceDetection=SE,u.extendWithFaceExpressions=d_,u.extendWithFaceLandmarks=m_,u.extendWithGender=Z_,u.extractFaceTensors=FE,u.extractFaces=RE,u.fetchImage=function(e){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("Not supported")})})},u.fetchJson=DE,u.fetchNetWeights=function(e){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("not supported")})})},u.fetchOrThrow=function(e,t){return c(this,void 0,void 0,function(){return R(this,function(e){return[2,Promise.reject("Not supported")]})})},u.getContext2dOrThrow=function(e){throw new Error("Not supported")},u.imageTensorToCanvas=function(e,t){return c(this,void 0,void 0,function(){return R(this,function(e){throw new Error("Not supported")})})},u.imageToSquare=function(e,t,n){throw new Error("Not supported")},u.inverseSigmoid=function(e){return Math.log(e/(1-e))},u.iou=ZC,u.isMediaElement=function(e){return!1},u.isWithAge=function(e){return"number"==typeof e.age},u.isWithFaceDetection=IE,u.isWithFaceExpressions=p_,u.isWithFaceLandmarks=f_,u.isWithGender=function(e){return(e.gender===u.Gender.MALE||e.gender===u.Gender.FEMALE)&&PC(e.genderProbability)},u.loadAgeGenderModel=function(e){return e$.ageGenderNet.load(e)},u.loadFaceDetectionModel=gf,u.loadFaceExpressionModel=function(e){return e$.faceExpressionNet.load(e)},u.loadFaceLandmarkModel=function(e){return e$.faceLandmark68Net.load(e)},u.loadFaceLandmarkTinyModel=function(e){return e$.faceLandmark68TinyNet.load(e)},u.loadFaceRecognitionModel=function(e){return e$.faceRecognitionNet.load(e)},u.loadMtcnnModel=function(e){return e$.mtcnn.load(e)},u.loadSsdMobilenetv1Model=ZA,u.loadTinyFaceDetectorModel=function(e){return e$.tinyFaceDetector.load(e)},u.loadTinyYolov2Model=function(e){return e$.tinyYolov2.load(e)},u.loadWeightMap=function(n,r){return c(this,void 0,void 0,function(){var t;return R(this,function(e){switch(e.label){case 0:return t=function(e,t){if(t+="-weights_manifest.json",!e)return{modelBaseUri:"",manifestUri:t};if("/"===e)return{modelBaseUri:"/",manifestUri:"/"+t};var n=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"",r=(e=e.replace(n,"")).split("/").filter(function(e){return e}),t=e.endsWith(".json")?r[r.length-1]:t,n=n+(e.endsWith(".json")?r.slice(0,r.length-1):r).join("/");return{modelBaseUri:n=e.startsWith("/")?"/"+n:n,manifestUri:"/"===n?"/"+t:n+"/"+t}}(n,r),t=t.modelBaseUri,[4,DE()];case 1:return[2,li(e.sent(),t)]}})})},u.locateFaces=a,u.matchDimensions=function(e,t,n){throw new Error("Not supported")},u.minBbox=QC,u.mtcnn=function(e,t){return e$.mtcnn.forward(e,t)},u.nets=e$,u.nonMaxSuppression=eE,u.normalize=tE,u.padToSquare=nE,u.predictAgeAndGender=function(e){return e$.ageGenderNet.predictAgeAndGender(e)},u.recognizeFaceExpressions=function(e){return e$.faceExpressionNet.predictExpressions(e)},u.resizeResults=function t(e,n){var r,n=new SC(n.width,n.height),a=n.width,s=n.height;if(a<=0||s<=0)throw new Error("resizeResults - invalid dimensions: "+JSON.stringify({width:a,height:s}));return Array.isArray(e)?e.map(function(e){return t(e,{width:a,height:s})}):f_(e)?(n=e.detection.forSize(a,s),r=e.unshiftedLandmarks.forSize(n.box.width,n.box.height),m_(SE(e,n),r)):IE(e)?SE(e,e.detection.forSize(a,s)):e instanceof oE||e instanceof YC?e.forSize(a,s):e},u.shuffleArray=function(e){for(var t=e.slice(),n=t.length-1;0<n;n--){var r=Math.floor(Math.random()*(n+1)),a=t[n];t[n]=t[r],t[r]=a}return t},u.sigmoid=rE,u.ssdMobilenetv1=YA,u.tf=pf,u.tinyFaceDetector=function(e,t){return e$.tinyFaceDetector.locateFaces(e,t)},u.tinyYolov2=function(e,t){return e$.tinyYolov2.locateFaces(e,t)},u.toNetInput=LE,u.utils=Zh,u.validateConfig=wA,Object.defineProperty(u,"__esModule",{value:!0})});
